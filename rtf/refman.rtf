{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment Arkanjo  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.1 \par
}}Arkanjo}
{\comment Generated by doxygen 1.13.2.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Arkanjo}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arkanjo\par \pard\plain 
{\tc\tcl1 \v Arkanjo}
{\xe \v Arkanjo}
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\par
This repository stores the Arkanjo tool, a tool for find code duplicated functions in codebases. The tool was implemented as part of my master degree's program. Information about tool usage can be found at the arkanjo folder.\par
The {\f2 master_artifacts}  folder contains only artifacts related specificaly to my master degree's program, you can ignore it.\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Main Components
\par}
{\tc\tcl3 \v Main Components}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b Arkanjo Module}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b Master Artifacts Module} \par}
\par
\par}
}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arkanjo Module\par \pard\plain 
{\tc\tcl1 \v Arkanjo Module}
{\xe \v Arkanjo Module}
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The arkanjo is a cli tool is designed to help developers find code duplications in their codebases. The tool is designed to find duplication in the scope of functions.\par
The current functionalities of the tool are:\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Explore the duplications on a codebases, enabling a limited amount of filters to the user.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Find all functions that are a duplication of a function given by the user.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Create a "relatory" of the number of duplications in the codebases separed by folder.\par}
\par
There are some other functionalities used for the cretor master degree, but should not matter for an end user.\par
From now on, we will use the term commands instead of functionalities.\par
The tool current should cover the C programming language. The tool also supports Java with limitations.\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Similarity
\par}
{\tc\tcl2 \v Similarity}
The tool current uses the concept of similarity. The user can pass a similarity threshold to the tool. This similarity threshold is used for limiting what the tool consider a duplication.\par
The similarity threshold is a number between 0 and 100. If you set the threshold to 0, everything is considered a duplication. If you set the threhold to 100, only complety equal functions are considered duplications. The current state of the tool gives good results for similarity threshols around ~90.\par
The arkanjo tool uses as a subrotine the {\f2 Duplicate Code Detection Tool} to generate the similarity metrics.\par}
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Requirements
\par}
{\tc\tcl2 \v Requirements}
The tool have only being tested on ubuntu operation systems. The instalation guide could included.\par}
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
How to install
\par}
{\tc\tcl2 \v How to install}
Run on the terminal the following commands to install the dependencies:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid sudo apt install python3-nltk\par
sudo apt install python3-gensim\par
sudo apt install python3-astor\par
sudo python3 -m nltk.downloader punkt\par
sudo apt-get install libjsoncpp-dev\par
}
\par
Download the source code:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid git clone https://github.com/LipArcanjo/arkanjo.git\par
}
\par
Go to the tool folder:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid cd arkanjo\par
}
\par
Build the binary:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid make preprocessor\par
make\par
}
\par}
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
How to Run
\par}
{\tc\tcl2 \v How to Run}
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Preprocessor
\par}
{\tc\tcl3 \v Preprocessor}
The tool is designed to have a heavy preprocesing, to enable the tool to answer different kind of queries fastly.\par
To do the preprocessing, execute the preprocessor:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ./preprocessor\par
}
\par
The preprocessor will ask for the complete path to the codebase you are interested to find code duplications and the similarity threshold.\par
The preprocessor can take a while to execute. Depending on the size of the codebases, it cannot run or take a some hours.\par}
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Execute the run
\par}
{\tc\tcl3 \v Execute the run}
To execute the tool and the tool functionalities, you need to run the command that respect this format:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ./exec command [command_parameters] [-pre] [-s <NUMBER>]\par
}
\par
If you have not executed the preprocessor, the tool will automatically call the preprocessor.\par
The shared parameters over all commands are:\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[-p] forces the preprocessor to execute.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[s <NUMBER>] changes the similarity threshould to NUMBER, but just for current command.\par}
\par
The following are the guide on how to execute the current commands of the tool:\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Explore duplications
\par}
{\tc\tcl4 \v Explore duplications}
To execute the explore duplications command, run:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ./exec ex [-l <number>] [-p <string>] [-b <'T' or 'F'>] [-c 'T' or 'F'] \par
}
\par
All the positional parameters are optional, and the meaning of them are the following:\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[-l <number>] limits the number of results showed to the user. The tool shows all results by default.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[-p <string>] defines a pattern that the function names should match to show in the result. A function name is said to match the pattern if the function name has the pattern as a substring of the string formed by the concatenation of the file path that the function exist and the function name.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[-b 'T' or 'F'] 'T' if the pattern need to match both of the functions in the comparation. 'F' if at least one of the functions match the pattern. Default value is 'F'.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
[-c 'T' or 'F'] 'T' if the results should be sorted by the number of duplicated lines. 'F' if the results should be sorted by the similarity metric. Default value is 'F'.\par}
\par
\par}
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Find function duplicates
\par}
{\tc\tcl4 \v Find function duplicates}
To execute the relatory commands, execute:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ./exec fu <FUNCTION_NAME>\par
}
\par
Where <FUNCTION_NAME> is a parameter passed by the user. The tool will match the parameter with any function that has the FUNCTION_NAME as a substring.\par}
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Relatory
\par}
{\tc\tcl4 \v Relatory}
To execute the relatory commands, execute:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ./exec du\par
}
 \par}
\par}
\par}
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Master Artifacts Module\par \pard\plain 
{\tc\tcl1 \v Master Artifacts Module}
{\xe \v Master Artifacts Module}
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
texto\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Test Duplication Code
\par}
{\tc\tcl2 \v Test Duplication Code}
I want to create some test cases to check the ability to detect duplication code on C code. This repository worth is store this test cases and document my finds.\par}
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
About Parser
\par}
{\tc\tcl2 \v About Parser}
In fact none of the tools accomplished the expectations.\par
The only useful one are {\f2 https://github.com/platisd/duplicate-code-detection-tool}.\par
The parser's folder are tools create to do more complex detectetion code.\par
{\b Parser} folder is about doing comparations in structs/functions scope, while file_parser is do comparations in files scope.\par
At the moment, the parser tools uses the above tool as a subrotine to not do more repetitive work. But it can be changed if necessary.\par
Both tools has their own REAMDE. Read them to learn more.\par
Probably it is good to create a new repository to the parser folder, but I think about it latter when the tool is more solid.\par}
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
List of Candidate Tools to Test
\par}
{\tc\tcl2 \v List of Candidate Tools to Test}
{\f2 https://pmd.github.io/pmd/pmd_userdocs_cpd}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Only able to detect repetition of TOKEN when specify TOKEN size.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Installed and tested it. Prety simple tool.\par}
\par
{\f2 https://cppdepend.com/blog/tracking-the-hidden-duplicate-code-in-a-c-code-base/}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is a paid tool. Should I try it? I think not.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
There is a free trial.\par}
\par
{\f2 https://github.com/dlidstrom/Duplo}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
I like it. It is only able to detect repetition of TOKEN.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
For the tool. TOKEN is defined as a set of consecutive lines with a minimum size per line.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The output is easy to undertand and usage is easy with docker.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Prety simple tool.\par}
\par
{\f2 https://simian.quandarypeak.com/}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is a paid tool. Should I try it? I think not.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
There is a license for academic research and education use.\par}
\par
{\f2 https://codeclimate.com/}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is a paid tool.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is free tool for open source projects. It is fully automate on a website\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Search through github repository.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Do not check any .c file. Maybe I will try later with change extension to .cpp.\par}
\par
{\f2 https://www.researchgate.net/publication/2866183_Visual_Detection_of_Duplicated_Code}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Duploc\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
There is a pape about that. Looks cool.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Unfortunaly, I was not able to find an source to test the tool.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Main source link on paper is broken.\par}
\par
{\f2 https://github.com/duploq/duploq}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is a frond end aplication for {\f2 https://github.com/dlidstrom/Duplo}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Look like it is easy to configurate.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
I will not install it for know. Since it can only do what Duplo can do.\par}
\par
{\f2 https://github.com/platisd/duplicate-code-detection-tool}\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
As a first impression, it is a amazing tool.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Check similarity through different files and gives back a porcentage of similarity between each pair of files.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
It is easy to install and use.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Support GitHub Action. Looks easy to do CI/CD with it.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Do not check similarity on code of the same file. I.e, the tool cannot check a copy-paste code if the copy-paste happened on the same file. \par}
\par
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b anonymous_namespace\{function_breaker_util.cpp\}} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b duplicate_code_detection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b run_action} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b setup} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Utils} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UtilsOSDependable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Big_Clone_Formater\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Big_Clone_Tailor_Evaluator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
duplicate_code_detection.CliColors\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Comparation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Counter_Duplication_Code\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Counter_Duplication_Code_Trie\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DuplicationFinderDiff\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DuplicationFinderTool\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Enum
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
duplicate_code_detection.ReturnCode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Function\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionBreaker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionBreakerC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FunctionBreakerJava\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Line_content\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Orchestrator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Parser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Path\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Preprocessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Random_Selector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Similar_Function_Finder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Similarity_Explorer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Similarity_Table\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Big_Clone_Formater} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats clone detection results for BigCloneBench evaluation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Big_Clone_Tailor_Evaluator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluates clone detection using BigCloneBench methodology })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b duplicate_code_detection.CliColors} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for terminal text formatting })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Comparation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a code comparison result })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Config} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singleton configuration manager class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Counter_Duplication_Code} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication analyzer and reporter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Counter_Duplication_Code_Trie} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie structure for hierarchical duplication counting })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DuplicationFinderDiff} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DuplicationFinderTool} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main code duplication detection tool })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Function} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a code function with its content and metadata })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionBreaker} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction processor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionBreakerC} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parser and extractor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FunctionBreakerJava} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parser and extractor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Line_content} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a line of source code })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Orchestrator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestrator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Parser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and transforms duplication detection tool output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Path} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} manipulation class for tool-specific directory structure })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Preprocessor} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing orchestrator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Random_Selector} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random pair selector for similar code segments })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b duplicate_code_detection.ReturnCode} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of possible return codes for the application })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Similar_Function_Finder} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator and reporter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Similarity_Explorer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function explorer and analyzer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Similarity_Table} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages and analyzes function similarity relationships })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b arkanjo/{\b orchestrator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/{\b orchestrator.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestration interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b apple_utils.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b apple_utils.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b config.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b config.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration management interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b function.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} abstraction for temporary codebase })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b linux_utils.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b linux_utils.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linux-specific utility functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b path.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b path.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} abstraction for temporary codebase })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b similarity_table.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b similarity_table.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similarity relationships storage and analysis })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b utils.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b utils.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines utility functions used across all files })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b windows_utils.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/base/{\b windows_utils.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows-specific utility functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/big_clone/{\b big_clone_formater.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/big_clone/{\b big_clone_formater.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneEval format conversion interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/big_clone/{\b big_clone_tailor_evaluator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/big_clone/{\b big_clone_tailor_evaluator.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneBench evaluation interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/counter/{\b counter_duplication_code.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/counter/{\b counter_duplication_code.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication reporting system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/counter/{\b counter_duplication_code_trie.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/counter/{\b counter_duplication_code_trie.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie-based code duplication counter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/explorer/{\b similarity_explorer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/explorer/{\b similarity_explorer.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function exploration interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/finder/{\b similar_function_finder.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/finder/{\b similar_function_finder.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b duplication_finder_diff.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b duplication_finder_diff.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessing system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b duplication_finder_tool.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b duplication_finder_tool.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main duplication detection tool interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_c.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_c.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parsing and extraction })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_java.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_java.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parsing and extraction })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_util.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b function_breaker_util.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} breaker utilities and constants })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b parser.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b parser.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication results parser })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b preprocessor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b preprocessor.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/pre/{\b preprocessor_main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/rand/{\b random_selector.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/rand/{\b random_selector.hpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random selection of similar code pairs })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/{\b test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/{\b test_same_file_big_function_against_small.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/{\b test_same_file_different_functions_same_logic.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/{\b test_same_file_equal_functions.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/{\b test_same_file_similar_functions.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/{\b big.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/{\b small.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_array.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_array2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_vector.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/{\b sum_of_pair.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_array.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_array2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_vector.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/{\b sum_of_pair.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_array.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_array2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/{\b sum_of_vector.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/{\b sum_of_pair.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b check_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_max.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_min.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b find_sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b compute_dist_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b compute_p.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b compute_v_sorted.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_array.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_array2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/{\b sum_of_vector.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/{\b sum.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/{\b sum_of_pair.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/{\b sum_of_two_elements.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/{\b sorted_by_distance_of_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/{\b sorted_by_distance_to_median.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/third-party/duplicate-code-detection-tool/{\b duplicate_code_detection.py} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Python3 tool to detect similarities between files within a repository })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/third-party/duplicate-code-detection-tool/{\b run_action.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b arkanjo/third-party/duplicate-code-detection-tool/{\b setup.py} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Package configuration for duplicate code detection tool })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/dbg/{\b test_same_file_big_function_against_small.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/file_parser/{\b filter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/file_parser/{\b parser.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/{\b test_same_file_big_function_against_small.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/{\b test_same_file_different_functions_same_logic.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/{\b test_same_file_equal_functions.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/{\b test_same_file_similar_functions.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_big_functions_against_small/{\b big.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_big_functions_against_small/{\b small.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_equal_code/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_equal_code/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_shuffled_functions/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_shuffled_functions/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_similiar_function/{\b code.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b master_artifacts/tests/test_multiple_file_similiar_function/{\b source.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
anonymous_namespace\{function_breaker_util.cpp\} Namespace Reference\par \pard\plain 
{\tc\tcl2 \v anonymous_namespace\{function_breaker_util.cpp\}}
{\xe \v anonymous_namespace\{function_breaker_util.cpp\}}
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_position_first_open_bracket} (string s)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v find_position_first_open_bracket\:anonymous_namespace\{function_breaker_util.cpp\}}
{\xe \v anonymous_namespace\{function_breaker_util.cpp\}\:find_position_first_open_bracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int anonymous_namespace\{function_breaker_util.cpp\}::find_position_first_open_bracket (string s)}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b function_breaker_util.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplicate_code_detection Namespace Reference\par \pard\plain 
{\tc\tcl2 \v duplicate_code_detection}
{\xe \v duplicate_code_detection}
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CliColors}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for terminal text formatting. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ReturnCode}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of possible return codes for the application. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b get_all_source_code_from_directory} (directory, file_extensions)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a list with all the source code files within the directory. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b conditional_print} (text, machine_friendly_output)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b remove_comments_and_docstrings} (str source_code)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strip comments and docstrings from source code. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b get_loc_count} (file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b get_loc_to_print} (loc_count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b main} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run} (fail_threshold, directories, files, ignore_directories, ignore_files, json_output, project_root_dir, file_extensions, ignore_threshold, only_code, csv_output, show_loc)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b source_code_file_extensions} = ["h", "c", "cpp", "cc", "java", "py", "cs"]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b file_column_label} = "File"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b file_loc_label} = ",#LoC"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b similarity_column_label} = "Similarity (%)"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b similarity_label_length} = len({\b similarity_column_label})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b loc_label} = "#LoC"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b similarity_label} = "Similarity"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b exit_code}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b _}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v conditional_print\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:conditional_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.conditional_print ( text,  machine_friendly_output)}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i machine_friendly_output} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 80} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v get_all_source_code_from_directory\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:get_all_source_code_from_directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.get_all_source_code_from_directory ( directory,  file_extensions)}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a list with all the source code files within the directory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i directory} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_extensions} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
source_code_files \par
}}}{
Definition at line {\b 62} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v get_loc_count\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:get_loc_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.get_loc_count ( file_path)}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
lines_count \par
}}}{
Definition at line {\b 122} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v get_loc_to_print\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:get_loc_to_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.get_loc_to_print ( loc_count)}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i loc_count} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
loc_to_print \par
}}}{
Definition at line {\b 137} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v main\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.main ()}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
result \par
}}}{
Definition at line {\b 147} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v remove_comments_and_docstrings\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:remove_comments_and_docstrings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str duplicate_code_detection.remove_comments_and_docstrings (str source_code)}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strip comments and docstrings from source code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 https://gist.github.com/phpdude/1ae6f19de213d66286c8183e9e3b9ec1}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source_code} \cell }{Raw source code as a single string \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
source_code_clean Stripped source code as a single string \par
}}}{
Definition at line {\b 90} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v run\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.run ( fail_threshold,  directories,  files,  ignore_directories,  ignore_files,  json_output,  project_root_dir,  file_extensions,  ignore_threshold,  only_code,  csv_output,  show_loc)}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fail_threshold} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i directories} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i files} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ignore_directories} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ignore_files} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i json_output} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i project_root_dir} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_extensions} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ignore_threshold} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i only_code} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i csv_output} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i show_loc} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 241} of file {\b duplicate_code_detection.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v _\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection._{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 483} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v exit_code\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:exit_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.exit_code}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 483} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v file_column_label\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:file_column_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.file_column_label = "File"}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v file_loc_label\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:file_loc_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.file_loc_label = ",#LoC"}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v loc_label\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:loc_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.loc_label = "#LoC"}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v similarity_column_label\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:similarity_column_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.similarity_column_label = "Similarity (%)"}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v similarity_label\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:similarity_label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.similarity_label = "Similarity"}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v similarity_label_length\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:similarity_label_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
duplicate_code_detection.similarity_label_length = len({\b similarity_column_label})}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v source_code_file_extensions\:duplicate_code_detection}
{\xe \v duplicate_code_detection\:source_code_file_extensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list duplicate_code_detection.source_code_file_extensions = ["h", "c", "cpp", "cc", "java", "py", "cs"]}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b duplicate_code_detection.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
run_action Namespace Reference\par \pard\plain 
{\tc\tcl2 \v run_action}
{\xe \v run_action}
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b make_markdown_table} (array)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b get_markdown_link} (file, url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b get_warning} (similarity, warn_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b similarities_to_markdown} (similarities, url_prefix, warn_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b split_and_trim} (input_list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b to_absolute_path} (paths)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b main} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b WARNING_SUFFIX} = " \'E2\'9A\'A0\'EF\'B8\'8F"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_markdown_link\:run_action}
{\xe \v run_action\:get_markdown_link}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.get_markdown_link ( file,  url)}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b run_action.py}.}\par
}
{\xe \v get_warning\:run_action}
{\xe \v run_action\:get_warning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.get_warning ( similarity,  warn_threshold)}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b run_action.py}.}\par
}
{\xe \v main\:run_action}
{\xe \v run_action\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.main ()}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b run_action.py}.}\par
}
{\xe \v make_markdown_table\:run_action}
{\xe \v run_action\:make_markdown_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.make_markdown_table ( array)}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Input: Python list with rows of table as lists\par
           First element as header.\par
    Output: String to put into a .md file\par
\par
Ex Input:\par
    [["Name", "Age", "Height"],\par
     ["Jake", 20, 5'10],\par
     ["Mary", 21, 5'7]]\par
\par
 Adopted from: https://gist.github.com/m0neysha/219bad4b02d2008e0154\par
}
 \par
}{
Definition at line {\b 14} of file {\b run_action.py}.}\par
}
{\xe \v similarities_to_markdown\:run_action}
{\xe \v run_action\:similarities_to_markdown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.similarities_to_markdown ( similarities,  url_prefix,  warn_threshold)}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b run_action.py}.}\par
}
{\xe \v split_and_trim\:run_action}
{\xe \v run_action\:split_and_trim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.split_and_trim ( input_list)}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b run_action.py}.}\par
}
{\xe \v to_absolute_path\:run_action}
{\xe \v run_action\:to_absolute_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
run_action.to_absolute_path ( paths)}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b run_action.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v WARNING_SUFFIX\:run_action}
{\xe \v run_action\:WARNING_SUFFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str run_action.WARNING_SUFFIX = " \'E2\'9A\'A0\'EF\'B8\'8F"}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b run_action.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
setup Namespace Reference\par \pard\plain 
{\tc\tcl2 \v setup}
{\xe \v setup}
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b name}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b entry_points}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b py_modules}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b package_dir}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b install_requires}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setuptools_git_versioning}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup_requires}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v entry_points\:setup}
{\xe \v setup\:entry_points}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.entry_points}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b setup.py}.}\par
}
{\xe \v install_requires\:setup}
{\xe \v setup\:install_requires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.install_requires}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b setup.py}.}\par
}
{\xe \v name\:setup}
{\xe \v setup\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.name}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b setup.py}.}\par
}
{\xe \v package_dir\:setup}
{\xe \v setup\:package_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.package_dir}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b setup.py}.}\par
}
{\xe \v py_modules\:setup}
{\xe \v setup\:py_modules}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.py_modules}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b setup.py}.}\par
}
{\xe \v setup_requires\:setup}
{\xe \v setup\:setup_requires}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.setup_requires}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b setup.py}.}\par
}
{\xe \v setuptools_git_versioning\:setup}
{\xe \v setup\:setuptools_git_versioning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.setuptools_git_versioning}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b setup.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utils Namespace Reference\par \pard\plain 
{\tc\tcl2 \v Utils}
{\xe \v Utils}
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b COLOR} \{ {\b RESET}
, {\b RED}
, {\b GREEN}
, {\b YELLOW}
, {\b BLUE}
, {\b MAGENTA}
, {\b CYAN}
, {\b GRAY}
, {\b WHITE}
, {\b BRIGHT_YELLOW}
, {\b BLACK}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of available colors for formatted messages. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ensure_file_is_open} (std::ifstream &file, string file_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ensures that a file stream is successfully opened. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b read_file_generic} (string string_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads a file line by line into a vector of strings. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_file_generic} (string file_path, vector< string > content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes content to a file at specified path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_parents_folder_of_file_path} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates all parent directories for a given file path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json::Value {\b read_json} (string string_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads and parses a JSON file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b does_file_exist} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a file exists at the given path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_regular_file} (string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if a path refers to a regular file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b format_colored_message} (string message, {\b COLOR} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats a message with ANSI color codes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_empty_char} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is considered empty/whitespace. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_special_char} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is special (non-alphanumeric and not underscore) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b split_string} (string s, char delimiter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Splits a string by a delimiter into tokens. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b LIMITER_PRINT} = "---------------------"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant string used as a visual delimiter/separator in prints. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b MKDIR_FLAG} = 0700\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permission flags used when creating directories (rwx for owner) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const vector< string > {\b COLOR_TOKENS_UTILS_LIGTH}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for light terminal backgrounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const vector< string > {\b COLOR_TOKENS_UTILS_DARK}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for dark terminal backgrounds. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v COLOR\:Utils}
{\xe \v Utils\:COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Utils::COLOR}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of available colors for formatted messages. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v RESET\:Utils}
{\xe \v Utils\:RESET}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid RESET{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset to default color. \par
}\cell }{\row }
{\xe \v RED\:Utils}
{\xe \v Utils\:RED}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid RED{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red color. \par
}\cell }{\row }
{\xe \v GREEN\:Utils}
{\xe \v Utils\:GREEN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid GREEN{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green color. \par
}\cell }{\row }
{\xe \v YELLOW\:Utils}
{\xe \v Utils\:YELLOW}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid YELLOW{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Yellow color. \par
}\cell }{\row }
{\xe \v BLUE\:Utils}
{\xe \v Utils\:BLUE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid BLUE{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blue color. \par
}\cell }{\row }
{\xe \v MAGENTA\:Utils}
{\xe \v Utils\:MAGENTA}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid MAGENTA{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Magenta color. \par
}\cell }{\row }
{\xe \v CYAN\:Utils}
{\xe \v Utils\:CYAN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CYAN{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cyan color. \par
}\cell }{\row }
{\xe \v GRAY\:Utils}
{\xe \v Utils\:GRAY}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid GRAY{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gray color. \par
}\cell }{\row }
{\xe \v WHITE\:Utils}
{\xe \v Utils\:WHITE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid WHITE{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
White color. \par
}\cell }{\row }
{\xe \v BRIGHT_YELLOW\:Utils}
{\xe \v Utils\:BRIGHT_YELLOW}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid BRIGHT_YELLOW{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bright yellow color. \par
}\cell }{\row }
{\xe \v BLACK\:Utils}
{\xe \v Utils\:BLACK}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid BLACK{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Black color. \par
}\cell }{\row }
}
{
Definition at line {\b 94} of file {\b utils.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v create_parents_folder_of_file_path\:Utils}
{\xe \v Utils\:create_parents_folder_of_file_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Utils::create_parents_folder_of_file_path (string file_path)}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates all parent directories for a given file path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{The full file path for which to create parent directories \cell }
{\row }
}
}{
Definition at line {\b 43} of file {\b utils.cpp}.}\par
}
{\xe \v does_file_exist\:Utils}
{\xe \v Utils\:does_file_exist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Utils::does_file_exist (string file_path)}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a file exists at the given path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{{\b Path} to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if file exists and is accessible, false otherwise \par
}}}{
Definition at line {\b 69} of file {\b utils.cpp}.}\par
}
{\xe \v ensure_file_is_open\:Utils}
{\xe \v Utils\:ensure_file_is_open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Utils::ensure_file_is_open (std::ifstream & file, string file_name)}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ensures that a file stream is successfully opened. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{Reference to the input file stream to check \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_name} \cell }{Name/path of the file being opened (for error message) \cell }
{\row }
}
}{
Definition at line {\b 11} of file {\b utils.cpp}.}\par
}
{\xe \v format_colored_message\:Utils}
{\xe \v Utils\:format_colored_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Utils::format_colored_message (string message, {\b COLOR} color)}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats a message with ANSI color codes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{Text to colorize \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{Color to apply \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Colorized message with reset code at the end \par
}}}{
Definition at line {\b 85} of file {\b utils.cpp}.}\par
}
{\xe \v is_empty_char\:Utils}
{\xe \v Utils\:is_empty_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Utils::is_empty_char (char c)}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is considered empty/whitespace. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{Character to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if character is space or control character, false otherwise \par
}}}{
Definition at line {\b 94} of file {\b utils.cpp}.}\par
}
{\xe \v is_regular_file\:Utils}
{\xe \v Utils\:is_regular_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Utils::is_regular_file (string path)}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if a path refers to a regular file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{{\b Path} to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if path is a regular file, false otherwise \par
}}}{
Definition at line {\b 78} of file {\b utils.cpp}.}\par
}
{\xe \v is_special_char\:Utils}
{\xe \v Utils\:is_special_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Utils::is_special_char (char c)}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is special (non-alphanumeric and not underscore) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{Character to check \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if character is special, false otherwise \par
}}}{
Definition at line {\b 104} of file {\b utils.cpp}.}\par
}
{\xe \v read_file_generic\:Utils}
{\xe \v Utils\:read_file_generic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > Utils::read_file_generic (string string_path)}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads a file line by line into a vector of strings. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string_path} \cell }{{\b Path} to the file to read \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<string> Contents of the file as a vector of strings \par
}}}{
Definition at line {\b 19} of file {\b utils.cpp}.}\par
}
{\xe \v read_json\:Utils}
{\xe \v Utils\:read_json}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json::Value Utils::read_json (string string_path)}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads and parses a JSON file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string_path} \cell }{{\b Path} to the JSON file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Json::Value Parsed JSON content \par
}}}{
Definition at line {\b 60} of file {\b utils.cpp}.}\par
}
{\xe \v split_string\:Utils}
{\xe \v Utils\:split_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > Utils::split_string (string s, char delimiter)}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Splits a string by a delimiter into tokens. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{String to split \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i delimiter} \cell }{Character to split on \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<string> Vector of tokens (empty tokens are omitted) \par
}}}{
Definition at line {\b 120} of file {\b utils.cpp}.}\par
}
{\xe \v write_file_generic\:Utils}
{\xe \v Utils\:write_file_generic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Utils::write_file_generic (string file_path, vector< string > content)}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes content to a file at specified path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{{\b Path} where file should be written \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i content} \cell }{Vector of strings to write (each element becomes a line) \cell }
{\row }
}
}{
Definition at line {\b 32} of file {\b utils.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v COLOR_TOKENS_UTILS_DARK\:Utils}
{\xe \v Utils\:COLOR_TOKENS_UTILS_DARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const vector<string> Utils::COLOR_TOKENS_UTILS_DARK}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
            {\cf22 "\\033[0m"},    \par
            {\cf22 "\\033[31;2m"}, \par
            {\cf22 "\\033[32;2m"}, \par
            {\cf22 "\\033[33;2m"}, \par
            {\cf22 "\\033[34;2m"}, \par
            {\cf22 "\\033[35;2m"}, \par
            {\cf22 "\\033[36;2m"}, \par
            {\cf22 "\\033[37;2m"}, \par
            {\cf22 "\\033[30m"},   \par
            {\cf22 "\\033[33m"},   \par
            {\cf22 "\\033[97m"}    \par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for dark terminal backgrounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains escape sequences for:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
RESET\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_RED\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_GREEN\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_YELLOW\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_BLUE\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_MAGENTA\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_CYAN\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
DARK_GRAY\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
BLACK\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
YELLOW\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
WHITE \par}
}{
Definition at line {\b 77} of file {\b utils.hpp}.}\par
}
{\xe \v COLOR_TOKENS_UTILS_LIGTH\:Utils}
{\xe \v Utils\:COLOR_TOKENS_UTILS_LIGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const vector<string> Utils::COLOR_TOKENS_UTILS_LIGTH}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
            {\cf22 "\\033[0m"},    \par
            {\cf22 "\\033[31m"},   \par
            {\cf22 "\\033[32m"},   \par
            {\cf22 "\\033[33m"},   \par
            {\cf22 "\\033[34m"},   \par
            {\cf22 "\\033[35m"},   \par
            {\cf22 "\\033[36m"},   \par
            {\cf22 "\\033[37m"},   \par
            {\cf22 "\\033[97m"},   \par
            {\cf22 "\\033[33;1m"}, \par
            {\cf22 "\\033[30m"},   \par
        \}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for light terminal backgrounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains escape sequences for:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
RESET\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
RED\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
GREEN\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
YELLOW\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
BLUE\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
MAGENTA\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
CYAN\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
GRAY\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
WHITE\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
BRIGHT_YELLOW\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
BLACK \par}
}{
Definition at line {\b 47} of file {\b utils.hpp}.}\par
}
{\xe \v LIMITER_PRINT\:Utils}
{\xe \v Utils\:LIMITER_PRINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string Utils::LIMITER_PRINT = "---------------------"}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant string used as a visual delimiter/separator in prints. }}\par
{
Definition at line {\b 24} of file {\b utils.hpp}.}\par
}
{\xe \v MKDIR_FLAG\:Utils}
{\xe \v Utils\:MKDIR_FLAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int Utils::MKDIR_FLAG = 0700}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permission flags used when creating directories (rwx for owner) }}\par
{
Definition at line {\b 29} of file {\b utils.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UtilsOSDependable Namespace Reference\par \pard\plain 
{\tc\tcl2 \v UtilsOSDependable}
{\xe \v UtilsOSDependable}
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b get_terminal_bg_color_luminance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< int, int, int > {\b parse_terminal_color_response} (const string &response)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b capture_terminal_response} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Captures terminal response to color query. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_bg_color_dark} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b convert_16_bit_to_8_bit} (const string &hex16)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a 16-bit hex color string to 8-bit RGB components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< int, int, int > {\b parse_terminal_color_response} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components on Windows. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v capture_terminal_response\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:capture_terminal_response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string UtilsOSDependable::capture_terminal_response ()}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Captures terminal response to color query. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Raw terminal response containing color information\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses low-level terminal I/O to capture the response \par
}}}{
Definition at line {\b 40} of file {\b linux_utils.cpp}.}\par
}
{\xe \v convert_16_bit_to_8_bit\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:convert_16_bit_to_8_bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int UtilsOSDependable::convert_16_bit_to_8_bit (const string & hex16)}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a 16-bit hex color string to 8-bit RGB components. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hex16} \cell }{16-bit hex color string (format: "RRGGBB" or "#RRGGBB") \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int 8-bit color value (0-255)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Input string can be with or without leading '#' \par
}}}}
{\xe \v get_terminal_bg_color_luminance\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:get_terminal_bg_color_luminance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float UtilsOSDependable::get_terminal_bg_color_luminance ()}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color on Windows.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
float Luminance value between 0 (dark) and 1 (light)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses terminal escape sequences to query background color\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
float Luminance value between 0 (dark) and 1 (light)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses Windows Console API to determine background color \par
Defaults to dark if unable to determine color \par
}}}{
Definition at line {\b 77} of file {\b linux_utils.cpp}.}\par
}
{\xe \v is_bg_color_dark\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:is_bg_color_dark}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool UtilsOSDependable::is_bg_color_dark ()}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark on Windows.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if background is dark (luminance < 0.5), false otherwise\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses {\b get_terminal_bg_color_luminance()} internally\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if background is dark (luminance < 0.5), false otherwise\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses {\b get_terminal_bg_color_luminance()} internally \par
Defaults to true (dark) if unable to determine color \par
}}}{
Definition at line {\b 88} of file {\b linux_utils.cpp}.}\par
}
{\xe \v parse_terminal_color_response\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:parse_terminal_color_response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple< int, int, int > UtilsOSDependable::parse_terminal_color_response ()}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components on Windows. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
tuple<int, int, int> RGB components as 8-bit values (0-255)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Uses Windows Console API to get color information \par
Returns default dark theme colors if unable to determine \par
}}}}
{\xe \v parse_terminal_color_response\:UtilsOSDependable}
{\xe \v UtilsOSDependable\:parse_terminal_color_response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple< int, int, int > UtilsOSDependable::parse_terminal_color_response (const string & response)}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i response} \cell }{Terminal color response string (format: "rgb:RRRR/GGGG/BBBB") \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
tuple<int, int, int> RGB components as 16-bit values (0-65535)\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i May} \cell }{throw runtime_error for malformed input \cell }
{\row }
}
}{
Definition at line {\b 14} of file {\b linux_utils.cpp}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Big_Clone_Formater Class Reference\par \pard\plain 
{\tc\tcl2 \v Big_Clone_Formater}
{\xe \v Big_Clone_Formater}
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats clone detection results for BigCloneBench evaluation. }}\par
{
{\f2 #include <big_clone_formater.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Big_Clone_Formater} ({\b Similarity_Table} *similarity_table)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs formatter and processes similarity table. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats clone detection results for BigCloneBench evaluation. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts internal path and similarity representations into the standardized BigCloneEval output format expected by the BigCloneBench dataset evaluation tools.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Designed to operate within the BigCloneBench dataset directory structure \par
}}}{
Definition at line {\b 31} of file {\b big_clone_formater.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Big_Clone_Formater\:Big_Clone_Formater}
{\xe \v Big_Clone_Formater\:Big_Clone_Formater}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Big_Clone_Formater::Big_Clone_Formater ({\b Similarity_Table} * similarity_table)}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs formatter and processes similarity table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i similarity_table} \cell }{Pointer to similarity data to format\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Immediately outputs all formatted pairs to stdout \par
}}}{
Definition at line {\b 36} of file {\b big_clone_formater.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/big_clone/{\b big_clone_formater.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/big_clone/{\b big_clone_formater.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Big_Clone_Tailor_Evaluator Class Reference\par \pard\plain 
{\tc\tcl2 \v Big_Clone_Tailor_Evaluator}
{\xe \v Big_Clone_Tailor_Evaluator}
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluates clone detection using BigCloneBench methodology. }}\par
{
{\f2 #include <big_clone_tailor_evaluator.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Big_Clone_Tailor_Evaluator} ({\b Similarity_Table} *_similarity_table)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs evaluator with similarity data. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluates clone detection using BigCloneBench methodology. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements evaluation metrics that compare detected clones against BigCloneBench ground truth data, following Tailor tool's approach. \par
}{
Definition at line {\b 29} of file {\b big_clone_tailor_evaluator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Big_Clone_Tailor_Evaluator\:Big_Clone_Tailor_Evaluator}
{\xe \v Big_Clone_Tailor_Evaluator\:Big_Clone_Tailor_Evaluator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Big_Clone_Tailor_Evaluator::Big_Clone_Tailor_Evaluator ({\b Similarity_Table} * _similarity_table)}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs evaluator with similarity data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_table} \cell }{Pointer to similarity table \cell }
{\row }
}
}{
Definition at line {\b 113} of file {\b big_clone_tailor_evaluator.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/big_clone/{\b big_clone_tailor_evaluator.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/big_clone/{\b big_clone_tailor_evaluator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplicate_code_detection.CliColors Class Reference\par \pard\plain 
{\tc\tcl2 \v duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors}
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for terminal text formatting. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b HEADER} = "\\033[95m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b OKBLUE} = "\\033[94m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b OKGREEN} = "\\033[92m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b WARNING} = "\\033[93m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b FAIL} = "\\033[91m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b ENDC} = "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b BOLD} = "\\033[1m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b UNDERLINE} = "\\033[4m"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for terminal text formatting. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides named constants for colored terminal output using ANSI escape sequences. All colors should be used with ENDC to reset formatting.\par
Example: print(f"\{CliColors.OKGREEN\}Success!\{CliColors.ENDC\}") \par
}{
Definition at line {\b 43} of file {\b duplicate_code_detection.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BOLD\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:BOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.BOLD = "\\033[1m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v ENDC\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:ENDC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.ENDC = "\\033[0m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v FAIL\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.FAIL = "\\033[91m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v HEADER\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:HEADER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.HEADER = "\\033[95m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v OKBLUE\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:OKBLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.OKBLUE = "\\033[94m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v OKGREEN\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:OKGREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.OKGREEN = "\\033[92m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v UNDERLINE\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:UNDERLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.UNDERLINE = "\\033[4m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v WARNING\:duplicate_code_detection.CliColors}
{\xe \v duplicate_code_detection.CliColors\:WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str duplicate_code_detection.CliColors.WARNING = "\\033[93m"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b duplicate_code_detection.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/{\b duplicate_code_detection.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Comparation Struct Reference\par \pard\plain 
{\tc\tcl2 \v Comparation}
{\xe \v Comparation}
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a code comparison result. }}\par
{
{\f2 #include <parser.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Comparation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Comparation} (string _path1, string _path2, double _sim)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameterized constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Comparation} &com) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparison operator for sorting. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b Comparation} &com) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison operator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Comparation} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Comparation} (string _path1, string _path2, double _sim)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Comparation} &com) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b Comparation} &com) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b path1}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} to first code file being compared. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b path2}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} to second code file being compared. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b similarity}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similarity score between the files (0-100) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a code comparison result. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores information about two code paths and their similarity score, with comparison operators for sorting and deduplication. \par
}{
Definition at line {\b 25} of file {\b parser.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Comparation\:Comparation}
{\xe \v Comparation\:Comparation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Comparation::Comparation (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{
Definition at line {\b 33} of file {\b parser.hpp}.}\par
}
{\xe \v Comparation\:Comparation}
{\xe \v Comparation\:Comparation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Comparation::Comparation (string _path1, string _path2, double _sim)}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameterized constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _path1} \cell }{First file path \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _path2} \cell }{Second file path \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _sim} \cell }{Similarity score \cell }
{\row }
}
}{
Definition at line {\b 4} of file {\b parser.cpp}.}\par
}
{\xe \v Comparation\:Comparation}
{\xe \v Comparation\:Comparation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Comparation::Comparation (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b parser.cpp}.}\par
}
{\xe \v Comparation\:Comparation}
{\xe \v Comparation\:Comparation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Comparation::Comparation (string _path1, string _path2, double _sim){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b parser.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v operator<\:Comparation}
{\xe \v Comparation\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Comparation::operator< (const {\b Comparation} & com) const}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comparison operator for sorting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i com} \cell }{Other {\b Comparation} to compare with \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if this should be ordered before com \par
}}}{
Definition at line {\b 11} of file {\b parser.cpp}.}\par
}
{\xe \v operator<\:Comparation}
{\xe \v Comparation\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Comparation::operator< (const {\b Comparation} & com) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b parser.cpp}.}\par
}
{\xe \v operator==\:Comparation}
{\xe \v Comparation\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Comparation::operator== (const {\b Comparation} & com) const}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equality comparison operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i com} \cell }{Other {\b Comparation} to compare with \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if comparations are identical \par
}}}{
Definition at line {\b 21} of file {\b parser.cpp}.}\par
}
{\xe \v operator==\:Comparation}
{\xe \v Comparation\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Comparation::operator== (const {\b Comparation} & com) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b parser.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v path1\:Comparation}
{\xe \v Comparation\:path1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Comparation::path1}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} to first code file being compared. }}\par
{
Definition at line {\b 26} of file {\b parser.hpp}.}\par
}
{\xe \v path2\:Comparation}
{\xe \v Comparation\:path2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Comparation::path2}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} to second code file being compared. }}\par
{
Definition at line {\b 27} of file {\b parser.hpp}.}\par
}
{\xe \v similarity\:Comparation}
{\xe \v Comparation\:similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Comparation::similarity}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similarity score between the files (0-100) }}\par
{
Definition at line {\b 28} of file {\b parser.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b parser.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
master_artifacts/file_parser/{\b parser.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b parser.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Config Class Reference\par \pard\plain 
{\tc\tcl2 \v Config}
{\xe \v Config}
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singleton configuration manager class. }}\par
{
{\f2 #include <config.hpp>}}\par
Collaboration diagram for Config:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConfig__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Config} ({\b Config} &other)=delete\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted copy constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator=} (const {\b Config} &)=delete\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted assignment operator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getBasePath} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current base path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTestConfig} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets test configuration paths. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDefaultConfig} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets default production configuration paths. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Config} * {\b config} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the singleton configuration instance. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Config} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected constructor for singleton pattern. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Config} * {\b config_} = nullptr\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static instance pointer for singleton pattern. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singleton configuration manager class. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages application paths and runtime configuration settings. Implements the singleton pattern to ensure single instance access. \par
}{
Definition at line {\b 26} of file {\b config.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Config\:Config}
{\xe \v Config\:Config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Config::Config (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Protected constructor for singleton pattern. }}\par
{
Definition at line {\b 35} of file {\b config.hpp}.}\par
}
{\xe \v Config\:Config}
{\xe \v Config\:Config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Config::Config ({\b Config} & other){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted copy constructor. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v config\:Config}
{\xe \v Config\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Config} * Config::config (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the singleton configuration instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Config* Pointer to the singleton instance \par
}}}{
Definition at line {\b 18} of file {\b config.cpp}.}\par
}
{\xe \v getBasePath\:Config}
{\xe \v Config\:getBasePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Config::getBasePath ()}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current base path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string The configured base path \par
}}}{
Definition at line {\b 4} of file {\b config.cpp}.}\par
}
{\xe \v operator=\:Config}
{\xe \v Config\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Config::operator= (const {\b Config} & ){\f2 [delete]}}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deleted assignment operator. }}\par
}
{\xe \v setDefaultConfig\:Config}
{\xe \v Config\:setDefaultConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Config::setDefaultConfig ()}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets default production configuration paths. }}\par
{
Definition at line {\b 12} of file {\b config.cpp}.}\par
}
{\xe \v setTestConfig\:Config}
{\xe \v Config\:setTestConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Config::setTestConfig ()}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets test configuration paths. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configures paths for end-to-end testing environment. \par
}{
Definition at line {\b 8} of file {\b config.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v config_\:Config}
{\xe \v Config\:config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Config} * Config::config_ = nullptr{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static instance pointer for singleton pattern. }}\par
{
Definition at line {\b 30} of file {\b config.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b config.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b config.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Counter_Duplication_Code Class Reference\par \pard\plain 
{\tc\tcl2 \v Counter_Duplication_Code}
{\xe \v Counter_Duplication_Code}
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication analyzer and reporter. }}\par
{
{\f2 #include <counter_duplication_code.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Counter_Duplication_Code} ({\b Similarity_Table} *_similarity_table)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs analyzer with similarity data. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication analyzer and reporter. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides functionality to analyze and report code duplication metrics across the codebase, organized by folder hierarchy using a trie structure for efficient hierarchical counting and reporting. \par
}{
Definition at line {\b 30} of file {\b counter_duplication_code.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Counter_Duplication_Code\:Counter_Duplication_Code}
{\xe \v Counter_Duplication_Code\:Counter_Duplication_Code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Counter_Duplication_Code::Counter_Duplication_Code ({\b Similarity_Table} * _similarity_table)}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs analyzer with similarity data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_table} \cell }{Pointer to similarity table \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b counter_duplication_code.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/counter/{\b counter_duplication_code.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/counter/{\b counter_duplication_code.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Counter_Duplication_Code_Trie Class Reference\par \pard\plain 
{\tc\tcl2 \v Counter_Duplication_Code_Trie}
{\xe \v Counter_Duplication_Code_Trie}
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie structure for hierarchical duplication counting. }}\par
{
{\f2 #include <counter_duplication_code_trie.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_folder_duplication_code} (vector< string > folder_path, int number_of_duplication_lines)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds duplication count for a folder path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_duplication_code_trie} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the trie structure with duplication counts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Counter_Duplication_Code_Trie} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a new trie with root node. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie structure for hierarchical duplication counting. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a modified trie where each node represents a folder in the codebase, enabling efficient counting and reporting of duplicated lines at different directory levels.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
For understanding the trie structure, refer to: {\f2 https://en.wikipedia.org/wiki/Trie} \par
}}}{
Definition at line {\b 30} of file {\b counter_duplication_code_trie.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Counter_Duplication_Code_Trie\:Counter_Duplication_Code_Trie}
{\xe \v Counter_Duplication_Code_Trie\:Counter_Duplication_Code_Trie}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Counter_Duplication_Code_Trie::Counter_Duplication_Code_Trie ()}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a new trie with root node. }}\par
{
Definition at line {\b 69} of file {\b counter_duplication_code_trie.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v add_folder_duplication_code\:Counter_Duplication_Code_Trie}
{\xe \v Counter_Duplication_Code_Trie\:add_folder_duplication_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Counter_Duplication_Code_Trie::add_folder_duplication_code (vector< string > folder_path, int number_of_duplication_lines)}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds duplication count for a folder path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i folder_path} \cell }{Hierarchical folder path \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i number_of_duplication_lines} \cell }{Count of duplicated lines \cell }
{\row }
}
}{
Definition at line {\b 55} of file {\b counter_duplication_code_trie.cpp}.}\par
}
{\xe \v print_duplication_code_trie\:Counter_Duplication_Code_Trie}
{\xe \v Counter_Duplication_Code_Trie\:print_duplication_code_trie}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Counter_Duplication_Code_Trie::print_duplication_code_trie ()}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the trie structure with duplication counts. }}\par
{
Definition at line {\b 65} of file {\b counter_duplication_code_trie.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/counter/{\b counter_duplication_code_trie.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/counter/{\b counter_duplication_code_trie.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DuplicationFinderDiff Class Reference\par \pard\plain 
{\tc\tcl2 \v DuplicationFinderDiff}
{\xe \v DuplicationFinderDiff}
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessor. }}\par
{
{\f2 #include <duplication_finder_diff.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DuplicationFinderDiff} (string base_path_, double similarity_)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs preprocessor with configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b execute} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Executes the preprocessing pipeline. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessor. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs initial analysis of the codebase to identify and catalog potential code duplications, creating a foundation for fast similarity queries during the main operation phase. \par
}{
Definition at line {\b 27} of file {\b duplication_finder_diff.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DuplicationFinderDiff\:DuplicationFinderDiff}
{\xe \v DuplicationFinderDiff\:DuplicationFinderDiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DuplicationFinderDiff::DuplicationFinderDiff (string base_path_, double similarity_)}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs preprocessor with configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base_path_} \cell }{Root path of codebase \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i similarity_} \cell }{Similarity threshold (0-100) \cell }
{\row }
}
}{
Definition at line {\b 3} of file {\b duplication_finder_diff.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v execute\:DuplicationFinderDiff}
{\xe \v DuplicationFinderDiff\:execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DuplicationFinderDiff::execute ()}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Executes the preprocessing pipeline. }}\par
{
Definition at line {\b 135} of file {\b duplication_finder_diff.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b duplication_finder_diff.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b duplication_finder_diff.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DuplicationFinderTool Class Reference\par \pard\plain 
{\tc\tcl2 \v DuplicationFinderTool}
{\xe \v DuplicationFinderTool}
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main code duplication detection tool. }}\par
{
{\f2 #include <duplication_finder_tool.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DuplicationFinderTool} (string base_path_, double similarity_)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the duplication finder tool. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b execute} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Executes the full duplication analysis pipeline. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main code duplication detection tool. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Orchestrates the preprocessing pipeline that analyzes the entire codebase to identify and catalog potential code duplications, creating the foundation for efficient similarity queries during the tool's operation phase. \par
}{
Definition at line {\b 28} of file {\b duplication_finder_tool.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DuplicationFinderTool\:DuplicationFinderTool}
{\xe \v DuplicationFinderTool\:DuplicationFinderTool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DuplicationFinderTool::DuplicationFinderTool (string base_path_, double similarity_)}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the duplication finder tool. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base_path_} \cell }{Root path of the codebase to analyze \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i similarity_} \cell }{Minimum similarity threshold (0-100) to consider as duplicate \cell }
{\row }
}
}{
Definition at line {\b 3} of file {\b duplication_finder_tool.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v execute\:DuplicationFinderTool}
{\xe \v DuplicationFinderTool\:execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DuplicationFinderTool::execute ()}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Executes the full duplication analysis pipeline. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs the complete preprocessing and analysis of the codebase, including file scanning, similarity comparison, and result saving. \par
}{
Definition at line {\b 8} of file {\b duplication_finder_tool.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b duplication_finder_tool.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b duplication_finder_tool.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Function Class Reference\par \pard\plain 
{\tc\tcl2 \v Function}
{\xe \v Function}
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a code function with its content and metadata. }}\par
{
{\f2 #include <function.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b number_of_lines} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the total number of lines in the function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Function} ({\b Path} _path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a {\b Function} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
array< int, 3 > {\b get_scope_function_in_file} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the function's line number scope. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b get_header} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the function's header content. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b build_all_content} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds combined content of header and source. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_basic_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints formatted function information to console. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a code function with its content and metadata. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides access to function source, header, line information, and various utility methods for function manipulation and display. \par
}{
Definition at line {\b 31} of file {\b function.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Function\:Function}
{\xe \v Function\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Function::Function ({\b Path} _path)}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a {\b Function} object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _path} \cell }{{\b Path} object containing function location info \cell }
{\row }
}
}{
Definition at line {\b 24} of file {\b function.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v build_all_content\:Function}
{\xe \v Function\:build_all_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > Function::build_all_content ()}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds combined content of header and source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<string> Merged content with header and source \par
}}}{
Definition at line {\b 42} of file {\b function.cpp}.}\par
}
{\xe \v get_header\:Function}
{\xe \v Function\:get_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > Function::get_header ()}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the function's header content. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<string> Each element represents a line of header \par
}}}{
Definition at line {\b 38} of file {\b function.cpp}.}\par
}
{\xe \v get_scope_function_in_file\:Function}
{\xe \v Function\:get_scope_function_in_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
array< int, 3 > Function::get_scope_function_in_file ()}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the function's line number scope. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
array<int,3> Array containing: [0] - Declaration line [1] - Start line [2] - End line \par
}}}{
Definition at line {\b 34} of file {\b function.cpp}.}\par
}
{\xe \v number_of_lines\:Function}
{\xe \v Function\:number_of_lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Function::number_of_lines ()}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the total number of lines in the function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int Number of lines from declaration to end (inclusive) \par
}}}{
Definition at line {\b 20} of file {\b function.cpp}.}\par
}
{\xe \v print_basic_info\:Function}
{\xe \v Function\:print_basic_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Function::print_basic_info ()}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints formatted function information to console. }}\par
{
Definition at line {\b 60} of file {\b function.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b function.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionBreaker Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionBreaker}
{\xe \v FunctionBreaker}
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction processor. }}\par
{
{\f2 #include <function_breaker.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBreaker} (string folder_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs function breaker and processes directory. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction processor. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes source code directories (C/C++/Java) and extracts each function into individual files within a temporary repository. Handles file organization and delegates language-specific parsing to appropriate handlers.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Current limitations:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
May not work correctly with malformed bracket sequences\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
May fail on brackets within comments\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Example behavior: For file example.c with functions a and b, creates example/a.c and example/b.c in tmp/ directory \par}
}}}{
Definition at line {\b 43} of file {\b function_breaker.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionBreaker\:FunctionBreaker}
{\xe \v FunctionBreaker\:FunctionBreaker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionBreaker::FunctionBreaker (string folder_path)}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs function breaker and processes directory. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i folder_path} \cell }{Directory containing source files to process \cell }
{\row }
}
}{
Definition at line {\b 66} of file {\b function_breaker.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionBreakerC Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionBreakerC}
{\xe \v FunctionBreakerC}
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parser and extractor. }}\par
{
{\f2 #include <function_breaker_c.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBreakerC} (string file_path, string folder_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs function breaker and processes file. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parser and extractor. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes C/C++ source code to identify and extract individual functions, including their headers, bodies, and location information. Handles complex C syntax including preprocessor directives and comments. \par
}{
Definition at line {\b 25} of file {\b function_breaker_c.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionBreakerC\:FunctionBreakerC}
{\xe \v FunctionBreakerC\:FunctionBreakerC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionBreakerC::FunctionBreakerC (string file_path, string folder_path)}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs function breaker and processes file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{Source file to parse \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i folder_path} \cell }{Containing folder path \cell }
{\row }
}
}{
Definition at line {\b 384} of file {\b function_breaker_c.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker_c.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker_c.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FunctionBreakerJava Class Reference\par \pard\plain 
{\tc\tcl2 \v FunctionBreakerJava}
{\xe \v FunctionBreakerJava}
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parser and extractor. }}\par
{
{\f2 #include <function_breaker_java.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionBreakerJava} (string file_path, string folder_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Java function breaker and processes file. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parser and extractor. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analyzes Java source code to identify and extract individual methods, including their signatures, bodies, and location information. Handles Java-specific syntax including class methods and nested structures. \par
}{
Definition at line {\b 25} of file {\b function_breaker_java.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionBreakerJava\:FunctionBreakerJava}
{\xe \v FunctionBreakerJava\:FunctionBreakerJava}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FunctionBreakerJava::FunctionBreakerJava (string file_path, string folder_path)}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs Java function breaker and processes file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{Java source file to parse \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i folder_path} \cell }{Containing folder path \cell }
{\row }
}
}{
Definition at line {\b 287} of file {\b function_breaker_java.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker_java.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker_java.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Line_content Struct Reference\par \pard\plain 
{\tc\tcl2 \v Line_content}
{\xe \v Line_content}
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a line of source code. }}\par
{
{\f2 #include <function_breaker_util.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b line_number}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Line number in the original file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b content}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Text content of the line. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a line of source code. \par
}{
Definition at line {\b 22} of file {\b function_breaker_util.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v content\:Line_content}
{\xe \v Line_content\:content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Line_content::content}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Text content of the line. }}\par
{
Definition at line {\b 24} of file {\b function_breaker_util.hpp}.}\par
}
{\xe \v line_number\:Line_content}
{\xe \v Line_content\:line_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Line_content::line_number}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Line number in the original file. }}\par
{
Definition at line {\b 23} of file {\b function_breaker_util.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b function_breaker_util.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Orchestrator Class Reference\par \pard\plain 
{\tc\tcl2 \v Orchestrator}
{\xe \v Orchestrator}
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestrator. }}\par
{
{\f2 #include <orchestrator.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Orchestrator} (string command, vector< string > parameters)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs orchestrator and executes requested command. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestrator. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Routes and executes tool commands by coordinating between various subsystems including preprocessing, exploration, duplication counting, and evaluation components. \par
}{
Definition at line {\b 36} of file {\b orchestrator.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Orchestrator\:Orchestrator}
{\xe \v Orchestrator\:Orchestrator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Orchestrator::Orchestrator (string command, vector< string > parameters)}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs orchestrator and executes requested command. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The main command to execute \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parameters} \cell }{Additional command parameters \cell }
{\row }
}
}{
Definition at line {\b 98} of file {\b orchestrator.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/{\b orchestrator.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/{\b orchestrator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Parser Class Reference\par \pard\plain 
{\tc\tcl2 \v Parser}
{\xe \v Parser}
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and transforms duplication detection tool output. }}\par
{
{\f2 #include <parser.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Parser} (string input_file, string output_file, double similarity_cap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs parser with configuration. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and transforms duplication detection tool output. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processes raw output from third-party duplication detection tools, filters results by similarity threshold, and produces cleaned output. \par
}{
Definition at line {\b 64} of file {\b parser.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Parser\:Parser}
{\xe \v Parser\:Parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Parser::Parser (string input_file, string output_file, double similarity_cap)}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs parser with configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i input_file} \cell }{{\b Path} to raw tool output \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i output_file} \cell }{{\b Path} for cleaned output \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i similarity_cap} \cell }{Minimum similarity threshold (0-100) \cell }
{\row }
}
}{
Definition at line {\b 112} of file {\b parser.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b parser.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b parser.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Path Class Reference\par \pard\plain 
{\tc\tcl2 \v Path}
{\xe \v Path}
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} manipulation class for tool-specific directory structure. }}\par
{
{\f2 #include <path.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_empty} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if path is empty. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Path} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Path} (string string_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs from path string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_source_path} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_header_path} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_info_path} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds metadata file path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_relative_path} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds relative path portion. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_function_name} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts function name from path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b get_common_folders} ({\b Path} path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finds common folders with another path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains_given_pattern} (string pattern)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks for pattern in path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Path} &path) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} comparison operator. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} manipulation class for tool-specific directory structure. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages paths to source files, headers, and metadata in the temporary codebase. Provides methods for path construction and analysis without file I/O. \par
}{
Definition at line {\b 24} of file {\b path.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Path\:Path}
{\xe \v Path\:Path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Path::Path ()}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor. }}\par
{
Definition at line {\b 37} of file {\b path.cpp}.}\par
}
{\xe \v Path\:Path}
{\xe \v Path\:Path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Path::Path (string string_path)}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs from path string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string_path} \cell }{{\b Path} to parse \cell }
{\row }
}
}{
Definition at line {\b 40} of file {\b path.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v build_function_name\:Path}
{\xe \v Path\:build_function_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Path::build_function_name ()}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts function name from path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string {\b Function} name without extension \par
}}}{
Definition at line {\b 121} of file {\b path.cpp}.}\par
}
{\xe \v build_header_path\:Path}
{\xe \v Path\:build_header_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Path::build_header_path ()}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string {\b Path} to header file \par
}}}{
Definition at line {\b 72} of file {\b path.cpp}.}\par
}
{\xe \v build_info_path\:Path}
{\xe \v Path\:build_info_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Path::build_info_path ()}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds metadata file path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string {\b Path} to JSON metadata file \par
}}}{
Definition at line {\b 76} of file {\b path.cpp}.}\par
}
{\xe \v build_relative_path\:Path}
{\xe \v Path\:build_relative_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Path::build_relative_path ()}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds relative path portion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Relative path \par
}}}{
Definition at line {\b 112} of file {\b path.cpp}.}\par
}
{\xe \v build_source_path\:Path}
{\xe \v Path\:build_source_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Path::build_source_path ()}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string {\b Path} to source file \par
}}}{
Definition at line {\b 68} of file {\b path.cpp}.}\par
}
{\xe \v contains_given_pattern\:Path}
{\xe \v Path\:contains_given_pattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Path::contains_given_pattern (string pattern)}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks for pattern in path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pattern} \cell }{Pattern to search for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if pattern found \par
}}}{
Definition at line {\b 151} of file {\b path.cpp}.}\par
}
{\xe \v get_common_folders\:Path}
{\xe \v Path\:get_common_folders}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > Path::get_common_folders ({\b Path} path)}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finds common folders with another path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Other path to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<string> Common base folders \par
}}}{
Definition at line {\b 130} of file {\b path.cpp}.}\par
}
{\xe \v is_empty\:Path}
{\xe \v Path\:is_empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Path::is_empty ()}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if path is empty. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if no path components \par
}}}{
Definition at line {\b 33} of file {\b path.cpp}.}\par
}
{\xe \v operator<\:Path}
{\xe \v Path\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Path::operator< (const {\b Path} & path) const}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} comparison operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Other path to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if this path is ordered first \par
}}}{
Definition at line {\b 147} of file {\b path.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b path.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b path.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Preprocessor Class Reference\par \pard\plain 
{\tc\tcl2 \v Preprocessor}
{\xe \v Preprocessor}
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing orchestrator. }}\par
{
{\f2 #include <preprocessor.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Preprocessor} (bool force_preprocess)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs preprocessor with optional forcing. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Preprocessor} (bool force_preprocess, string path, double similarity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Testing constructor with direct parameter specification. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing orchestrator. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages the complete preprocessing pipeline including:{
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Code structure analysis\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b Function} extraction\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Duplication detection\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Results organization\par}
\par
Creates the foundation for fast query responses during the main operation phase. \par
}{
Definition at line {\b 35} of file {\b preprocessor.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Preprocessor\:Preprocessor}
{\xe \v Preprocessor\:Preprocessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Preprocessor::Preprocessor (bool force_preprocess)}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs preprocessor with optional forcing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i force_preprocess} \cell }{Whether to force preprocessing even if cached results exist \cell }
{\row }
}
}{
Definition at line {\b 77} of file {\b preprocessor.cpp}.}\par
}
{\xe \v Preprocessor\:Preprocessor}
{\xe \v Preprocessor\:Preprocessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Preprocessor::Preprocessor (bool force_preprocess, string path, double similarity)}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Testing constructor with direct parameter specification. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i force_preprocess} \cell }{Whether to force preprocessing \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{Direct project path specification \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i similarity} \cell }{Direct similarity threshold specification \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Exposed for testing purposes only \par
}}}{
Definition at line {\b 86} of file {\b preprocessor.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b preprocessor.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/pre/{\b preprocessor.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Random_Selector Class Reference\par \pard\plain 
{\tc\tcl2 \v Random_Selector}
{\xe \v Random_Selector}
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random pair selector for similar code segments. }}\par
{
{\f2 #include <random_selector.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Random_Selector} ({\b Similarity_Table} *_similarity_table, double _minimum_similarity, double _maximum_similarity, double _maximum_quantity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs selector with configuration. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random pair selector for similar code segments. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects and displays random pairs of similar functions within configurable similarity thresholds, with formatted output and color-coded display options. \par
}{
Definition at line {\b 29} of file {\b random_selector.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Random_Selector\:Random_Selector}
{\xe \v Random_Selector\:Random_Selector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Random_Selector::Random_Selector ({\b Similarity_Table} * _similarity_table, double _minimum_similarity, double _maximum_similarity, double _maximum_quantity)}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs selector with configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_table} \cell }{Source of similarity data \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _minimum_similarity} \cell }{Minimum similarity threshold (0-100) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _maximum_similarity} \cell }{Maximum similarity threshold (0-100) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _maximum_quantity} \cell }{Maximum number of pairs to select \cell }
{\row }
}
}{
Definition at line {\b 61} of file {\b random_selector.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/rand/{\b random_selector.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/rand/{\b random_selector.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplicate_code_detection.ReturnCode Class Reference\par \pard\plain 
{\tc\tcl2 \v duplicate_code_detection.ReturnCode}
{\xe \v duplicate_code_detection.ReturnCode}
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of possible return codes for the application. }}\par
Inheritance diagram for duplicate_code_detection.ReturnCode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classduplicate__code__detection_1_1ReturnCode__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for duplicate_code_detection.ReturnCode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classduplicate__code__detection_1_1ReturnCode__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SUCCESS} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BAD_INPUT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b THRESHOLD_EXCEEDED} = 2\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of possible return codes for the application. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SUCCESS} \cell }{Indicates successful operation (value: 0) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i BAD_INPUT} \cell }{Indicates invalid input parameters (value: 1) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i THRESHOLD_EXCEEDED} \cell }{Indicates a threshold limit was exceeded (value: 2) \cell }
{\row }
}
}{
Definition at line {\b 31} of file {\b duplicate_code_detection.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BAD_INPUT\:duplicate_code_detection.ReturnCode}
{\xe \v duplicate_code_detection.ReturnCode\:BAD_INPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int duplicate_code_detection.ReturnCode.BAD_INPUT = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v SUCCESS\:duplicate_code_detection.ReturnCode}
{\xe \v duplicate_code_detection.ReturnCode\:SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int duplicate_code_detection.ReturnCode.SUCCESS = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b duplicate_code_detection.py}.}\par
}
{\xe \v THRESHOLD_EXCEEDED\:duplicate_code_detection.ReturnCode}
{\xe \v duplicate_code_detection.ReturnCode\:THRESHOLD_EXCEEDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int duplicate_code_detection.ReturnCode.THRESHOLD_EXCEEDED = 2{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b duplicate_code_detection.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/{\b duplicate_code_detection.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Similar_Function_Finder Class Reference\par \pard\plain 
{\tc\tcl2 \v Similar_Function_Finder}
{\xe \v Similar_Function_Finder}
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator and reporter. }}\par
{
{\f2 #include <similar_function_finder.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Similar_Function_Finder} (string _function_pattern, {\b Similarity_Table} *_similarity_table)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs finder and initiates search. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator and reporter. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identifies functions similar to a specified reference function pattern and provides detailed reporting about the matches found. \par
}{
Definition at line {\b 28} of file {\b similar_function_finder.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Similar_Function_Finder\:Similar_Function_Finder}
{\xe \v Similar_Function_Finder\:Similar_Function_Finder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Similar_Function_Finder::Similar_Function_Finder (string _function_pattern, {\b Similarity_Table} * _similarity_table)}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs finder and initiates search. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _function_pattern} \cell }{{\b Function} name pattern to match \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_table} \cell }{Source of similarity data \cell }
{\row }
}
}{
Definition at line {\b 50} of file {\b similar_function_finder.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/finder/{\b similar_function_finder.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/finder/{\b similar_function_finder.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Similarity_Explorer Class Reference\par \pard\plain 
{\tc\tcl2 \v Similarity_Explorer}
{\xe \v Similarity_Explorer}
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function explorer and analyzer. }}\par
{
{\f2 #include <similarity_explorer.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Similarity_Explorer} ({\b Similarity_Table} *_similarity_table, int _limit_on_results, string _pattern_to_match, bool _both_path_need_to_match, bool sorted_by_number_of_duplicated_code=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs explorer with configuration. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b UNLIMITED_RESULTS} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant for unlimited results display. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b EMPTY_PATTERN} = ""\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant for empty search pattern. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function explorer and analyzer. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables exploration of duplicate functions with configurable filtering and sorting capabilities to identify code duplication patterns. \par
}{
Definition at line {\b 30} of file {\b similarity_explorer.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Similarity_Explorer\:Similarity_Explorer}
{\xe \v Similarity_Explorer\:Similarity_Explorer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Similarity_Explorer::Similarity_Explorer ({\b Similarity_Table} * _similarity_table, int _limit_on_results, string _pattern_to_match, bool _both_path_need_to_match, bool sorted_by_number_of_duplicated_code = {\f2 false})}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs explorer with configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_table} \cell }{Similarity data source \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _limit_on_results} \cell }{Maximum results to show \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _pattern_to_match} \cell }{Filter pattern \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _both_path_need_to_match} \cell }{Whether both paths must match pattern \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sorted_by_number_of_duplicated_code} \cell }{Whether to sort by line count \cell }
{\row }
}
}{
Definition at line {\b 112} of file {\b similarity_explorer.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v EMPTY_PATTERN\:Similarity_Explorer}
{\xe \v Similarity_Explorer\:EMPTY_PATTERN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Similarity_Explorer::EMPTY_PATTERN = ""}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant for empty search pattern. }}\par
{
Definition at line {\b 33} of file {\b similarity_explorer.hpp}.}\par
}
{\xe \v UNLIMITED_RESULTS\:Similarity_Explorer}
{\xe \v Similarity_Explorer\:UNLIMITED_RESULTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Similarity_Explorer::UNLIMITED_RESULTS = 0}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant for unlimited results display. }}\par
{
Definition at line {\b 32} of file {\b similarity_explorer.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/explorer/{\b similarity_explorer.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/explorer/{\b similarity_explorer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Similarity_Table Class Reference\par \pard\plain 
{\tc\tcl2 \v Similarity_Table}
{\xe \v Similarity_Table}
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages and analyzes function similarity relationships. }}\par
{
{\f2 #include <similarity_table.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Similarity_Table} (double _similarity_threshold)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs with custom similarity threshold. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Similarity_Table} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs with default similarity threshold. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_similarity} (double new_similarity_threshold)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates similarity threshold. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b get_similarity} ({\b Path} path1, {\b Path} path2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets similarity between two paths. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b is_similar} ({\b Path} path1, {\b Path} path2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if two paths are similar. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Path} > {\b get_path_list} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets list of all known paths. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Path} > {\b get_similar_path_to_the_reference} ({\b Path} reference)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets paths similar to reference path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< tuple< double, {\b Path}, {\b Path} > > {\b get_all_path_pairs_and_similarity_sorted_by_similarity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs with scores, sorted. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< pair< {\b Path}, {\b Path} > > {\b get_all_similar_path_pairs_sorted_by_similarity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs, sorted by similarity. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< pair< {\b Path}, {\b Path} > > {\b get_all_similar_path_pairs_sorted_by_line_number} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs, sorted by line count. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages and analyzes function similarity relationships. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores pairs of similar functions with their similarity scores, providing various query and analysis capabilities. \par
}{
Definition at line {\b 29} of file {\b similarity_table.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Similarity_Table\:Similarity_Table}
{\xe \v Similarity_Table\:Similarity_Table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Similarity_Table::Similarity_Table (double _similarity_threshold)}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs with custom similarity threshold. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i _similarity_threshold} \cell }{Initial threshold value \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b similarity_table.cpp}.}\par
}
{\xe \v Similarity_Table\:Similarity_Table}
{\xe \v Similarity_Table\:Similarity_Table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Similarity_Table::Similarity_Table ()}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs with default similarity threshold. }}\par
{
Definition at line {\b 53} of file {\b similarity_table.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_all_path_pairs_and_similarity_sorted_by_similarity\:Similarity_Table}
{\xe \v Similarity_Table\:get_all_path_pairs_and_similarity_sorted_by_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< tuple< double, {\b Path}, {\b Path} > > Similarity_Table::get_all_path_pairs_and_similarity_sorted_by_similarity ()}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs with scores, sorted. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<tuple<double,Path,Path>> Similar pairs with scores \par
}}}{
Definition at line {\b 103} of file {\b similarity_table.cpp}.}\par
}
{\xe \v get_all_similar_path_pairs_sorted_by_line_number\:Similarity_Table}
{\xe \v Similarity_Table\:get_all_similar_path_pairs_sorted_by_line_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< pair< {\b Path}, {\b Path} > > Similarity_Table::get_all_similar_path_pairs_sorted_by_line_number ()}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs, sorted by line count. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<pair<Path,Path>> Similar path pairs \par
}}}{
Definition at line {\b 144} of file {\b similarity_table.cpp}.}\par
}
{\xe \v get_all_similar_path_pairs_sorted_by_similarity\:Similarity_Table}
{\xe \v Similarity_Table\:get_all_similar_path_pairs_sorted_by_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< pair< {\b Path}, {\b Path} > > Similarity_Table::get_all_similar_path_pairs_sorted_by_similarity ()}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all similar path pairs, sorted by similarity. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<pair<Path,Path>> Similar path pairs \par
}}}{
Definition at line {\b 116} of file {\b similarity_table.cpp}.}\par
}
{\xe \v get_path_list\:Similarity_Table}
{\xe \v Similarity_Table\:get_path_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b Path} > Similarity_Table::get_path_list ()}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets list of all known paths. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<Path> All paths in table \par
}}}{
Definition at line {\b 88} of file {\b similarity_table.cpp}.}\par
}
{\xe \v get_similar_path_to_the_reference\:Similarity_Table}
{\xe \v Similarity_Table\:get_similar_path_to_the_reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b Path} > Similarity_Table::get_similar_path_to_the_reference ({\b Path} reference)}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets paths similar to reference path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reference} \cell }{{\b Path} to compare against \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<Path> Similar paths \par
}}}{
Definition at line {\b 92} of file {\b similarity_table.cpp}.}\par
}
{\xe \v get_similarity\:Similarity_Table}
{\xe \v Similarity_Table\:get_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Similarity_Table::get_similarity ({\b Path} path1, {\b Path} path2)}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets similarity between two paths. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path1} \cell }{First path to compare \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path2} \cell }{Second path to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double Similarity score \par
}}}{
Definition at line {\b 62} of file {\b similarity_table.cpp}.}\par
}
{\xe \v is_similar\:Similarity_Table}
{\xe \v Similarity_Table\:is_similar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Similarity_Table::is_similar ({\b Path} path1, {\b Path} path2)}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if two paths are similar. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path1} \cell }{First path to compare \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path2} \cell }{Second path to compare \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool True if paths are similar \par
}}}{
Definition at line {\b 83} of file {\b similarity_table.cpp}.}\par
}
{\xe \v update_similarity\:Similarity_Table}
{\xe \v Similarity_Table\:update_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Similarity_Table::update_similarity (double new_similarity_threshold)}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates similarity threshold. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_similarity_threshold} \cell }{New threshold value \cell }
{\row }
}
}{
Definition at line {\b 58} of file {\b similarity_table.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b similarity_table.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
arkanjo/base/{\b similarity_table.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/apple_utils.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/apple_utils.cpp}
{\xe \v arkanjo/base/apple_utils.cpp}
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "apple_utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for apple_utils.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "apple__utils_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
apple_utils.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/apple_utils.cpp}
{\xe \v arkanjo/base/apple_utils.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "apple_utils.hpp"}\par
00002 \par
00003 {\cf21 #ifdef __APPLE__}\par
00004 {\cf21 #include <TargetConditionals.h>}\par
00005 \par
00006 tuple<int, int, int> UtilsOSDependable::parse_terminal_color_response()\{\par
00007 \par
00008 \}\par
00009 \par
00010 {\cf18 float} UtilsOSDependable::get_terminal_bg_color_luminance()\{\par
00011   {\cf17 auto} [r, g, b] = parse_terminal_color_response();\par
00012   {\cf19 return} 0.2126 * (r/255) + 0.7152 * (g/255) + 0.0722 * (b/255);\par
00013 \}\par
00014 \par
00015 {\cf18 bool} UtilsOSDependable::is_bg_color_dark()\{\par
00016   {\cf19 return} get_terminal_bg_color_luminance() <= 0.5;\par
00017 \}\par
00018 \par
00019 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/apple_utils.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/apple_utils.hpp}
{\xe \v arkanjo/base/apple_utils.hpp}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for apple_utils.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "apple__utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "apple__utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b UtilsOSDependable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b UtilsOSDependable::get_terminal_bg_color_luminance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< int, int, int > {\b UtilsOSDependable::parse_terminal_color_response} (const string &response)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b UtilsOSDependable::capture_terminal_response} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Captures terminal response to color query. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UtilsOSDependable::is_bg_color_dark} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
apple_utils.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/apple_utils.hpp}
{\xe \v arkanjo/base/apple_utils.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // }\par
00002 \par
00003 {\cf21 #ifndef APPLE_UTILS_HPP}\par
00004 {\cf21 #define APPLE_UTILS_HPP}\par
00005 \par
00006 {\cf21 #pragma once}\par
00007 {\cf21 #include <string>}\par
00008 {\cf21 #include <sstream>}\par
00009 \par
00010 {\cf17 using namespace }std;\par
00011 \par
00012 {\cf17 namespace }UtilsOSDependable\{\par
00013 \par
00014         {\cf18 float} get_terminal_bg_color_luminance();\par
00015         tuple<int, int, int> parse_terminal_color_response({\cf17 const} {\cf18 string}& response);\par
00016         {\cf18 string} capture_terminal_response();\par
00017         {\cf18 bool} is_bg_color_dark();\par
00018 \};\par
00019 \par
00020 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/config.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/config.cpp}
{\xe \v arkanjo/base/config.cpp}
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "config.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for config.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "config_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/config.cpp}
{\xe \v arkanjo/base/config.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include "config.hpp"} \par
00003 \par
00004 {\cf18 string} Config::getBasePath()\{\par
00005     {\cf19 return} base_path;\par
00006 \}\par
00007 \par
00008 {\cf18 void} Config::setTestConfig()\{\par
00009     base_path = {\cf22 "tests/e2e/current/tmp"};\par
00010 \}\par
00011 \par
00012 {\cf18 void} Config::setDefaultConfig()\{\par
00013     base_path = {\cf22 "tmp"};\par
00014 \}\par
00015 \par
00016 Config* Config::config_ = {\cf17 nullptr};\par
00017 \par
00018 Config *Config::config()\{\par
00019     {\cf19 if}(config_ == {\cf17 nullptr})\{\par
00020         config_ = {\cf17 new} Config();\par
00021     \}\par
00022     {\cf19 return} config_;\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/config.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/config.hpp}
{\xe \v arkanjo/base/config.hpp}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration management interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for config.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "config_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "config_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Config}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Singleton configuration manager class. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration management interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the singleton configuration class that manages application paths. Provides abstraction for file paths in the temporary codebase without requiring direct file access.\par
Contains the abstraction of a path to a function in the temporary code base. Useful for elements that does not need to, in fact, read the files in the temporary codebase. \par
}{
Definition in file {\b config.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/config.hpp}
{\xe \v arkanjo/base/config.hpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 \par
00014 {\cf21 #ifndef CONFIG_HPP}\par
00015 {\cf21 #define CONFIG_HPP}\par
00016 \par
00017 {\cf21 #include <bits/stdc++.h>} \par
00018 {\cf17 using namespace }std;\par
00019 \par
00026 {\cf17 class }Config \{\par
00027         {\cf18 string} base_path = {\cf22 "tmp"};  \par
00028 \par
00029 {\cf17 protected}:\par
00030         {\cf17 static} Config* config_;    \par
00031 \par
00035         Config()\{\}\par
00036 \par
00037 {\cf17 public}:\par
00041         Config(Config &other) = {\cf17 delete};\par
00042         \par
00046         {\cf18 void} operator=({\cf17 const} Config &) = {\cf17 delete};\par
00047 \par
00052         {\cf17 static} Config *config();\par
00053 \par
00058         {\cf18 string} getBasePath();\par
00059         \par
00065         {\cf18 void} setTestConfig();\par
00066         \par
00070         {\cf18 void} setDefaultConfig();\par
00071 \};\par
00072 \par
00073 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/function.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/function.cpp}
{\xe \v arkanjo/base/function.cpp}
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "function.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/function.cpp}
{\xe \v arkanjo/base/function.cpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "function.hpp"}\par
00002 \par
00003 {\cf18 void} Function::read_content()\{\par
00004     {\cf18 string} source_path = path.build_source_path();\par
00005     content = Utils::read_file_generic(source_path);\par
00006 \}   \par
00007 \par
00008 {\cf18 void} Function::read_header()\{\par
00009     {\cf18 string} header_path = path.build_header_path();\par
00010     header = Utils::read_file_generic(header_path);\par
00011 \}\par
00012 {\cf18 void} Function::read_info()\{\par
00013     {\cf18 string} info_path = path.build_info_path();\par
00014     Json::Value info = Utils::read_json(info_path);\par
00015     line_declaration = info[LINE_DECLARATION_JSON].asInt();\par
00016     start_number_line = info[START_NUMBER_LINE_JSON].asInt();\par
00017     end_number_line = info[END_NUMBER_LINE_JSON].asInt();\par
00018 \}\par
00019 \par
00020 {\cf18 int} Function::number_of_lines()\{\par
00021     {\cf19 return} end_number_line-line_declaration+1;\par
00022 \}\par
00023 \par
00024 Function::Function(Path _path)\{\par
00025     path = _path;\par
00026     {\cf19 if}(path.is_empty())\{\par
00027         {\cf19 return};\par
00028     \}\par
00029     read_content();\par
00030     read_header();\par
00031     read_info();\par
00032 \}\par
00033 \par
00034 array<int,3> Function::get_scope_function_in_file()\{\par
00035     {\cf19 return} \{line_declaration,start_number_line,end_number_line\};\par
00036 \}\par
00037 \par
00038 vector<string> Function::get_header()\{\par
00039     {\cf19 return} header;\par
00040 \}\par
00041 \par
00042 vector<string> Function::build_all_content()\{\par
00043     \par
00044     vector<string> ret;\par
00045     {\cf20 //the last line of header should merge with the first line of content}\par
00046     {\cf19 for}({\cf17 auto} line : header)\{\par
00047         ret.push_back(line);\par
00048     \}\par
00049     {\cf19 for}({\cf18 int} i = 0; i < int(content.size()); i++)\{\par
00050         {\cf17 auto} line = content[i];\par
00051         {\cf19 if}(i >= 1)\{\par
00052             ret.push_back(line);\par
00053         \}{\cf19 else}\{\par
00054             ret.back() += line;\par
00055         \}\par
00056     \}\par
00057     {\cf19 return} ret;\par
00058 \}\par
00059 \par
00060 {\cf18 void} Function::print_basic_info()\{\par
00061     {\cf18 string} function_message = FUNCTION_PREFIX_PRINT + path.build_function_name();\par
00062     {\cf18 string} relative_message = RELATIVE_PATH_PRINT + path.build_relative_path();\par
00063     {\cf18 string} start_message = LINE_DECLARATION_PRINT + to_string(line_declaration+1);\par
00064     {\cf18 string} end_message = END_DECLARATION_PRINT + to_string(end_number_line+1);\par
00065     {\cf18 string} number_message = NUMBER_LINE_PRINT + to_string(number_of_lines());\par
00066     \par
00067     cout << {\cf23 '\\n'};\par
00068     cout << Utils::LIMITER_PRINT << {\cf23 '\\n'};\par
00069     cout << Utils::format_colored_message(function_message, Utils::BRIGHT_YELLOW) << {\cf23 '\\n'};\par
00070     cout << Utils::format_colored_message(relative_message, Utils::GREEN) << {\cf23 '\\n'};\par
00071     cout << Utils::format_colored_message(start_message, Utils::WHITE) << {\cf23 '\\n'};\par
00072     cout << Utils::format_colored_message(end_message, Utils::WHITE) << {\cf23 '\\n'};\par
00073     cout << Utils::format_colored_message(number_message, Utils::WHITE) << {\cf23 '\\n'};\par
00074     cout << Utils::LIMITER_PRINT << {\cf23 '\\n'};\par
00075     cout << {\cf23 '\\n'};\par
00076 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/function.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/function.hpp}
{\xe \v arkanjo/base/function.hpp}
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} abstraction for temporary codebase. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include <jsoncpp/json/json.h>}\par
{\f2 #include "path.hpp"}\par
{\f2 #include "utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Function}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a code function with its content and metadata. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} abstraction for temporary codebase. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a function in the temporary codebase with all related information. Handles reading and managing function content, headers, and metadata.\par
This is the abstraction of a function in the temporary codebase, contains all the information related to a function, and for that open and read the files in the temporary codebase. \par
}{
Definition in file {\b function.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/function.hpp}
{\xe \v arkanjo/base/function.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef FUNCTION_HPP}\par
00014 {\cf21 #define FUNCTION_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 {\cf20 // WARNING: This import may only work in Ubuntu}\par
00018 {\cf20 // See: https://github.com/stardust95/TinyCompiler/issues/2}\par
00019 {\cf21 #include <jsoncpp/json/json.h>}\par
00020 \par
00021 {\cf21 #include "path.hpp"}\par
00022 {\cf21 #include "utils.hpp"}\par
00023 {\cf17 using namespace }std;\par
00024 \par
00031 {\cf17 class }Function \{\par
00032         {\cf17 private}:\par
00033                 {\cf18 string} LINE_DECLARATION_JSON = {\cf22 "line_declaration"};    \par
00034                 {\cf18 string} START_NUMBER_LINE_JSON = {\cf22 "start_number_line"};  \par
00035                 {\cf18 string} END_NUMBER_LINE_JSON = {\cf22 "end_number_line"};      \par
00036 \par
00037                 {\cf18 string} FUNCTION_PREFIX_PRINT = {\cf22 "Function Name: "};    \par
00038                 {\cf18 string} RELATIVE_PATH_PRINT = {\cf22 "Relative Path: "};       \par
00039                 {\cf18 string} LINE_DECLARATION_PRINT = {\cf22 "Starts on line: "};  \par
00040                 {\cf18 string} END_DECLARATION_PRINT = {\cf22 "Ends on line: "};     \par
00041                 {\cf18 string} NUMBER_LINE_PRINT = {\cf22 "Total number of lines: "}; \par
00042 \par
00043                 Path path;                  \par
00044                 vector<string> content;     \par
00045                 vector<string> header;      \par
00046                 {\cf18 int} start_number_line;      \par
00047                 {\cf18 int} line_declaration;       \par
00048                 {\cf18 int} end_number_line;        \par
00049 \par
00053                 {\cf18 void} read_content();\par
00054 \par
00058                 {\cf18 void} read_header();\par
00059 \par
00063                 {\cf18 void} read_info();\par
00064 \par
00065         {\cf17 public}:\par
00070                 {\cf18 int} number_of_lines();\par
00071 \par
00076                 Function(Path _path);\par
00077 \par
00085                 array<int,3> get_scope_function_in_file();\par
00086 \par
00091                 vector<string> get_header();\par
00092 \par
00097                 vector<string> build_all_content();\par
00098 \par
00102                 {\cf18 void} print_basic_info();\par
00103 \};\par
00104 \par
00105 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/linux_utils.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/linux_utils.cpp}
{\xe \v arkanjo/base/linux_utils.cpp}
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "linux_utils.hpp"}\par
{\f2 #include <sys/utsname.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for linux_utils.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "linux__utils_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
linux_utils.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/linux_utils.cpp}
{\xe \v arkanjo/base/linux_utils.cpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "linux_utils.hpp"}\par
00002 \par
00003 {\cf21 #include <sys/utsname.h>}\par
00004 \par
00005 {\cf18 int} UtilsOSDependable::convert_16_bit_to_8_bit({\cf17 const} std::string& hex16)\{\par
00006   {\cf19 try}\{\par
00007       {\cf18 unsigned} {\cf18 long} value = std::stoul(hex16, {\cf17 nullptr}, 16);\par
00008       {\cf19 return} {\cf17 static_cast<}{\cf18 int}{\cf17 >}(value / 256);  \par
00009   \} {\cf19 catch} (...)\{\par
00010       {\cf19 return} 0; \par
00011   \}\par
00012 \}\par
00013 \par
00014 tuple<int, int, int> UtilsOSDependable::parse_terminal_color_response({\cf17 const} {\cf18 string}& response)\{\par
00015   {\cf17 const} {\cf18 size_t} start_pos = response.find({\cf22 "rgb:"});\par
00016   {\cf19 if} (start_pos == string::npos)\{\par
00017       {\cf19 return} \{0, 0, 0\};\par
00018   \}\par
00019 \par
00020   {\cf17 const} {\cf18 size_t} end_pos = response.find({\cf22 "\\033\\\\"}, start_pos);\par
00021   {\cf19 if} (end_pos == string::npos)\{\par
00022       {\cf19 return} \{0, 0, 0\};\par
00023   \}\par
00024 \par
00025   {\cf18 string} rgb_str = response.substr(start_pos + 4, end_pos - (start_pos + 4));\par
00026 \par
00027   replace(rgb_str.begin(), rgb_str.end(), {\cf23 '/'}, {\cf23 ' '});\par
00028 \par
00029   istringstream iss(rgb_str);\par
00030   {\cf18 string} r_hex, g_hex, b_hex;\par
00031   iss >> r_hex >> g_hex >> b_hex;\par
00032 \par
00033   {\cf18 int} r = convert_16_bit_to_8_bit(r_hex);\par
00034   {\cf18 int} g = convert_16_bit_to_8_bit(g_hex);\par
00035   {\cf18 int} b = convert_16_bit_to_8_bit(b_hex);\par
00036 \par
00037   {\cf19 return} \{r, g, b\};\par
00038 \}\par
00039 \par
00040 {\cf18 string} UtilsOSDependable::capture_terminal_response()\{\par
00041   termios oldt, newt;\par
00042   tcgetattr(STDIN_FILENO, &oldt);\par
00043   newt = oldt;\par
00044   newt.c_lflag &= ~(ICANON | ECHO);\par
00045   tcsetattr(STDIN_FILENO, TCSANOW, &newt);\par
00046 \par
00047   {\cf18 int} oldf = fcntl(STDIN_FILENO, F_GETFL, 0);\par
00048   fcntl(STDIN_FILENO, F_SETFL, oldf | O_NONBLOCK);\par
00049 \par
00050   cout << {\cf22 "\\033]11;?\\033\\\\"};\par
00051   cout.flush();\par
00052 \par
00053   {\cf18 string} response;\par
00054   {\cf18 char} ch;\par
00055   timeval tv;\par
00056   tv.tv_sec = 0;\par
00057   tv.tv_usec = 100000; {\cf20 // 100ms timeout}\par
00058 \par
00059   fd_set readfds;\par
00060   FD_ZERO(&readfds);\par
00061   FD_SET(STDIN_FILENO, &readfds);\par
00062 \par
00063   {\cf19 while} (select(STDIN_FILENO + 1, &readfds, NULL, NULL, &tv) > 0)\{\par
00064       {\cf19 if} (read(STDIN_FILENO, &ch, 1) > 0)\{\par
00065           response += ch;\par
00066       \} {\cf19 else}\{\par
00067           {\cf19 break};\par
00068       \}\par
00069   \}\par
00070 \par
00071   tcsetattr(STDIN_FILENO, TCSANOW, &oldt);\par
00072   fcntl(STDIN_FILENO, F_SETFL, oldf);\par
00073 \par
00074   {\cf19 return} response;\par
00075 \}\par
00076 \par
00077 {\cf18 float} UtilsOSDependable::get_terminal_bg_color_luminance()\{\par
00078   {\cf19 if} (!isatty(STDOUT_FILENO))\{\par
00079       {\cf19 return} 0;\par
00080   \}\par
00081 \par
00082   {\cf18 string} color_str = capture_terminal_response();\par
00083   {\cf17 auto} [r, g, b] = parse_terminal_color_response(color_str);\par
00084   \par
00085   {\cf19 return} 0.2126 * (r/255) + 0.7152 * (g/255) + 0.0722 * (b/255);\par
00086 \}\par
00087 \par
00088 {\cf18 bool} UtilsOSDependable::is_bg_color_dark()\{\par
00089     {\cf19 return} get_terminal_bg_color_luminance() <= 0.5;\par
00090 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/linux_utils.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/linux_utils.hpp}
{\xe \v arkanjo/base/linux_utils.hpp}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linux-specific utility functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <termios.h>}\par
{\f2 #include <sys/ioctl.h>}\par
{\f2 #include <fcntl.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <sstream>}\par
{\f2 #include <iomanip>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for linux_utils.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "linux__utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "linux__utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b UtilsOSDependable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b UtilsOSDependable::convert_16_bit_to_8_bit} (const string &hex16)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a 16-bit hex color string to 8-bit RGB components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b UtilsOSDependable::get_terminal_bg_color_luminance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< int, int, int > {\b UtilsOSDependable::parse_terminal_color_response} (const string &response)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b UtilsOSDependable::capture_terminal_response} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Captures terminal response to color query. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UtilsOSDependable::is_bg_color_dark} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linux-specific utility functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides OS-dependent implementations for Linux systems, including terminal color detection and conversion utilities. \par
}{
Definition in file {\b linux_utils.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
linux_utils.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/linux_utils.hpp}
{\xe \v arkanjo/base/linux_utils.hpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00008 \par
00009 {\cf21 #ifndef LINUX_UTILS_HPP}\par
00010 {\cf21 #define LINUX_UTILS_HPP}\par
00011 \par
00012 {\cf21 #pragma once}\par
00013 {\cf21 #include <iostream>}\par
00014 {\cf21 #include <string>}\par
00015 {\cf21 #include <algorithm>}\par
00016 {\cf21 #include <cstdlib>}\par
00017 {\cf21 #include <unistd.h>}\par
00018 {\cf21 #include <termios.h>}\par
00019 {\cf21 #include <sys/ioctl.h>}\par
00020 {\cf21 #include <fcntl.h>}\par
00021 {\cf21 #include <vector>}\par
00022 {\cf21 #include <sstream>}\par
00023 {\cf21 #include <iomanip>}\par
00024 \par
00025 {\cf17 using namespace }std;\par
00026 \par
00027 {\cf17 namespace }UtilsOSDependable\{\par
00036         {\cf18 int} convert_16_bit_to_8_bit({\cf17 const} {\cf18 string}& hex16);\par
00037         \par
00045         {\cf18 float} get_terminal_bg_color_luminance();\par
00046         \par
00055         tuple<int, int, int> parse_terminal_color_response({\cf17 const} {\cf18 string}& response);\par
00056         \par
00064         {\cf18 string} capture_terminal_response();\par
00065         \par
00073         {\cf18 bool} is_bg_color_dark();\par
00074 \};\par
00075 \par
00076 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/path.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/path.cpp}
{\xe \v arkanjo/base/path.cpp}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "path.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for path.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
path.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/path.cpp}
{\xe \v arkanjo/base/path.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include "path.hpp"} \par
00003 \par
00004 vector<string> Path::split_path({\cf18 string} string_path)\{\par
00005     {\cf18 string} aux = {\cf22 ""};\par
00006     vector<string> ret;\par
00007     {\cf19 for}({\cf17 auto} c : string_path)\{\par
00008         {\cf19 if}(c == BAR)\{\par
00009             ret.push_back(aux);\par
00010             aux = {\cf22 ""};\par
00011         \}{\cf19 else}\{ \par
00012             aux += c;\par
00013         \}\par
00014     \}\par
00015     {\cf19 if}(!aux.empty())\{\par
00016         ret.push_back(aux);\par
00017     \}\par
00018     {\cf19 return} ret;\par
00019 \}\par
00020 \par
00021 {\cf18 int} Path::find_position_start_relative_path()\{\par
00022     {\cf18 int} sz = tokens.size();\par
00023     {\cf18 int} ret = sz;\par
00024     {\cf19 for}({\cf18 int} i = 0; i < sz-1; i++)\{\par
00025         {\cf19 if}(tokens[i] == BASE_INIT_STRING && tokens[i+1] == SOURCE_STRING)\{\par
00026             ret = i+2;\par
00027         \}\par
00028     \}\par
00029     assert(ret != sz && {\cf22 "PATH NOT VALID FOR THE TOOL"});\par
00030     {\cf19 return} ret;\par
00031 \}\par
00032 \par
00033 {\cf18 bool} Path::is_empty()\{\par
00034     {\cf19 return} tokens.empty();\par
00035 \}\par
00036 \par
00037 Path::Path()\{\par
00038 \}\par
00039 \par
00040 Path::Path({\cf18 string} string_path)\{\par
00041     tokens = split_path(string_path);\par
00042     position_start_relative_path = find_position_start_relative_path();\par
00043 \}\par
00044 \par
00045 {\cf18 string} Path::build_string_path(vector<string> path)\{\par
00046     {\cf18 string} string_path;\par
00047     {\cf18 int} sz = path.size();\par
00048     {\cf19 for}({\cf18 int} i = 0; i < sz; i++)\{\par
00049         string_path += path[i];\par
00050         {\cf19 if}(i != sz-1)\{\par
00051             string_path += BAR;\par
00052         \}\par
00053     \}\par
00054     {\cf19 return} string_path;\par
00055 \}\par
00056 \par
00057 {\cf18 string} Path::build_base_path({\cf18 string} base)\{\par
00058     {\cf19 if}(is_empty())\{\par
00059         {\cf19 return} {\cf22 ""};\par
00060     \}\par
00061     vector<string> path = tokens;\par
00062     {\cf18 int} pos_change = position_start_relative_path-1;\par
00063     path[pos_change] = base;\par
00064     {\cf18 string} string_path = build_string_path(path);\par
00065     {\cf19 return} string_path;\par
00066 \}\par
00067 \par
00068 {\cf18 string} Path::build_source_path()\{\par
00069     {\cf19 return} build_base_path(SOURCE_STRING);\par
00070 \}\par
00071 \par
00072 {\cf18 string} Path::build_header_path()\{\par
00073     {\cf19 return} build_base_path(HEADER_STRING);\par
00074 \}\par
00075 \par
00076 {\cf18 string} Path::build_info_path()\{\par
00077     {\cf18 string} ret = build_base_path(INFO_STRING);\par
00078     {\cf19 if}(ret == {\cf22 ""})\{\par
00079         {\cf19 return} {\cf22 ""};\par
00080     \}\par
00081     ret = remove_extension(ret);\par
00082     {\cf19 if}(ret == {\cf22 ""})\{\par
00083         {\cf19 return} {\cf22 ""};\par
00084     \}\par
00085     ret += JSON_EXTENSION;\par
00086     {\cf19 return} ret;\par
00087 \}\par
00088 \par
00089 vector<string> Path::get_tokens_from_relative_path()\{\par
00090     vector<string> token_relative_path = tokens;\par
00091     token_relative_path.pop_back();\par
00092     {\cf18 int} to_remove = position_start_relative_path;\par
00093     reverse(token_relative_path.begin(),token_relative_path.end());\par
00094     {\cf19 for}({\cf18 int} i = 0; i < to_remove; i++)\{\par
00095         token_relative_path.pop_back();\par
00096     \}\par
00097     reverse(token_relative_path.begin(),token_relative_path.end());\par
00098     {\cf19 return} token_relative_path;\par
00099 \}\par
00100 \par
00101 {\cf18 string} Path::remove_extension({\cf18 string} token)\{\par
00102     {\cf19 while}(!token.empty())\{\par
00103         {\cf17 auto} c = token.back();\par
00104         token.pop_back();\par
00105         {\cf19 if}(c == {\cf23 '.'})\{\par
00106             {\cf19 break};\par
00107         \}\par
00108     \}\par
00109     {\cf19 return} token;\par
00110 \}\par
00111 \par
00112 {\cf18 string} Path::build_relative_path()\{\par
00113     {\cf19 if}(is_empty())\{\par
00114         {\cf19 return} {\cf22 ""};\par
00115     \}\par
00116     vector<string> token_relative_path = get_tokens_from_relative_path();\par
00117     {\cf18 string} string_path = build_string_path(token_relative_path);\par
00118     {\cf19 return} string_path;\par
00119 \}\par
00120 \par
00121 {\cf18 string} Path::build_function_name()\{\par
00122     {\cf19 if}(is_empty())\{\par
00123         {\cf19 return} {\cf22 ""};\par
00124     \}\par
00125     {\cf18 string} function_name = tokens.back();\par
00126     function_name = remove_extension(function_name);\par
00127     {\cf19 return} function_name;\par
00128 \}\par
00129 \par
00130 vector<string> Path::get_common_folders(Path path)\{\par
00131     vector<string> tokens_relative_1 = get_tokens_from_relative_path();\par
00132     vector<string> tokens_relative_2 = path.get_tokens_from_relative_path();\par
00133     {\cf18 int} minimum_size_tokens = min(tokens_relative_1.size(),tokens_relative_2.size());\par
00134     vector<string> common_folders;\par
00135     {\cf19 for}({\cf18 int} i = 0; i < minimum_size_tokens; i++)\{\par
00136         {\cf17 auto} token_1 = tokens_relative_1[i];\par
00137         {\cf17 auto} token_2 = tokens_relative_2[i];\par
00138         {\cf19 if}(token_1 == token_2)\{\par
00139             common_folders.push_back(token_1);\par
00140         \}{\cf19 else}\{\par
00141             {\cf19 break};\par
00142         \}\par
00143     \}\par
00144     {\cf19 return} common_folders;\par
00145 \}\par
00146 \par
00147 {\cf18 bool} Path::operator<({\cf17 const} Path &path){\cf17  const}\{\par
00148     {\cf19 return} tokens < path.tokens;\par
00149 \}\par
00150 \par
00151 {\cf18 bool} Path::contains_given_pattern({\cf18 string} pattern)\{\par
00152     {\cf18 string} relative_path_plus_function_name = build_relative_path() + BAR + build_function_name();\par
00153     {\cf19 return} relative_path_plus_function_name.find(pattern) != string::npos;\par
00154 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/path.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/path.hpp}
{\xe \v arkanjo/base/path.hpp}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} abstraction for temporary codebase. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for path.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Path}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} manipulation class for tool-specific directory structure. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Path} abstraction for temporary codebase. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides path manipulation utilities specific to the tool's directory structure. Handles paths without requiring actual file system access. Contains the abstraction of a path to a function in the temporary code base. Useful for elements that does not need to, in fact, read the files in the temporary codebase. \par
}{
Definition in file {\b path.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
path.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/path.hpp}
{\xe \v arkanjo/base/path.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 \par
00012 {\cf21 #ifndef PATH_HPP}\par
00013 {\cf21 #define PATH_HPP}\par
00014 \par
00015 {\cf21 #include <bits/stdc++.h>} \par
00016 {\cf17 using namespace }std;\par
00017 \par
00024 {\cf17 class }Path \{\par
00025         {\cf17 private}:\par
00026                 {\cf18 string} JSON_EXTENSION = {\cf22 ".json"};      \par
00027                 {\cf18 string} BASE_INIT_STRING = {\cf22 "tmp"};     \par
00028                 {\cf18 string} SOURCE_STRING = {\cf22 "source"};     \par
00029                 {\cf18 string} HEADER_STRING = {\cf22 "header"};     \par
00030                 {\cf18 string} INFO_STRING = {\cf22 "info"};         \par
00031                 {\cf18 char} BAR = {\cf23 '/'};                      \par
00032 \par
00033                 vector<string> tokens;               \par
00034                 {\cf18 int} position_start_relative_path;    \par
00035 \par
00041                 vector<string> split_path({\cf18 string} string_path);\par
00042 \par
00047                 {\cf18 int} find_position_start_relative_path();\par
00048 \par
00054                 {\cf18 string} build_string_path(vector<string> path);\par
00055 \par
00061                 {\cf18 string} build_base_path({\cf18 string} base);\par
00062 \par
00067                 vector<string> get_tokens_from_relative_path();\par
00068 \par
00074                 {\cf18 string} remove_extension({\cf18 string} token);\par
00075 \par
00076         {\cf17 public}:\par
00081                 {\cf18 bool} is_empty();\par
00082 \par
00086                 Path();\par
00087 \par
00092                 Path({\cf18 string} string_path);\par
00093 \par
00098                 {\cf18 string} build_source_path();\par
00099 \par
00104                 {\cf18 string} build_header_path();\par
00105 \par
00110                 {\cf18 string} build_info_path();\par
00111 \par
00116                 {\cf18 string} build_relative_path();\par
00117 \par
00122                 {\cf18 string} build_function_name();\par
00123 \par
00129                 vector<string> get_common_folders(Path path);\par
00130 \par
00136                 {\cf18 bool} contains_given_pattern({\cf18 string} pattern);\par
00137 \par
00143                 {\cf18 bool} operator<({\cf17 const} Path &path) {\cf17 const};\par
00144 \};\par
00145 \par
00146 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/similarity_table.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/similarity_table.cpp}
{\xe \v arkanjo/base/similarity_table.cpp}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similarity_table.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__table_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similarity_table.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/similarity_table.cpp}
{\xe \v arkanjo/base/similarity_table.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "similarity_table.hpp"}\par
00002 \par
00003 {\cf18 int} Similarity_Table::find_id_path(Path path)\{\par
00004     {\cf19 if}(path_id.find(path) == path_id.end())\{\par
00005         path_id[path] = paths.size();\par
00006         paths.push_back(path);\par
00007         vector<pair<int,double>> empty_vec;\par
00008         similarity_graph.push_back(empty_vec);\par
00009     \}\par
00010     {\cf19 return} path_id[path];\par
00011 \}\par
00012 \par
00013 {\cf18 void} Similarity_Table::read_comparation(ifstream &table_file)\{\par
00014     {\cf18 string} string_path1, string_path2;\par
00015     {\cf18 double} similarity;\par
00016     table_file >> string_path1 >> string_path2 >> similarity;\par
00017 \par
00018     {\cf18 int} id1 = find_id_path(Path(string_path1));\par
00019     {\cf18 int} id2 = find_id_path(Path(string_path2));\par
00020 \par
00021     {\cf19 if}(id1 > id2)\{\par
00022         swap(id1,id2);\par
00023     \}\par
00024 \par
00025     similarity_graph[id1].push_back(make_pair(id2,similarity));\par
00026     similarity_graph[id2].push_back(make_pair(id1,similarity));\par
00027     similarity_table[make_pair(id1,id2)] = similarity;\par
00028 \}\par
00029 \par
00030 {\cf18 void} Similarity_Table::read_file_table(ifstream &table_file)\{\par
00031     {\cf18 int} number_comparations;\par
00032     table_file >> number_comparations;\par
00033     {\cf19 for}({\cf18 int} i = 0; i < number_comparations; i++)\{\par
00034         read_comparation(table_file);\par
00035     \}\par
00036 \}\par
00037 \par
00038 {\cf18 void} Similarity_Table::init_similarity_table()\{\par
00039     std::ifstream table_file;\par
00040     table_file.open(SIMILARITY_TABLE_FILE_NAME);\par
00041     Utils::ensure_file_is_open(table_file,SIMILARITY_TABLE_FILE_NAME);\par
00042 \par
00043     read_file_table(table_file);\par
00044 \par
00045     table_file.close();\par
00046 \}\par
00047 \par
00048 Similarity_Table::Similarity_Table({\cf18 double} _similarity_threshold)\{\par
00049     similarity_threshold= _similarity_threshold;\par
00050     init_similarity_table();\par
00051 \}\par
00052 \par
00053 Similarity_Table::Similarity_Table()\{\par
00054     similarity_threshold = DEFAULT_SIMILARITY;\par
00055     init_similarity_table();\par
00056 \}\par
00057 \par
00058 {\cf18 void} Similarity_Table::update_similarity({\cf18 double} new_similarity_threshold)\{\par
00059     similarity_threshold = new_similarity_threshold;\par
00060 \}\par
00061 \par
00062 {\cf18 double} Similarity_Table::get_similarity(Path path1, Path path2)\{\par
00063     {\cf18 int} id1 = find_id_path(path1);\par
00064     {\cf18 int} id2 = find_id_path(path2);\par
00065 \par
00066     {\cf19 if}(id1 == id2)\{\par
00067         {\cf19 return} MAXIMUM_SIMILARITY;\par
00068     \}\par
00069     {\cf19 if}(id1 > id2)\{\par
00070         swap(id1,id2);\par
00071     \}\par
00072     pair<int,int> aux = make_pair(id1,id2);\par
00073     {\cf19 if}(similarity_table.find(aux) != similarity_table.end())\{\par
00074         {\cf19 return} similarity_table[aux];\par
00075     \}\par
00076     {\cf19 return} MINIMUM_SIMILARITY;\par
00077 \}\par
00078 \par
00079 {\cf18 bool} Similarity_Table::is_above_threshold({\cf18 double} similarity)\{\par
00080     {\cf19 return} similarity_threshold <= similarity + EPS_ERROR_MARGIN;\par
00081 \}\par
00082 \par
00083 {\cf18 double} Similarity_Table::is_similar(Path path1, Path path2)\{\par
00084     {\cf18 double} similarity = get_similarity(path1, path2);\par
00085     {\cf19 return} is_above_threshold(similarity);\par
00086 \}\par
00087 \par
00088 vector<Path> Similarity_Table::get_path_list()\{\par
00089     {\cf19 return} paths;\par
00090 \}\par
00091 \par
00092 vector<Path> Similarity_Table::get_similar_path_to_the_reference(Path reference)\{\par
00093     {\cf18 int} {\cf18 id} = find_id_path(reference);\par
00094     vector<Path> ret;\par
00095     {\cf19 for}({\cf17 auto} [{\cf18 id},similarity] : similarity_graph[{\cf18 id}])\{\par
00096         {\cf19 if}(is_above_threshold(similarity))\{\par
00097             ret.push_back(paths[{\cf18 id}]);\par
00098         \}\par
00099     \}\par
00100     {\cf19 return} ret;\par
00101 \}\par
00102 \par
00103 vector<tuple<double,Path,Path>> Similarity_Table::get_all_path_pairs_and_similarity_sorted_by_similarity()\{\par
00104     vector<tuple<double,Path,Path>> similar_path_pairs;\par
00105     {\cf19 for}({\cf17 auto} [ ids, similarity] : similarity_table)\{\par
00106         Path path1 = paths[ids.first];\par
00107         Path path2 = paths[ids.second];\par
00108         {\cf19 if}(is_similar(path1,path2))\{\par
00109             similar_path_pairs.push_back(\{similarity,path1,path2\});\par
00110         \}\par
00111     \}\par
00112     sort(similar_path_pairs.rbegin(),similar_path_pairs.rend());\par
00113     {\cf19 return} similar_path_pairs;\par
00114 \}\par
00115 \par
00116 vector<pair<Path,Path>> Similarity_Table::get_all_similar_path_pairs_sorted_by_similarity()\{\par
00117     {\cf17 auto} similar_path_pairs = get_all_path_pairs_and_similarity_sorted_by_similarity();\par
00118     vector<pair<Path,Path>> ret;\par
00119     {\cf19 for}({\cf17 auto} [similarity,path1,path2] : similar_path_pairs)\{\par
00120         ret.push_back(\{path1,path2\});\par
00121     \}\par
00122     {\cf19 return} ret;\par
00123 \}\par
00124 \par
00125 vector<tuple<int,Path,Path>> Similarity_Table::sort_pairs_by_line_number(vector<pair<Path,Path>> similar_path_pairs)\{\par
00126     vector<tuple<int,Path,Path>> similar_path_pairs_with_number_of_lines;\par
00127     {\cf19 for}({\cf17 auto} [path1,path2] : similar_path_pairs)\{\par
00128         Function function(path1);\par
00129         tuple<int,Path,Path> aux = \{function.number_of_lines(),path1,path2\};\par
00130         similar_path_pairs_with_number_of_lines.push_back(aux);\par
00131     \}\par
00132     sort(\par
00133             similar_path_pairs_with_number_of_lines.begin(),\par
00134             similar_path_pairs_with_number_of_lines.end(),\par
00135             [&](tuple<int,Path,Path> pair1, tuple<int,Path,Path> pair2)\{\par
00136                 int number_lines1 = get<0>(pair1);\par
00137                 int number_lines2 = get<0>(pair2);\par
00138                 return number_lines1 > number_lines2;\par
00139             \}           \par
00140         );\par
00141     {\cf19 return} similar_path_pairs_with_number_of_lines;\par
00142 \}\par
00143 \par
00144 vector<pair<Path,Path>> Similarity_Table::get_all_similar_path_pairs_sorted_by_line_number()\{\par
00145     vector<pair<Path,Path>> similar_path_pairs = get_all_similar_path_pairs_sorted_by_similarity();\par
00146 \par
00147     vector<tuple<int,Path,Path>> similar_path_pairs_with_number_of_lines = \par
00148         sort_pairs_by_line_number(similar_path_pairs);\par
00149     \par
00150     vector<pair<Path,Path>> ret;\par
00151     {\cf19 for}({\cf17 auto} [line_number,path1,path2] : similar_path_pairs_with_number_of_lines)\{\par
00152         ret.push_back(\{path1,path2\});\par
00153     \}\par
00154 \par
00155     {\cf19 return} ret;\par
00156 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/similarity_table.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/similarity_table.hpp}
{\xe \v arkanjo/base/similarity_table.hpp}
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similarity relationships storage and analysis. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "path.hpp"}\par
{\f2 #include "utils.hpp"}\par
{\f2 #include "function.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similarity_table.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__table_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__table_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Similarity_Table}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manages and analyzes function similarity relationships. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similarity relationships storage and analysis. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores and analyzes similarity relationships between code functions, including similarity probabilities and threshold-based filtering.\par
Similarity Table is a abstraction that store the pair of functions that are similar to each other and the similarity probability between them. \par
}{
Definition in file {\b similarity_table.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similarity_table.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/similarity_table.hpp}
{\xe \v arkanjo/base/similarity_table.hpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef SIMILARITY_TABLE_HPP}\par
00014 {\cf21 #define SIMILARITY_TABLE_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 \par
00018 {\cf21 #include "path.hpp"}\par
00019 {\cf21 #include "utils.hpp"}\par
00020 {\cf21 #include "function.hpp"}\par
00021 {\cf17 using namespace }std;\par
00022 \par
00029 {\cf17 class }Similarity_Table \{\par
00030         {\cf17 private}:\par
00031                 {\cf18 string} SIMILARITY_TABLE_FILE_NAME = {\cf22 "tmp/output_parsed.txt"};  \par
00032                 {\cf18 double} DEFAULT_SIMILARITY = 100.00;                         \par
00033                 {\cf18 double} EPS_ERROR_MARGIN = 1e-6;                             \par
00034                 {\cf18 double} MAXIMUM_SIMILARITY = 100.00;                         \par
00035                 {\cf18 double} MINIMUM_SIMILARITY = 0.00;                           \par
00036 \par
00037                 {\cf18 double} similarity_threshold;                                \par
00038                 vector<Path> paths;                                        \par
00039                 map<Path,int> path_id;                                     \par
00040                 vector<vector<pair<int,double>>> similarity_graph;         \par
00041                 map<pair<int,int>,{\cf18 double}> similarity_table;                \par
00042 \par
00048                 {\cf18 int} find_id_path(Path path);\par
00049 \par
00054                 {\cf18 void} read_comparation(ifstream &table_file);\par
00055 \par
00060                 {\cf18 void} read_file_table(ifstream &table_file);\par
00061 \par
00065                 {\cf18 void} init_similarity_table();\par
00066 \par
00072                 {\cf18 bool} is_above_threshold({\cf18 double} similarity);\par
00073 \par
00079                 vector<tuple<int,Path,Path>> sort_pairs_by_line_number(vector<pair<Path,Path>> similar_path_pairs);\par
00080 \par
00081         {\cf17 public}:\par
00086                 Similarity_Table({\cf18 double} _similarity_threshold);\par
00087                 \par
00091                 Similarity_Table();\par
00092                 \par
00097                 {\cf18 void} update_similarity({\cf18 double} new_similarity_threshold);\par
00098 \par
00105                 {\cf18 double} get_similarity(Path path1, Path path2);\par
00106 \par
00113                 {\cf18 double} is_similar(Path path1, Path path2);\par
00114 \par
00119                 vector<Path> get_path_list();\par
00120 \par
00126                 vector<Path> get_similar_path_to_the_reference(Path reference);\par
00127 \par
00132                 vector<tuple<double,Path,Path>> get_all_path_pairs_and_similarity_sorted_by_similarity();\par
00133 \par
00138                 vector<pair<Path,Path>> get_all_similar_path_pairs_sorted_by_similarity();\par
00139 \par
00144                 vector<pair<Path,Path>> get_all_similar_path_pairs_sorted_by_line_number();\par
00145 \};\par
00146 \par
00147 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/utils.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/utils.cpp}
{\xe \v arkanjo/base/utils.cpp}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for utils.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "utils_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utils.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/utils.cpp}
{\xe \v arkanjo/base/utils.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "utils.hpp"}\par
00002 \par
00003 {\cf21 #ifdef _WIN32}\par
00004 {\cf21     #include "windows_utils.hpp"}\par
00005 {\cf21 #elif __linux__}\par
00006 {\cf21     #include "linux_utils.hpp"}\par
00007 {\cf21 #elif __APPLE__}\par
00008 {\cf21     #include "apple_utils.hpp"} \par
00009 {\cf21 #endif}\par
00010 \par
00011 {\cf18 void} Utils::ensure_file_is_open(std::ifstream &file, {\cf18 string} file_name)\{\par
00012     {\cf19 if}(!file.is_open())\{\par
00013         cout << {\cf22 "Attempted to open file: "} << file_name << {\cf22 " "};\par
00014         cout << {\cf22 "but a Error ocurred. Check if the file exist."} << endl;\par
00015         exit(0);\par
00016     \}\par
00017 \}\par
00018 \par
00019 vector<string> Utils::read_file_generic({\cf18 string} string_path)\{\par
00020     std::ifstream filein;\par
00021     {\cf18 string} line;\par
00022     vector<string> ret;\par
00023     filein.open(string_path);\par
00024     ensure_file_is_open(filein,string_path);\par
00025     {\cf19 while}(getline(filein,line))\{\par
00026         ret.push_back(line);\par
00027     \}\par
00028     filein.close();\par
00029     {\cf19 return} ret;\par
00030 \}\par
00031 \par
00032 {\cf18 void} Utils::write_file_generic({\cf18 string} file_path, vector<string> content)\{\par
00033     std::ofstream fileout;\par
00034     create_parents_folder_of_file_path(file_path);\par
00035     fileout.open(file_path);\par
00036 \par
00037     {\cf19 for}({\cf17 auto} line : content)\{\par
00038         fileout << line << {\cf23 '\\n'};\par
00039     \}\par
00040     fileout.close();\par
00041 \}\par
00042 \par
00043 {\cf18 void} Utils::create_parents_folder_of_file_path({\cf18 string} file_path)\{\par
00044     vector<string> parents;\par
00045     {\cf19 for}({\cf18 size_t} i = 0; i < file_path.size(); i++)\{\par
00046         {\cf19 if}(file_path[i] == {\cf23 '/'})\{\par
00047             {\cf18 string} s = {\cf22 ""};\par
00048             {\cf19 for}({\cf18 size_t} j = 0; j < i; j++)\{\par
00049                 s += file_path[j];\par
00050             \}\par
00051             parents.push_back(s);\par
00052         \}\par
00053     \}\par
00054     {\cf19 for}({\cf17 auto} folder : parents)\{\par
00055         {\cf17 const} {\cf18 char} *cfolder = folder.c_str();\par
00056         mkdir(cfolder,MKDIR_FLAG);\par
00057     \}\par
00058 \}\par
00059 \par
00060 Json::Value Utils::read_json({\cf18 string} string_path)\{\par
00061     ifstream json_file(string_path,std::ifstream::binary);\par
00062     ensure_file_is_open(json_file,string_path);\par
00063     Json::Value json;\par
00064     json_file >> json;\par
00065     json_file.close();\par
00066     {\cf19 return} json;\par
00067 \}\par
00068 \par
00069 {\cf18 bool} Utils::does_file_exist({\cf18 string} file_path)\{\par
00070     {\cf19 if} (FILE *file = fopen(file_path.c_str(), {\cf22 "r"})) \{\par
00071         fclose(file);\par
00072         {\cf19 return} {\cf17 true};\par
00073     \} {\cf19 else} \{\par
00074         {\cf19 return} {\cf17 false};\par
00075     \}   \par
00076 \}\par
00077 \par
00078 {\cf18 bool} Utils::is_regular_file({\cf18 string} path)\{\par
00079     {\cf17 struct }stat path_stat;\par
00080     {\cf17 auto} path_c_str = path.c_str();\par
00081     stat(path_c_str,&path_stat);\par
00082     {\cf19 return} S_ISREG(path_stat.st_mode);\par
00083 \}\par
00084 \par
00085 {\cf18 string} Utils::format_colored_message({\cf18 string} message, COLOR color)\{\par
00086     {\cf19 if} (UtilsOSDependable::is_bg_color_dark())\{\par
00087         {\cf19 return} COLOR_TOKENS_UTILS_LIGTH[color] + message + COLOR_TOKENS_UTILS_LIGTH[RESET];\par
00088     \}\par
00089     {\cf19 else}\{\par
00090         {\cf19 return} COLOR_TOKENS_UTILS_DARK[color] + message + COLOR_TOKENS_UTILS_DARK[RESET];\par
00091     \}\par
00092 \}\par
00093 \par
00094 {\cf18 bool} Utils::is_empty_char({\cf18 char} c)\{\par
00095     {\cf19 if}(c == {\cf23 ' '})\{\par
00096         {\cf19 return} {\cf17 true};\par
00097     \}\par
00098     {\cf19 if}(c <= 20)\{\par
00099         {\cf19 return} {\cf17 true};\par
00100     \}\par
00101     {\cf19 return} {\cf17 false};\par
00102 \}\par
00103 \par
00104 {\cf18 bool} Utils::is_special_char({\cf18 char} c)\{\par
00105     {\cf19 if}(c >= {\cf23 'a'} && c <= {\cf23 'z'})\{\par
00106         {\cf19 return} {\cf17 false};\par
00107     \}\par
00108     {\cf19 if}(c >= {\cf23 'A'} && c <= {\cf23 'Z'})\{\par
00109         {\cf19 return} {\cf17 false};\par
00110     \}\par
00111     {\cf19 if}(c >= {\cf23 '0'} && c <= {\cf23 '9'})\{\par
00112         {\cf19 return} {\cf17 false};\par
00113     \}\par
00114     {\cf19 if}(c == {\cf23 '_'})\{\par
00115         {\cf19 return} {\cf17 false};\par
00116     \}\par
00117     {\cf19 return} {\cf17 true};\par
00118 \}\par
00119 \par
00120 vector<string> Utils::split_string({\cf18 string} s, {\cf18 char} delimiter)\{\par
00121     {\cf18 string} cur_token;\par
00122     vector<string> ret;\par
00123     {\cf19 for}({\cf17 auto} c : s)\{\par
00124         {\cf19 if}(c == delimiter)\{\par
00125             {\cf19 if}(!cur_token.empty())\{\par
00126                 ret.push_back(cur_token);\par
00127             \}\par
00128             cur_token = {\cf22 ""};\par
00129         \}{\cf19 else}\{\par
00130             cur_token.push_back(c);\par
00131         \}\par
00132     \}\par
00133     {\cf19 if}(!cur_token.empty())\{\par
00134         ret.push_back(cur_token);\par
00135     \}\par
00136     {\cf19 return} ret;\par
00137 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/utils.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/utils.hpp}
{\xe \v arkanjo/base/utils.hpp}
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines utility functions used across all files. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include <jsoncpp/json/json.h>}\par
{\f2 #include <sys/stat.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for utils.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Utils}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Utils::COLOR} \{ {\b Utils::RESET}
, {\b Utils::RED}
, {\b Utils::GREEN}
, {\b Utils::YELLOW}
, {\b Utils::BLUE}
, {\b Utils::MAGENTA}
, {\b Utils::CYAN}
, {\b Utils::GRAY}
, {\b Utils::WHITE}
, {\b Utils::BRIGHT_YELLOW}
, {\b Utils::BLACK}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of available colors for formatted messages. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Utils::ensure_file_is_open} (std::ifstream &file, string file_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ensures that a file stream is successfully opened. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b Utils::read_file_generic} (string string_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads a file line by line into a vector of strings. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Utils::write_file_generic} (string file_path, vector< string > content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes content to a file at specified path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Utils::create_parents_folder_of_file_path} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates all parent directories for a given file path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json::Value {\b Utils::read_json} (string string_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads and parses a JSON file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Utils::does_file_exist} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a file exists at the given path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Utils::is_regular_file} (string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if a path refers to a regular file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Utils::format_colored_message} (string message, {\b COLOR} color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats a message with ANSI color codes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Utils::is_empty_char} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is considered empty/whitespace. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Utils::is_special_char} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if a character is special (non-alphanumeric and not underscore) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b Utils::split_string} (string s, char delimiter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Splits a string by a delimiter into tokens. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b Utils::LIMITER_PRINT} = "---------------------"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant string used as a visual delimiter/separator in prints. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b Utils::MKDIR_FLAG} = 0700\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permission flags used when creating directories (rwx for owner) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const vector< string > {\b Utils::COLOR_TOKENS_UTILS_LIGTH}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for light terminal backgrounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const vector< string > {\b Utils::COLOR_TOKENS_UTILS_DARK}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for dark terminal backgrounds. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines utility functions used across all files. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This header provides generic utility functions that are not project-specific. Includes file operations, string manipulation, and colored output utilities. \par
}{
Definition in file {\b utils.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
utils.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/utils.hpp}
{\xe \v arkanjo/base/utils.hpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00008 \par
00009 {\cf21 #ifndef UTILS_HPP}\par
00010 {\cf21 #define UTILS_HPP}\par
00011 \par
00012 {\cf21 #pragma once}\par
00013 {\cf21 #include <bits/stdc++.h>} \par
00014 {\cf21 #include <jsoncpp/json/json.h>}\par
00015 {\cf21 #include <sys/stat.h>}\par
00016 \par
00017 {\cf17 using namespace }std;\par
00018 \par
00019 {\cf17 namespace }Utils\{\par
00020 \par
00024         {\cf17 const} {\cf18 string} LIMITER_PRINT = {\cf22 "---------------------"};\par
00025 \par
00029         {\cf17 const} {\cf18 int} MKDIR_FLAG = 0700;\par
00030 \par
00047         {\cf17 const} vector<string> COLOR_TOKENS_UTILS_LIGTH = \{\par
00048             {\cf22 "\\033[0m"},    {\cf20 //RESET}\par
00049             {\cf22 "\\033[31m"},   {\cf20 //RED}\par
00050             {\cf22 "\\033[32m"},   {\cf20 //GREEN}\par
00051             {\cf22 "\\033[33m"},   {\cf20 //YELLOW}\par
00052             {\cf22 "\\033[34m"},   {\cf20 //BLUE}\par
00053             {\cf22 "\\033[35m"},   {\cf20 //MAGENTA}\par
00054             {\cf22 "\\033[36m"},   {\cf20 //CYAN}\par
00055             {\cf22 "\\033[37m"},   {\cf20 //GRAY}\par
00056             {\cf22 "\\033[97m"},   {\cf20 //WHITE}\par
00057             {\cf22 "\\033[33;1m"}, {\cf20 //BRIGHT_YELLOW}\par
00058             {\cf22 "\\033[30m"},   {\cf20 //BLACK}\par
00059         \};\par
00060 \par
00077         {\cf17 const} vector<string> COLOR_TOKENS_UTILS_DARK = \{\par
00078             {\cf22 "\\033[0m"},    {\cf20 // RESET}\par
00079             {\cf22 "\\033[31;2m"}, {\cf20 // DARK_RED}\par
00080             {\cf22 "\\033[32;2m"}, {\cf20 // DARK_GREEN}\par
00081             {\cf22 "\\033[33;2m"}, {\cf20 // DARK_YELLOW}\par
00082             {\cf22 "\\033[34;2m"}, {\cf20 // DARK_BLUE}\par
00083             {\cf22 "\\033[35;2m"}, {\cf20 // DARK_MAGENTA}\par
00084             {\cf22 "\\033[36;2m"}, {\cf20 // DARK_CYAN}\par
00085             {\cf22 "\\033[37;2m"}, {\cf20 // DARK_GRAY}\par
00086             {\cf22 "\\033[30m"},   {\cf20 // BLACK}\par
00087             {\cf22 "\\033[33m"},   {\cf20 // YELLOW}\par
00088             {\cf22 "\\033[97m"}    {\cf20 // WHITE}\par
00089         \};\par
00090         \par
00094         {\cf17 enum} COLOR\{\par
00095             RESET,          \par
00096             RED,            \par
00097             GREEN,          \par
00098             YELLOW,         \par
00099             BLUE,           \par
00100             MAGENTA,        \par
00101             CYAN,           \par
00102             GRAY,           \par
00103             WHITE,          \par
00104             BRIGHT_YELLOW,  \par
00105             BLACK           \par
00106         \};\par
00107 \par
00113         {\cf18 void} ensure_file_is_open(std::ifstream &file, {\cf18 string} file_name);\par
00114         \par
00120         vector<string> read_file_generic({\cf18 string} string_path);\par
00121         \par
00127         {\cf18 void} write_file_generic({\cf18 string} file_path, vector<string> content);\par
00128         \par
00133         {\cf18 void} create_parents_folder_of_file_path({\cf18 string} file_path);\par
00134         \par
00140         Json::Value read_json({\cf18 string} string_path);\par
00141         \par
00147         {\cf18 bool} does_file_exist({\cf18 string} file_path);\par
00148         \par
00154         {\cf18 bool} is_regular_file({\cf18 string} path);\par
00155 \par
00162         {\cf18 string} format_colored_message({\cf18 string} message, COLOR color);\par
00163 \par
00169         {\cf18 bool} is_empty_char({\cf18 char} c);\par
00170         \par
00176         {\cf18 bool} is_special_char({\cf18 char} c);\par
00177 \par
00184         vector<string> split_string({\cf18 string} s, {\cf18 char} delimiter);\par
00185 \};\par
00186 \par
00187 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/windows_utils.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/windows_utils.cpp}
{\xe \v arkanjo/base/windows_utils.cpp}
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "windows_utils.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for windows_utils.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "windows__utils_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
windows_utils.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/windows_utils.cpp}
{\xe \v arkanjo/base/windows_utils.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "windows_utils.hpp"}\par
00002 \par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <string>}\par
00005 \par
00006 {\cf21 #ifdef _WIN32}\par
00007 {\cf21 #include <windows.h>}\par
00008 \par
00009 {\cf21 #ifndef ENABLE_VIRTUAL_TERMINAL_PROCESSING}\par
00010 {\cf21 #define ENABLE_VIRTUAL_TERMINAL_PROCESSING 0x0004}\par
00011 {\cf21 #endif}\par
00012 \par
00013 tuple<int, int, int> UtilsOSDependable::parse_terminal_color_response()\{\par
00014   HANDLE hInput = GetStdHandle(STD_INPUT_HANDLE);\par
00015   HANDLE hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\par
00016 \par
00017   {\cf20 // Save original console mode}\par
00018   DWORD originalOutMode = 0;\par
00019   GetConsoleMode(hOutput, &originalOutMode);\par
00020 \par
00021   {\cf20 // Enable virtual terminal processing}\par
00022   SetConsoleMode(hOutput, originalOutMode | ENABLE_VIRTUAL_TERMINAL_PROCESSING);\par
00023 \par
00024   {\cf20 // Set input to raw mode (disable line input and echo input)}\par
00025   DWORD originalInMode = 0;\par
00026   GetConsoleMode(hInput, &originalInMode);\par
00027   SetConsoleMode(hInput, originalInMode & ~(ENABLE_LINE_INPUT | ENABLE_ECHO_INPUT));\par
00028 \par
00029   {\cf20 // Send OSC 11 query for background color}\par
00030   {\cf17 const} {\cf18 char}* query = {\cf22 "\\x1b]11;?\\x1b\\\\"};\par
00031   DWORD written = 0;\par
00032   WriteConsoleA(hOutput, query, (DWORD)strlen(query), &written, {\cf17 nullptr});\par
00033 \par
00034   {\cf20 // Read raw input}\par
00035   std::string response;\par
00036   {\cf18 char} buffer[256];\par
00037   DWORD read = 0;\par
00038   {\cf19 for} ({\cf18 int} i = 0; i < 20; ++i) \{\par
00039       {\cf19 if} (ReadFile(hInput, buffer, {\cf17 sizeof}(buffer), &read, {\cf17 nullptr}) && read > 0) \{\par
00040           response.append(buffer, read);\par
00041           {\cf19 if} (response.find({\cf22 '\\x1b'}) != std::string::npos && response.find({\cf22 "rgb:"}) != std::string::npos) \{\par
00042               {\cf19 break};\par
00043           \}\par
00044       \}\par
00045       Sleep(50);\par
00046   \}\par
00047 \par
00048   {\cf20 // Restore original modes}\par
00049   SetConsoleMode(hInput, originalInMode);\par
00050   SetConsoleMode(hOutput, originalOutMode);\par
00051 \par
00052   {\cf20 // Parse RGB from response}\par
00053   {\cf18 size_t} start = response.find({\cf22 "rgb:"});\par
00054   {\cf19 if} (start == std::string::npos) {\cf19 return} {\cf17 false};\par
00055   start += 4;\par
00056 \par
00057   {\cf18 size_t} end = response.find({\cf22 "/"}, start);\par
00058   {\cf19 if} (end == std::string::npos) {\cf19 return} {\cf17 false};\par
00059   std::string rStr = response.substr(start, end - start);\par
00060 \par
00061   start = end + 1;\par
00062   end = response.find({\cf22 "/"}, start);\par
00063   {\cf19 if} (end == std::string::npos) {\cf19 return} {\cf17 false};\par
00064   std::string gStr = response.substr(start, end - start);\par
00065 \par
00066   start = end + 1;\par
00067   end = response.find({\cf22 "\\x1b"}, start);\par
00068   {\cf19 if} (end == std::string::npos) {\cf19 return} {\cf17 false};\par
00069   std::string bStr = response.substr(start, end - start);\par
00070 \par
00071   {\cf19 try} \{\par
00072       r = std::stoi(rStr, {\cf17 nullptr}, 16) / 256;\par
00073       g = std::stoi(gStr, {\cf17 nullptr}, 16) / 256;\par
00074       b = std::stoi(bStr, {\cf17 nullptr}, 16) / 256;\par
00075       {\cf19 return} \{r, g, b\};\par
00076   \} {\cf19 catch} (...) \{\par
00077       {\cf19 return} \{0, 0, 0\};\par
00078   \}\par
00079 \}\par
00080 \par
00081 {\cf18 float} UtilsOSDependable::get_terminal_bg_color_luminance()\{\par
00082   {\cf17 auto} [r, g, b] = parse_terminal_color_response();\par
00083   {\cf19 return} 0.2126 * (r/255) + 0.7152 * (g/255) + 0.0722 * (b/255);\par
00084 \}\par
00085 \par
00086 {\cf18 bool} UtilsOSDependable::is_bg_color_dark()\{\par
00087   {\cf19 return} get_terminal_bg_color_luminance() <= 0.5;\par
00088 \}\par
00089 \par
00090 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/windows_utils.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/windows_utils.hpp}
{\xe \v arkanjo/base/windows_utils.hpp}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows-specific utility functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <sstream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for windows_utils.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "windows__utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "windows__utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b UtilsOSDependable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b UtilsOSDependable::get_terminal_bg_color_luminance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the luminance of terminal background color. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< int, int, int > {\b UtilsOSDependable::parse_terminal_color_response} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses terminal color response into RGB components on Windows. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UtilsOSDependable::is_bg_color_dark} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines if terminal background color is dark. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Windows-specific utility functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides OS-dependent implementations for Windows systems, including terminal color detection utilities. \par
}{
Definition in file {\b windows_utils.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
windows_utils.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/windows_utils.hpp}
{\xe \v arkanjo/base/windows_utils.hpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00008 \par
00009 {\cf21 #ifndef WINDOWS_UTILS_HPP}\par
00010 {\cf21 #define WINDOWS_UTILS_HPP}\par
00011 \par
00012 {\cf21 #pragma once}\par
00013 {\cf21 #include <string>}\par
00014 {\cf21 #include <sstream>}\par
00015 \par
00016 {\cf17 using namespace }std;\par
00017 \par
00018 {\cf17 namespace }UtilsOSDependable\{\par
00027         {\cf18 float} get_terminal_bg_color_luminance();\par
00028         \par
00037         tuple<int, int, int> parse_terminal_color_response();\par
00038         \par
00047         {\cf18 bool} is_bg_color_dark();\par
00048 \};\par
00049 \par
00050 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/big_clone/big_clone_formater.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_formater.cpp}
{\xe \v arkanjo/big_clone/big_clone_formater.cpp}
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "big_clone_formater.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big_clone_formater.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__formater_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big_clone_formater.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_formater.cpp}
{\xe \v arkanjo/big_clone/big_clone_formater.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "big_clone_formater.hpp"}\par
00002 \par
00003 {\cf18 string} Big_Clone_Formater::format_relative_path({\cf18 string} relative_path)\{\par
00004     {\cf19 for}({\cf17 auto} &c : relative_path)\{\par
00005         {\cf19 if}(c == {\cf23 '/'})\{\par
00006             c = {\cf23 ','};\par
00007         \}\par
00008     \}\par
00009     {\cf19 return} relative_path;       \par
00010 \}\par
00011 \par
00012 {\cf18 string} Big_Clone_Formater::build_path_formated_string(Path path)\{\par
00013     {\cf18 string} relative_path = path.build_relative_path();\par
00014     relative_path = format_relative_path(relative_path);\par
00015 \par
00016     Function function(path);\par
00017     {\cf17 auto} [line_declaration,start_line,end_line] = function.get_scope_function_in_file();\par
00018 \par
00019     {\cf18 string} ret;\par
00020     ret += relative_path;\par
00021     ret += {\cf23 ','} + to_string(line_declaration);\par
00022     ret += {\cf23 ','} + to_string(start_line);\par
00023     ret += {\cf23 ','} + to_string(end_line);\par
00024 \par
00025     {\cf19 return} ret;\par
00026 \}\par
00027 {\cf17 auto} Big_Clone_Formater::process_similar_path_pair(Path path1, Path path2, {\cf18 double} similarity)\{\par
00028     {\cf17 auto} string_path1 = build_path_formated_string(path1);\par
00029     {\cf17 auto} string_path2 = build_path_formated_string(path2);\par
00030 \par
00031     {\cf18 string} comparation_string = string_path1 + {\cf23 ','} + string_path2 + {\cf23 ','};\par
00032     cout << comparation_string;\par
00033     cout << fixed << setprecision(2) << similarity << {\cf23 '\\n'};\par
00034 \}\par
00035 \par
00036 Big_Clone_Formater::Big_Clone_Formater(Similarity_Table *similarity_table)\{\par
00037     {\cf17 auto} similar_paths = similarity_table->get_all_path_pairs_and_similarity_sorted_by_similarity();\par
00038     {\cf19 for}({\cf17 auto} [similarity,path1,path2] : similar_paths)\{\par
00039         process_similar_path_pair(path1,path2,similarity);\par
00040     \}\par
00041 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/big_clone/big_clone_formater.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_formater.hpp}
{\xe \v arkanjo/big_clone/big_clone_formater.hpp}
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneEval format conversion interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/function.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big_clone_formater.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__formater_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__formater_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Big_Clone_Formater}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Formats clone detection results for BigCloneBench evaluation. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneEval format conversion interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides functionality to format clone detection results into the BigCloneBench dataset compatible output format for evaluation. This files is related to the first try to evaluate the tool in big clone bench dataset the class does not work properly in the moment and should be ignored. \par
}{
Definition in file {\b big_clone_formater.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big_clone_formater.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_formater.hpp}
{\xe \v arkanjo/big_clone/big_clone_formater.hpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 \par
00011 {\cf21 #ifndef BIG_CLONE_FORMATER_HPP}\par
00012 {\cf21 #define BIG_CLONE_FORMATER_HPP}\par
00013 \par
00014 {\cf21 #include <bits/stdc++.h>} \par
00015 \par
00016 {\cf21 #include "../base/path.hpp"}\par
00017 {\cf21 #include "../base/function.hpp"}\par
00018 {\cf21 #include "../base/similarity_table.hpp"}\par
00019 \par
00020 {\cf17 using namespace }std;\par
00021 \par
00031 {\cf17 class }Big_Clone_Formater \{\par
00032         {\cf17 private}:\par
00038                 {\cf18 string} format_relative_path({\cf18 string} relative_path);\par
00039 \par
00045                 {\cf18 string} build_path_formated_string(Path path);\par
00046 \par
00053                 {\cf17 auto} process_similar_path_pair(Path path1, Path path2, {\cf18 double} similarity);\par
00054 \par
00055         {\cf17 public}:\par
00062                 Big_Clone_Formater(Similarity_Table *similarity_table);\par
00063 \};\par
00064 \par
00065 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/big_clone/big_clone_tailor_evaluator.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_tailor_evaluator.cpp}
{\xe \v arkanjo/big_clone/big_clone_tailor_evaluator.cpp}
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "big_clone_tailor_evaluator.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big_clone_tailor_evaluator.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__tailor__evaluator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big_clone_tailor_evaluator.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_tailor_evaluator.cpp}
{\xe \v arkanjo/big_clone/big_clone_tailor_evaluator.cpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "big_clone_tailor_evaluator.hpp"}\par
00002 \par
00003 {\cf18 void} Big_Clone_Tailor_Evaluator::read_clone_labels()\{\par
00004     count_of_samples_by_type = vector<int>(NUMBER_OF_TYPES);\par
00005     vector<string> content = Utils::read_file_generic(CLONE_LABELS_FILE_PATH);\par
00006     {\cf19 for}({\cf17 auto} line : content)\{\par
00007         vector<string> tokens = Utils::split_string(line,{\cf23 ','});\par
00008         {\cf19 if}({\cf18 int}(tokens.size()) < 4)\{\par
00009             {\cf19 continue};\par
00010         \}\par
00011         {\cf18 int} id0 = stoi(tokens[0]);\par
00012         {\cf18 int} id1 = stoi(tokens[1]);\par
00013         {\cf18 int} type = stoi(tokens[3]);\par
00014         {\cf19 if}(id0 > id1)\{\par
00015             swap(id0,id1);\par
00016         \}\par
00017         pair<int,int> aux = \{id0,id1\};\par
00018         id_pair_to_type[aux] = type;\par
00019         count_of_samples_by_type[type] += 1;\par
00020     \}\par
00021 \}\par
00022 \par
00023 {\cf18 int} Big_Clone_Tailor_Evaluator::path_to_id(Path path)\{\par
00024     {\cf18 string} relative_path = path.build_relative_path();\par
00025     vector<string> tokens = Utils::split_string(relative_path,{\cf23 '/'});\par
00026     {\cf18 string} file_name = tokens.back();\par
00027     {\cf19 for}({\cf18 int} i = 0; i < int(EXTENSION.size()); i++)\{\par
00028         file_name.pop_back();\par
00029     \}\par
00030     {\cf19 return} stoi(file_name);\par
00031 \}\par
00032 \par
00033 vector<tuple<double,int,int>> Big_Clone_Tailor_Evaluator::similar_path_pairs_formated_with_id()\{\par
00034     {\cf17 auto} similar_path_pairs = similarity_table->get_all_path_pairs_and_similarity_sorted_by_similarity();\par
00035     vector<tuple<double,int,int>> ret;\par
00036     {\cf19 for}({\cf17 auto} [similarity,path0,path1] : similar_path_pairs)\{\par
00037         {\cf18 int} id0 = path_to_id(path0);\par
00038         {\cf18 int} id1 = path_to_id(path1);\par
00039         {\cf19 if}(id0 > id1)\{\par
00040             swap(id0,id1);\par
00041         \}\par
00042         ret.push_back(\{similarity,id0,id1\});\par
00043     \}\par
00044     {\cf19 return} ret;\par
00045 \}\par
00046 \par
00047 {\cf18 bool} Big_Clone_Tailor_Evaluator::is_relevant_pair({\cf18 int} id0, {\cf18 int} id1)\{\par
00048     pair<int,int> ids = \{id0,id1\};\par
00049     {\cf19 return} id_pair_to_type.find(ids) != id_pair_to_type.end();\par
00050 \}\par
00051 \par
00052 set<pair<int,int>> Big_Clone_Tailor_Evaluator::filter_similar_id_pairs_only_relevant_ones(\par
00053         vector<pair<int,int>> similar_id_pairs)\{\par
00054     set<pair<int,int>> ret;\par
00055     {\cf19 for}({\cf17 auto} [id0,id1] : similar_id_pairs)\{\par
00056         {\cf19 if}(is_relevant_pair(id0,id1))\{\par
00057             ret.insert(\{id0,id1\});\par
00058         \}\par
00059     \}\par
00060     {\cf19 return} ret;\par
00061 \}\par
00062 \par
00063 vector<pair<int,int>> Big_Clone_Tailor_Evaluator::filter_similar_path_pairs_by_similarity(\par
00064         vector<tuple<double,int,int>> similar_id_pairs,\par
00065         {\cf18 double} minimum_similarity)\{\par
00066     vector<pair<int,int>> ret;\par
00067     {\cf19 for}({\cf17 auto} [similarity,id0,id1] : similar_id_pairs)\{\par
00068         {\cf19 if}(similarity >= minimum_similarity)\{\par
00069             ret.push_back(\{id0,id1\});\par
00070         \}\par
00071     \}\par
00072     {\cf19 return} ret;\par
00073 \}\par
00074 \par
00075 vector<int> Big_Clone_Tailor_Evaluator::build_frequency_corrected_guessed_by_type(\par
00076         vector<pair<int,int>> similar_id_pairs)\{\par
00077     set<pair<int,int>> similar_id_pairs_set = filter_similar_id_pairs_only_relevant_ones(similar_id_pairs);\par
00078     vector<int> frequency(NUMBER_OF_TYPES);\par
00079     {\cf19 for}({\cf17 auto} ids : similar_id_pairs_set)\{\par
00080         frequency[id_pair_to_type[ids]] += 1;\par
00081     \}\par
00082     {\cf20 //for not clone if it is marked as duplicate count is wrong instead of right}\par
00083     frequency[NOT_CLONE_TYPE_ID] *= -1;\par
00084     frequency[NOT_CLONE_TYPE_ID] += count_of_samples_by_type[NOT_CLONE_TYPE_ID];\par
00085     {\cf19 return} frequency;\par
00086 \}\par
00087 \par
00088 {\cf18 double} Big_Clone_Tailor_Evaluator::calc_recall(vector<int> frequency, {\cf18 int} type)\{\par
00089     {\cf18 double} TP = frequency[type];\par
00090     {\cf18 double} FN = count_of_samples_by_type[type] - frequency[type];\par
00091     {\cf18 double} recall = TP/(TP+FN);\par
00092     {\cf19 return} recall;\par
00093 \}\par
00094 \par
00095 {\cf18 void} Big_Clone_Tailor_Evaluator::print_recall_per_type(vector<int> frequency)\{\par
00096     cout << RECALL_PER_TYPE_PRINT << {\cf23 '\\n'};\par
00097     {\cf19 for}({\cf18 int} type = 0; type < NUMBER_OF_TYPES; type++)\{\par
00098         {\cf18 double} recall = calc_recall(frequency,type);\par
00099         cout << ID_TO_TYPE_LABEL[type] << {\cf23 ' '};\par
00100         cout << fixed << setprecision(2) << recall << {\cf23 '\\n'};\par
00101     \}\par
00102 \}\par
00103 \par
00104 {\cf18 void} Big_Clone_Tailor_Evaluator::evaluate({\cf18 double} minimum_similarity)\{\par
00105     vector<tuple<double,int,int>> similar_id_pairs_similarity =  similar_path_pairs_formated_with_id();\par
00106     vector<pair<int,int>> similar_id_pairs = filter_similar_path_pairs_by_similarity(\par
00107             similar_id_pairs_similarity,\par
00108             minimum_similarity);\par
00109     vector<int> frequency = build_frequency_corrected_guessed_by_type(similar_id_pairs);\par
00110     print_recall_per_type(frequency);\par
00111 \}\par
00112 \par
00113 Big_Clone_Tailor_Evaluator::Big_Clone_Tailor_Evaluator(Similarity_Table *_similarity_table)\{\par
00114     similarity_table = _similarity_table;\par
00115     read_clone_labels();\par
00116     evaluate(MINIMUM_SIMILARITY_TEMP);\par
00117 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/big_clone/big_clone_tailor_evaluator.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_tailor_evaluator.hpp}
{\xe \v arkanjo/big_clone/big_clone_tailor_evaluator.hpp}
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneBench evaluation interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big_clone_tailor_evaluator.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__tailor__evaluator_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "big__clone__tailor__evaluator_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Big_Clone_Tailor_Evaluator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Evaluates clone detection using BigCloneBench methodology. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BigCloneBench evaluation interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides evaluation metrics compatible with BigCloneBench dataset using methodology similar to the Tailor tool for clone detection.\par
This class is used to evaluate the tool by the big clone bench dataset using the same methodology as the Tailor tool. \par
}{
Definition in file {\b big_clone_tailor_evaluator.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big_clone_tailor_evaluator.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/big_clone/big_clone_tailor_evaluator.hpp}
{\xe \v arkanjo/big_clone/big_clone_tailor_evaluator.hpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 \par
00012 {\cf21 #ifndef BIG_CLONE_TAILOR_EVALUATOR_HPP}\par
00013 {\cf21 #define BIG_CLONE_TAILOR_EVALUATOR_HPP}\par
00014 \par
00015 {\cf21 #include <bits/stdc++.h>} \par
00016 \par
00017 {\cf21 #include "../base/path.hpp"}\par
00018 {\cf21 #include "../base/utils.hpp"}\par
00019 {\cf21 #include "../base/similarity_table.hpp"}\par
00020 \par
00021 {\cf17 using namespace }std;\par
00022 \par
00029 {\cf17 class }Big_Clone_Tailor_Evaluator \{\par
00030         {\cf17 private}:\par
00031                 {\cf18 string} CLONE_LABELS_FILE_PATH = {\cf22 "/home/luan/linux/test-duplication-code/parser/bigclonebench/clone_labels.txt"};  \par
00032                 {\cf18 string} EXTENSION = {\cf22 ".java"};                          \par
00033                 {\cf18 int} NUMBER_OF_TYPES = 6;                             \par
00034                 {\cf18 int} NOT_CLONE_TYPE_ID = 5;                           \par
00035                 {\cf18 string} RECALL_PER_TYPE_PRINT = {\cf22 "Recall Value of each type"};  \par
00036                 {\cf18 double} MINIMUM_SIMILARITY_TEMP = 0;                  \par
00037                 \par
00039                 vector<string> ID_TO_TYPE_LABEL = \{\par
00040                     {\cf22 "T1"},\par
00041                     {\cf22 "T2"},\par
00042                     {\cf22 "ST3"},\par
00043                     {\cf22 "MT3"},\par
00044                     {\cf22 "WT3/T4"},\par
00045                     {\cf22 "Negative"},\par
00046                 \};\par
00047 \par
00048                 Similarity_Table *similarity_table;                  \par
00049                 map<pair<int,int>,{\cf18 int}> id_pair_to_type;              \par
00050                 vector<int> count_of_samples_by_type;                \par
00051 \par
00055                 {\cf18 void} read_clone_labels();\par
00056 \par
00062                 {\cf18 int} path_to_id(Path path);\par
00063 \par
00068                 vector<tuple<double,int,int>> similar_path_pairs_formated_with_id();\par
00069 \par
00076                 {\cf18 bool} is_relevant_pair({\cf18 int} id0, {\cf18 int} id1);\par
00077 \par
00083                 set<pair<int,int>> filter_similar_id_pairs_only_relevant_ones(\par
00084                         vector<pair<int,int>> similar_id_pairs);\par
00085 \par
00092                 vector<pair<int,int>> filter_similar_path_pairs_by_similarity(\par
00093                         vector<tuple<double,int,int>> similar_id_pairs,\par
00094                         {\cf18 double} minimum_similarity);\par
00095 \par
00101                 vector<int> build_frequency_corrected_guessed_by_type(\par
00102                         vector<pair<int,int>> similar_id_pairs);\par
00103 \par
00110                 {\cf18 double} calc_recall(vector<int> frequency, {\cf18 int} type);\par
00111 \par
00116                 {\cf18 void} print_recall_per_type(vector<int> frequency);\par
00117 \par
00122                 {\cf18 void} evaluate({\cf18 double} minimum_similarity);\par
00123 \par
00124         {\cf17 public}:\par
00129                 Big_Clone_Tailor_Evaluator(Similarity_Table *_similarity_table);\par
00130 \};\par
00131 \par
00132 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/counter/counter_duplication_code.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code.cpp}
{\xe \v arkanjo/counter/counter_duplication_code.cpp}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "counter_duplication_code.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for counter_duplication_code.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
counter_duplication_code.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code.cpp}
{\xe \v arkanjo/counter/counter_duplication_code.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "counter_duplication_code.hpp"}\par
00002 \par
00003 {\cf18 void} Counter_Duplication_Code::mark_path_as_processed(Path path)\{\par
00004     processed_paths.insert(path);\par
00005 \}\par
00006 \par
00007 {\cf18 bool} Counter_Duplication_Code::is_path_processed_path(Path path)\{\par
00008     {\cf19 return} processed_paths.find(path) != processed_paths.end();\par
00009 \}\par
00010 \par
00011 {\cf18 int} Counter_Duplication_Code::get_number_of_lines_in_path(Path path)\{\par
00012     Function function(path);\par
00013     {\cf19 return} function.number_of_lines();\par
00014 \}\par
00015 \par
00016 {\cf18 void} Counter_Duplication_Code::register_code_duplication(Path path1, Path path2, {\cf18 int} number_of_lines)\{\par
00017     vector<string> common_folder_path = path1.get_common_folders(path2);\par
00018     counter_duplication_code_trie.add_folder_duplication_code(common_folder_path, number_of_lines);\par
00019 \}\par
00020 \par
00021 {\cf18 void} Counter_Duplication_Code::process_path(Path path)\{\par
00022     {\cf19 if}(is_path_processed_path(path))\{\par
00023         {\cf19 return};\par
00024     \}\par
00025     {\cf18 int} number_of_lines = get_number_of_lines_in_path(path);\par
00026     mark_path_as_processed(path);\par
00027     vector<Path> similar_paths = similarity_table->get_similar_path_to_the_reference(path);\par
00028     {\cf19 for}({\cf17 auto} similar_path : similar_paths)\{\par
00029         mark_path_as_processed(similar_path);\par
00030         register_code_duplication(path, similar_path, number_of_lines);\par
00031     \}\par
00032 \}\par
00033 \par
00034 {\cf18 void} Counter_Duplication_Code::process_every_path_in_similarity_table()\{\par
00035     vector<Path> paths = similarity_table->get_path_list();\par
00036     {\cf19 for}({\cf17 auto} path : paths)\{\par
00037         process_path(path);\par
00038     \}\par
00039 \}\par
00040 \par
00041 Counter_Duplication_Code::Counter_Duplication_Code(Similarity_Table *_similarity_table)\{\par
00042     similarity_table = _similarity_table;\par
00043     process_every_path_in_similarity_table();\par
00044     counter_duplication_code_trie.print_duplication_code_trie();\par
00045 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/counter/counter_duplication_code.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code.hpp}
{\xe \v arkanjo/counter/counter_duplication_code.hpp}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication reporting system. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/function.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
{\f2 #include "counter_duplication_code_trie.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for counter_duplication_code.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Counter_Duplication_Code}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication analyzer and reporter. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication reporting system. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functionality to count and report duplicated lines across folders in the codebase, providing hierarchical insights. Counter Duplication Code implements the relatory/counter functionality, where the user can see the number of duplicated lines per folder in the codebase \par
}{
Definition in file {\b counter_duplication_code.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
counter_duplication_code.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code.hpp}
{\xe \v arkanjo/counter/counter_duplication_code.hpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef COUNTER_DUPLICATION_CODE_HPP}\par
00014 {\cf21 #define COUNTER_DUPLICATION_CODE_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 {\cf21 #include "../base/path.hpp"}\par
00018 {\cf21 #include "../base/function.hpp"}\par
00019 {\cf21 #include "../base/similarity_table.hpp"}\par
00020 {\cf21 #include "counter_duplication_code_trie.hpp"}\par
00021 {\cf17 using namespace }std;\par
00022 \par
00030 {\cf17 class }Counter_Duplication_Code \{\par
00031         {\cf17 private}:\par
00032                 set<Path> processed_paths;                      \par
00033                 Counter_Duplication_Code_Trie counter_duplication_code_trie;  \par
00034                 Similarity_Table *similarity_table;             \par
00035 \par
00040                 {\cf18 void} mark_path_as_processed(Path path);\par
00041 \par
00047                 {\cf18 bool} is_path_processed_path(Path path);\par
00048 \par
00054                 {\cf18 int} get_number_of_lines_in_path(Path path);\par
00055 \par
00062                 {\cf18 void} register_code_duplication(Path path1, Path path2, {\cf18 int} number_of_lines);\par
00063 \par
00068                 {\cf18 void} process_path(Path path);\par
00069 \par
00073                 {\cf18 void} process_every_path_in_similarity_table();\par
00074 \par
00075         {\cf17 public}:\par
00080                 Counter_Duplication_Code(Similarity_Table *_similarity_table);\par
00081 \};\par
00082 \par
00083 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/counter/counter_duplication_code_trie.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code_trie.cpp}
{\xe \v arkanjo/counter/counter_duplication_code_trie.cpp}
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "counter_duplication_code_trie.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for counter_duplication_code_trie.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code__trie_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
counter_duplication_code_trie.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code_trie.cpp}
{\xe \v arkanjo/counter/counter_duplication_code_trie.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20 This is a Trie with a element being a folder to enable count of duplication code in the scope of files.}\par
00003 {\cf20 It is not simple to understand if you do not know the structure. Please refer to https://en.wikipedia.org/wiki/Trie .}\par
00004 {\cf20 */}\par
00005 {\cf21 #include "counter_duplication_code_trie.hpp"}\par
00006 \par
00007 Utils::COLOR Counter_Duplication_Code_Trie::choose_text_color()\{\par
00008     number_printed_lines++;\par
00009     Utils::COLOR ret = Utils::BLACK;\par
00010     {\cf19 if}(number_printed_lines%2 == 0)\{\par
00011         ret = Utils::BLUE;\par
00012     \}\par
00013     {\cf19 return} ret;\par
00014 \}\par
00015 \par
00016 {\cf18 int} Counter_Duplication_Code_Trie::create_node_at_the_end()\{\par
00017     {\cf18 int} {\cf18 id} = trie.size();\par
00018     map<string,int> aux;\par
00019     trie.push_back(aux);\par
00020     counter_duplication_lines.push_back(ZERO_INITIAL_COUNTER);\par
00021     {\cf19 return} id;\par
00022 \}\par
00023 \par
00024 {\cf18 void} Counter_Duplication_Code_Trie::create_edge_if_not_exist({\cf18 int} node, {\cf18 string} folder)\{\par
00025     {\cf19 if}(trie[node].find(folder) == trie[node].end())\{\par
00026         trie[node][folder] = create_node_at_the_end();\par
00027     \}\par
00028 \}\par
00029 \par
00030 {\cf18 string} Counter_Duplication_Code_Trie::create_context_string_on_depth({\cf18 int} depth)\{\par
00031     {\cf18 string} ret = {\cf22 ""};\par
00032     {\cf19 for}({\cf18 int} i = 0; i < depth; i++)\{\par
00033         ret += BASIC_SHIFT_PER_DEPTH;\par
00034     \}\par
00035     ret += END_ARROW;\par
00036     {\cf19 return} ret;\par
00037 \}\par
00038 \par
00039 \par
00040 {\cf18 void} Counter_Duplication_Code_Trie::print_node_information({\cf18 int} node, {\cf18 int} depth, {\cf18 string} folder)\{\par
00041     {\cf18 string} line = create_context_string_on_depth(depth) + folder + TWO_POINTER_AFTER_FOLDER;\par
00042     line += to_string(counter_duplication_lines[node]) + LINE_TEXT;\par
00043     Utils::COLOR color = choose_text_color();\par
00044     cout << Utils::format_colored_message(line,color) << {\cf23 '\\n'};\par
00045 \}\par
00046 \par
00047 {\cf18 void} Counter_Duplication_Code_Trie::dfs_print_duplication_code_trie({\cf18 int} current_node, {\cf18 int} depth, {\cf18 string} folder)\{\par
00048     print_node_information(current_node,depth,folder);\par
00049     {\cf19 for}({\cf17 auto} [child_folder,child_node] : trie[current_node])\{\par
00050         {\cf18 int} child_depth = depth+1;\par
00051         dfs_print_duplication_code_trie(child_node,child_depth,child_folder);\par
00052     \}\par
00053 \}\par
00054 \par
00055 {\cf18 void} Counter_Duplication_Code_Trie::add_folder_duplication_code(vector<string> folder_path, {\cf18 int} number_of_duplication_lines)\{\par
00056     {\cf18 int} current_node = ROOT_NODE;\par
00057     counter_duplication_lines[current_node] += number_of_duplication_lines;\par
00058     {\cf19 for}({\cf17 auto} folder : folder_path)\{\par
00059         create_edge_if_not_exist(current_node,folder);\par
00060         current_node = trie[current_node][folder];\par
00061         counter_duplication_lines[current_node] += number_of_duplication_lines;\par
00062     \}\par
00063 \}\par
00064 \par
00065 {\cf18 void} Counter_Duplication_Code_Trie::print_duplication_code_trie()\{\par
00066     dfs_print_duplication_code_trie(ROOT_NODE,BASE_DEPTH,EMPTY_FOLDER);\par
00067 \}\par
00068 \par
00069 Counter_Duplication_Code_Trie::Counter_Duplication_Code_Trie()\{\par
00070     create_node_at_the_end();\par
00071 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/counter/counter_duplication_code_trie.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code_trie.hpp}
{\xe \v arkanjo/counter/counter_duplication_code_trie.hpp}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie-based code duplication counter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for counter_duplication_code_trie.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code__trie_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "counter__duplication__code__trie_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Counter_Duplication_Code_Trie}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie structure for hierarchical duplication counting. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trie-based code duplication counter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a trie structure where nodes represent folders to enable hierarchical counting of duplicated lines across the codebase. Implements a TRIE where the nodes are folders, this enable the project to count the number of duplicated lines per folde in the codebase. \par
}{
Definition in file {\b counter_duplication_code_trie.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
counter_duplication_code_trie.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/counter/counter_duplication_code_trie.hpp}
{\xe \v arkanjo/counter/counter_duplication_code_trie.hpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef COUNTER_DUPLICATION_CODE_TRIE_HPP}\par
00014 {\cf21 #define COUNTER_DUPLICATION_CODE_TRIE_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 {\cf21 #include "../base/utils.hpp"}\par
00018 {\cf17 using namespace }std;\par
00019 \par
00030 {\cf17 class }Counter_Duplication_Code_Trie \{\par
00031         {\cf17 private}:\par
00032                 {\cf18 int} ZERO_INITIAL_COUNTER = 0;                \par
00033                 {\cf18 int} ROOT_NODE = 0;                           \par
00034                 {\cf18 int} BASE_DEPTH = 0;                          \par
00035                 {\cf18 string} EMPTY_FOLDER = {\cf22 ""};                    \par
00036                 {\cf18 string} BASIC_SHIFT_PER_DEPTH = {\cf22 "----"};       \par
00037                 {\cf18 string} END_ARROW = {\cf22 "--> "};                   \par
00038                 {\cf18 string} TWO_POINTER_AFTER_FOLDER = {\cf22 "/: "};     \par
00039                 {\cf18 string} LINE_TEXT = {\cf22 " duplicated lines detected."}; \par
00040 \par
00041                 vector<map<string,int>> trie;                \par
00042                 vector<int> counter_duplication_lines;       \par
00043                 {\cf18 int} number_printed_lines = 0;                \par
00044 \par
00049                 Utils::COLOR choose_text_color();\par
00050 \par
00055                 {\cf18 int} create_node_at_the_end();\par
00056 \par
00062                 {\cf18 void} create_edge_if_not_exist({\cf18 int} node, {\cf18 string} folder);\par
00063 \par
00069                 {\cf18 string} create_context_string_on_depth({\cf18 int} depth);\par
00070 \par
00077                 {\cf18 void} print_node_information({\cf18 int} node, {\cf18 int} depth, {\cf18 string} folder);\par
00078 \par
00085                 {\cf18 void} dfs_print_duplication_code_trie({\cf18 int} current_node, {\cf18 int} depth, {\cf18 string} folder);\par
00086 \par
00087         {\cf17 public}:\par
00093                 {\cf18 void} add_folder_duplication_code(vector<string> folder_path, {\cf18 int} number_of_duplication_lines);\par
00094 \par
00098                 {\cf18 void} print_duplication_code_trie();\par
00099 \par
00103                 Counter_Duplication_Code_Trie();\par
00104 \};\par
00105 \par
00106 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/explorer/similarity_explorer.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/explorer/similarity_explorer.cpp}
{\xe \v arkanjo/explorer/similarity_explorer.cpp}
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "similarity_explorer.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similarity_explorer.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__explorer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similarity_explorer.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/explorer/similarity_explorer.cpp}
{\xe \v arkanjo/explorer/similarity_explorer.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20 This file expect the output of parser.cpp}\par
00003 {\cf20 This code filter the output only printing the files similar to files that contains a given pattern passed as argc}\par
00004 {\cf20 The code filter every file that has the pattern as a substring, so be carefull with duplications}\par
00005 {\cf20 */}\par
00006 \par
00007 {\cf21 #include <bits/stdc++.h>} \par
00008 \par
00009 {\cf21 #include "similarity_explorer.hpp"}\par
00010 \par
00011 Utils::COLOR Similarity_Explorer::choose_text_color()\{\par
00012     Utils::COLOR ret = Utils::GRAY;\par
00013     {\cf19 if}(processed_results%2 == 0)\{\par
00014         ret = Utils::CYAN;\par
00015     \}\par
00016     {\cf19 return} ret;\par
00017 \}\par
00018 \par
00019 {\cf18 int} Similarity_Explorer::find_number_pairs_show({\cf18 int} number_pair_found)\{\par
00020     {\cf19 if}(limit_on_results == UNLIMITED_RESULTS)\{\par
00021         {\cf19 return} number_pair_found;\par
00022     \}\par
00023     {\cf19 return} min(limit_on_results,number_pair_found);\par
00024 \}\par
00025 \par
00026 {\cf18 string} Similarity_Explorer::format_initial_message({\cf18 int} number_pair_found)\{\par
00027     {\cf18 string} ret;\par
00028     ret += INITIAL_TEXT_PRINT_1;\par
00029     ret += to_string(number_pair_found);\par
00030     ret += INITIAL_TEXT_PRINT_2;\par
00031     ret += to_string(find_number_pairs_show(number_pair_found));\par
00032     ret += INITIAL_TEXT_PRINT_3;\par
00033     {\cf19 return} ret;\par
00034 \}\par
00035 \par
00036 {\cf18 bool} Similarity_Explorer::match_pattern(Path path1, Path path2)\{\par
00037     {\cf18 bool} match1 = path1.contains_given_pattern(pattern_to_match);\par
00038     {\cf18 bool} match2 = path2.contains_given_pattern(pattern_to_match);\par
00039 \par
00040     {\cf19 if}(both_path_need_to_match_pattern)\{\par
00041         {\cf19 return} match1 && match2;\par
00042     \}\par
00043     {\cf19 return} match1 || match2;\par
00044 \}\par
00045 \par
00046 {\cf18 string} Similarity_Explorer::format_path_message_in_pair(Path path)\{\par
00047     {\cf18 string} ret = path.build_relative_path() + BETWEEN_RELATIVE_AND_FUNCTION_NAME + path.build_function_name();\par
00048     {\cf19 return} ret;\par
00049 \}\par
00050 \par
00051 {\cf18 int} Similarity_Explorer::find_number_lines(Path path1)\{\par
00052     Function function(path1);\par
00053     {\cf19 return} function.number_of_lines();\par
00054 \}\par
00055 \par
00056 {\cf18 void} Similarity_Explorer::print_similar_path_pair(Path path1, Path path2)\{\par
00057     {\cf18 string} line;\par
00058     line += START_LINE_COMPARATION_PRINT;\par
00059     line += format_path_message_in_pair(path1);\par
00060     line += BETWEEN_TWO_FUNCTION;\par
00061     line += format_path_message_in_pair(path2);\par
00062     line += NUMBER_LINES_MESSAGE;\par
00063     line += to_string(find_number_lines(path1));\par
00064 \par
00065     Utils::COLOR color = choose_text_color();\par
00066     cout << Utils::format_colored_message(line,color) << {\cf23 '\\n'};\par
00067 \}\par
00068 \par
00069 {\cf18 void} Similarity_Explorer::process_similar_path_pair(Path path1, Path path2)\{\par
00070     {\cf19 if}(!match_pattern(path1,path2))\{\par
00071         {\cf19 return};\par
00072     \}\par
00073     {\cf19 if}(limit_on_results != UNLIMITED_RESULTS && processed_results >= limit_on_results)\{\par
00074         {\cf19 return};\par
00075     \}\par
00076     processed_results++;\par
00077     print_similar_path_pair(path1,path2);\par
00078 \}\par
00079 \par
00080 {\cf18 int} Similarity_Explorer::find_number_pair_found(vector<pair<Path,Path>> similar_path_pairs)\{\par
00081     {\cf18 int} count = 0;\par
00082     {\cf19 for}({\cf17 auto} [path1, path2] : similar_path_pairs)\{\par
00083         {\cf19 if}(match_pattern(path1,path2))\{\par
00084             count++;\par
00085         \}\par
00086     \}\par
00087     {\cf19 return} count;\par
00088 \}\par
00089 \par
00090 vector<pair<Path,Path>> Similarity_Explorer::build_similar_path_pairs({\cf18 bool} sorted_by_number_of_duplicated_code)\{\par
00091     vector<pair<Path,Path>> similar_path_pairs;\par
00092     {\cf19 if}(sorted_by_number_of_duplicated_code)\{\par
00093         similar_path_pairs = similarity_table->get_all_similar_path_pairs_sorted_by_line_number();\par
00094     \}{\cf19 else}\{\par
00095         similar_path_pairs = similarity_table->get_all_similar_path_pairs_sorted_by_similarity();\par
00096     \}\par
00097     {\cf19 return} similar_path_pairs;\par
00098 \}\par
00099 \par
00100 {\cf18 void} Similarity_Explorer::explorer({\cf18 bool} sorted_by_number_of_duplicated_code)\{\par
00101     vector<pair<Path,Path>> similar_path_pairs = build_similar_path_pairs(sorted_by_number_of_duplicated_code);\par
00102     {\cf18 string} initial_line =  format_initial_message(find_number_pair_found(similar_path_pairs));\par
00103 \par
00104     cout << initial_line << {\cf23 '\\n'};\par
00105     cout << Utils::LIMITER_PRINT << {\cf23 '\\n'};\par
00106 \par
00107     {\cf19 for}({\cf17 auto} [path1, path2] : similar_path_pairs)\{\par
00108         process_similar_path_pair(path1,path2);\par
00109     \}\par
00110 \}\par
00111 \par
00112 Similarity_Explorer::Similarity_Explorer(Similarity_Table *_similarity_table, \par
00113         {\cf18 int} _limit_on_results, \par
00114         {\cf18 string} _pattern_to_match, \par
00115         {\cf18 bool} _both_path_need_to_match,\par
00116         {\cf18 bool} sorted_by_number_of_duplicated_code)\{\par
00117     similarity_table = _similarity_table;\par
00118     limit_on_results = _limit_on_results;\par
00119     pattern_to_match = _pattern_to_match;\par
00120     both_path_need_to_match_pattern = _both_path_need_to_match;\par
00121     explorer(sorted_by_number_of_duplicated_code);\par
00122 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/explorer/similarity_explorer.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/explorer/similarity_explorer.hpp}
{\xe \v arkanjo/explorer/similarity_explorer.hpp}
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function exploration interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/function.hpp"}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similarity_explorer.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__explorer_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similarity__explorer_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Similarity_Explorer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function explorer and analyzer. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Duplicate function exploration interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides functionality to explore and analyze duplicate functions with various filtering and sorting options.\par
The Similarity Explorer implements the functionality to implement to find duplicated functions enabling some filters and sortings options \par
}{
Definition in file {\b similarity_explorer.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similarity_explorer.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/explorer/similarity_explorer.hpp}
{\xe \v arkanjo/explorer/similarity_explorer.hpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef SIMILARITY_EXPLORER_HPP}\par
00014 {\cf21 #define SIMILARITY_EXPLORER_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 \par
00018 {\cf21 #include "../base/path.hpp"}\par
00019 {\cf21 #include "../base/function.hpp"}\par
00020 {\cf21 #include "../base/utils.hpp"}\par
00021 {\cf21 #include "../base/similarity_table.hpp"}\par
00022 {\cf17 using namespace }std;\par
00023 \par
00030 {\cf17 class }Similarity_Explorer \{\par
00031         {\cf17 public}:\par
00032                 {\cf18 int} UNLIMITED_RESULTS = 0;       \par
00033                 {\cf18 string} EMPTY_PATTERN = {\cf22 ""};       \par
00034 \par
00035         {\cf17 private}:\par
00036                 {\cf18 string} BETWEEN_RELATIVE_AND_FUNCTION_NAME = {\cf22 "::"};  \par
00037                 {\cf18 string} START_LINE_COMPARATION_PRINT = {\cf22 "Functions find: "};  \par
00038                 {\cf18 string} BETWEEN_TWO_FUNCTION = {\cf22 " AND "};             \par
00039                 {\cf18 string} NUMBER_LINES_MESSAGE = {\cf22 " , TOTAL NUMBER LINES IN FUNCTIONS: "};  \par
00040                 {\cf18 string} INITIAL_TEXT_PRINT_1 = {\cf22 "It was found a total of "};  \par
00041                 {\cf18 string} INITIAL_TEXT_PRINT_2 = {\cf22 " pair of duplicate functions in the codebase. Which the first "};  \par
00042                 {\cf18 string} INITIAL_TEXT_PRINT_3 = {\cf22 " can be found below."};  \par
00043                 {\cf18 int} INITIAL_PROCESSED_RESULTS = 0;  \par
00044 \par
00045                 Similarity_Table *similarity_table;  \par
00046                 {\cf18 int} limit_on_results;               \par
00047                 {\cf18 string} pattern_to_match;            \par
00048                 {\cf18 bool} both_path_need_to_match_pattern;  \par
00049                 {\cf18 int} processed_results = INITIAL_PROCESSED_RESULTS;  \par
00050 \par
00055                 Utils::COLOR choose_text_color();\par
00056 \par
00062                 {\cf18 int} find_number_pairs_show({\cf18 int} number_pair_found);\par
00063 \par
00069                 {\cf18 string} format_initial_message({\cf18 int} number_pair_found);\par
00070 \par
00077                 {\cf18 bool} match_pattern(Path path1, Path path2);\par
00078 \par
00084                 {\cf18 string} format_path_message_in_pair(Path path);\par
00085 \par
00091                 {\cf18 int} find_number_lines(Path path1);\par
00092 \par
00098                 {\cf18 void} print_similar_path_pair(Path path1, Path path2);\par
00099 \par
00105                 {\cf18 void} process_similar_path_pair(Path path1, Path path2);\par
00106 \par
00112                 {\cf18 int} find_number_pair_found(vector<pair<Path,Path>> similar_path_pairs);\par
00113 \par
00119                 vector<pair<Path,Path>> build_similar_path_pairs({\cf18 bool} sorted_by_number_of_duplicated_code);\par
00120 \par
00125                 {\cf18 void} explorer({\cf18 bool} sorted_by_number_of_duplicated_code);\par
00126 \par
00127         {\cf17 public}:\par
00136                 Similarity_Explorer(Similarity_Table *_similarity_table,\par
00137                         {\cf18 int} _limit_on_results,\par
00138                         {\cf18 string} _pattern_to_match,\par
00139                         {\cf18 bool} _both_path_need_to_match,\par
00140                         {\cf18 bool} sorted_by_number_of_duplicated_code={\cf17 false});\par
00141 \};\par
00142 \par
00143 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/finder/similar_function_finder.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/finder/similar_function_finder.cpp}
{\xe \v arkanjo/finder/similar_function_finder.cpp}
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "similar_function_finder.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similar_function_finder.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similar__function__finder_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similar_function_finder.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/finder/similar_function_finder.cpp}
{\xe \v arkanjo/finder/similar_function_finder.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "similar_function_finder.hpp"}\par
00002 \par
00003 {\cf18 void} Similar_Function_Finder::find_path_that_meets_pattern()\{\par
00004     vector<Path> paths = similarity_table->get_path_list();\par
00005     {\cf19 for}({\cf17 auto} _path : paths)\{\par
00006         {\cf19 if}(_path.contains_given_pattern(function_pattern))\{\par
00007             path = _path;\par
00008         \}\par
00009     \}\par
00010 \}\par
00011 \par
00012 {\cf18 void} Similar_Function_Finder::print_empty_path_message()\{\par
00013     {\cf18 string} line1 = EMPTY_PATH_MESSAGE_1 + function_pattern;\par
00014     {\cf18 string} line2 = EMPTY_PATH_MESSAGE_2;\par
00015     cout << line1 << {\cf23 '\\n'};\par
00016     cout << line2 << {\cf23 '\\n'};\par
00017 \}\par
00018 \par
00019 {\cf18 void} Similar_Function_Finder::print_function(Path path)\{\par
00020     Function function(path);\par
00021     function.print_basic_info();\par
00022 \}\par
00023 \par
00024 {\cf18 void} Similar_Function_Finder::print_reference_path()\{\par
00025     {\cf18 string} line1 = REFERENCE_PATH_MESSAGE;\par
00026     cout << line1 << {\cf23 '\\n'};\par
00027     print_function(path);\par
00028 \}\par
00029 \par
00030 {\cf18 void} Similar_Function_Finder::print_similar_functions(vector<Path> similar_paths)\{\par
00031     {\cf18 string} line1 = COUNT_MESSAGE_1 + to_string(similar_paths.size()) + COUNT_MESSAGE_2;\par
00032     cout << line1 << {\cf23 '\\n'};\par
00033     {\cf19 for}({\cf17 auto} similar_path : similar_paths)\{\par
00034         print_function(similar_path);\par
00035     \}\par
00036 \}\par
00037 \par
00038 {\cf18 void} Similar_Function_Finder::print_similar_functions()\{\par
00039     {\cf19 if}(path.is_empty())\{\par
00040         print_empty_path_message();\par
00041         {\cf19 return};\par
00042     \}\par
00043     vector<Path> similar_paths = similarity_table->get_similar_path_to_the_reference(path);\par
00044 \par
00045     cout << Utils::LIMITER_PRINT << {\cf23 '\\n'};\par
00046     print_reference_path();\par
00047     print_similar_functions(similar_paths);\par
00048 \}\par
00049 \par
00050 Similar_Function_Finder::Similar_Function_Finder({\cf18 string} _function_pattern, Similarity_Table *_similarity_table)\{\par
00051     similarity_table = _similarity_table;\par
00052     function_pattern = _function_pattern;\par
00053 \par
00054     find_path_that_meets_pattern();\par
00055     print_similar_functions();\par
00056 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/finder/similar_function_finder.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/finder/similar_function_finder.hpp}
{\xe \v arkanjo/finder/similar_function_finder.hpp}
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/function.hpp"}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for similar_function_finder.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similar__function__finder_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "similar__function__finder_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Similar_Function_Finder}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator and reporter. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Similar function locator interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides functionality to find and display functions similar to a given reference function within the codebase.\par
Similar Functions Finder implements the functionality to given a function, find the other functions that are similar to the given one. \par
}{
Definition in file {\b similar_function_finder.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
similar_function_finder.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/finder/similar_function_finder.hpp}
{\xe \v arkanjo/finder/similar_function_finder.hpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 \par
00012 {\cf21 #ifndef SIMILAR_FUNCTION_FINDER_HPP}\par
00013 {\cf21 #define SIMILAR_FUNCTION_FINDER_HPP}\par
00014 \par
00015 {\cf21 #include <bits/stdc++.h>} \par
00016 {\cf21 #include "../base/path.hpp"}\par
00017 {\cf21 #include "../base/function.hpp"}\par
00018 {\cf21 #include "../base/utils.hpp"}\par
00019 {\cf21 #include "../base/similarity_table.hpp"}\par
00020 {\cf17 using namespace }std;\par
00021 \par
00028 {\cf17 class }Similar_Function_Finder \{\par
00029         {\cf18 string} EMPTY_PATH_MESSAGE_1 = {\cf22 "There is no functions that resembles the name: "};  \par
00030         {\cf18 string} EMPTY_PATH_MESSAGE_2 = {\cf22 "Value incorrected passed or there is no duplication code with this function"};  \par
00031         {\cf18 string} REFERENCE_PATH_MESSAGE = {\cf22 "The following function was found:"};  \par
00032         {\cf18 string} COUNT_MESSAGE_1 = {\cf22 "The total number of functions that are similar to the found one is "};  \par
00033         {\cf18 string} COUNT_MESSAGE_2 = {\cf22 ". More info about them are listed below."};  \par
00034 \par
00035         Similarity_Table *similarity_table;  \par
00036         {\cf18 string} function_pattern;             \par
00037         Path path;                          \par
00038 \par
00042         {\cf18 void} find_path_that_meets_pattern();\par
00043 \par
00047         {\cf18 void} print_empty_path_message();\par
00048 \par
00053         {\cf18 void} print_function(Path path);\par
00054 \par
00058         {\cf18 void} print_reference_path();\par
00059 \par
00064         {\cf18 void} print_similar_functions(vector<Path> similar_paths);\par
00065 \par
00069         {\cf18 void} print_similar_functions();\par
00070 \par
00071         {\cf17 public}:\par
00077                 Similar_Function_Finder({\cf18 string} _function_pattern, Similarity_Table *_similarity_table);\par
00078 \};\par
00079 \par
00080 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/orchestrator.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/orchestrator.cpp}
{\xe \v arkanjo/orchestrator.cpp}
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "orchestrator.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for orchestrator.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orchestrator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:orchestrator.cpp}
{\xe \v orchestrator.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b orchestrator.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
orchestrator.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/orchestrator.cpp}
{\xe \v arkanjo/orchestrator.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "orchestrator.hpp"}\par
00002 \par
00003 {\cf18 void} Orchestrator::help_command()\{\par
00004     cout << {\cf22 "Sorry I am tired I will do this latter"} << {\cf23 '\\n'};\par
00005 \}\par
00006 \par
00007 {\cf18 void} Orchestrator::check_update_similarity(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00008     {\cf18 int} number_parameters = parameters.size();\par
00009     {\cf19 for}({\cf18 int} i = 0; i < number_parameters-1; i++)\{\par
00010         {\cf18 string} param = parameters[i];\par
00011         {\cf18 string} next_param = parameters[i+1];\par
00012         {\cf19 if}(param == {\cf22 "-s"})\{\par
00013             similarity_table->update_similarity(stod(next_param));\par
00014         \}\par
00015     \}\par
00016 \}\par
00017 \par
00018 {\cf18 bool} Orchestrator::check_force_preprocess(vector<string> parameters)\{\par
00019     {\cf18 int} number_parameters = parameters.size();\par
00020     {\cf19 for}({\cf18 int} i = 0; i < number_parameters; i++)\{\par
00021         {\cf19 if}(parameters[i] == {\cf22 "-pre"})\{\par
00022             {\cf19 return} {\cf17 true};\par
00023         \}\par
00024     \}\par
00025     {\cf19 return} {\cf17 false};\par
00026 \}\par
00027 \par
00028 {\cf18 void} Orchestrator::call_preprocess(vector<string> parameters)\{\par
00029     {\cf18 bool} should_force = check_force_preprocess(parameters);\par
00030     Preprocessor preprocessor(should_force);\par
00031 \}\par
00032 \par
00033 {\cf18 void} Orchestrator::exploration_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00034     {\cf18 int} number_parameters = parameters.size();\par
00035 \par
00036     {\cf18 string} pattern = {\cf22 ""};\par
00037     {\cf18 int} limiter = 0;\par
00038     {\cf18 bool} both_need_to_match = {\cf17 false};\par
00039     {\cf18 bool} sorted_by_number_of_duplicated_code = {\cf17 false};\par
00040     {\cf19 for}({\cf18 int} i = 0; i < number_parameters-1; i++)\{\par
00041         {\cf18 string} param = parameters[i];\par
00042         {\cf18 string} next_param = parameters[i+1];\par
00043         {\cf19 if}(param == {\cf22 "-l"})\{\par
00044             limiter = stoi(next_param);\par
00045         \}\par
00046         {\cf19 if}(param == {\cf22 "-p"})\{\par
00047             pattern = next_param;\par
00048         \}\par
00049         {\cf19 if}(param == {\cf22 "-b"})\{\par
00050             both_need_to_match = (next_param == {\cf22 "T"});\par
00051         \}\par
00052         {\cf19 if}(param == {\cf22 "-c"})\{\par
00053             sorted_by_number_of_duplicated_code = (next_param == {\cf22 "T"});\par
00054         \}\par
00055     \}\par
00056     Similarity_Explorer similarity_explorer(\par
00057             similarity_table,\par
00058             limiter,\par
00059             pattern,\par
00060             both_need_to_match,\par
00061             sorted_by_number_of_duplicated_code);\par
00062 \}\par
00063 \par
00064 {\cf18 void} Orchestrator::random_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00065     {\cf18 int} number_parameters = parameters.size();\par
00066     {\cf19 if}(number_parameters <= 2)\{\par
00067         cout << {\cf22 "ERROR: Random expect three parameters, but less was given"} << endl;\par
00068         exit(0);\par
00069     \}\par
00070     {\cf18 int} minimum_similarity = stod(parameters[0]);\par
00071     {\cf18 int} maximum_similarity = stod(parameters[1]);\par
00072     {\cf18 int} maximum_quantity = stod(parameters[2]);\par
00073     Random_Selector random(similarity_table,minimum_similarity,maximum_similarity,maximum_quantity);\par
00074 \}\par
00075 \par
00076 {\cf18 void} Orchestrator::duplication_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00077     Counter_Duplication_Code counter_duplication_code(similarity_table);\par
00078 \}\par
00079 \par
00080 {\cf18 void} Orchestrator::big_clone_formater_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00081     Big_Clone_Formater big_clone_formater(similarity_table);\par
00082 \}\par
00083 \par
00084 {\cf18 void} Orchestrator::big_clone_tailor_evaluator_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00085     Big_Clone_Tailor_Evaluator big_clone_tailor_evaluator(similarity_table);\par
00086 \}\par
00087 \par
00088 {\cf18 void} Orchestrator::similar_function_finder_command(vector<string> parameters, Similarity_Table *similarity_table)\{\par
00089     {\cf18 int} number_parameters = parameters.size();\par
00090     {\cf19 if}(number_parameters == 0)\{\par
00091         cout << {\cf22 "ERROR: Similar Function Finder Command expect one parameter, but none was given"} << endl;\par
00092         exit(0);\par
00093     \}\par
00094     Similar_Function_Finder similar_function_finder(parameters[0],similarity_table);\par
00095 \}\par
00096 \par
00097 \par
00098 Orchestrator::Orchestrator({\cf18 string} command, vector<string> parameters)\{\par
00099     call_preprocess(parameters);\par
00100     Similarity_Table similarity_table;\par
00101     check_update_similarity(parameters,&similarity_table);\par
00102 \par
00103     {\cf19 if}(command == {\cf22 "du"})\{\par
00104         duplication_command(parameters,&similarity_table);\par
00105     \}{\cf19 else} {\cf19 if}(command == {\cf22 "ex"})\{\par
00106         exploration_command(parameters,&similarity_table);\par
00107     \}{\cf19 else} {\cf19 if}(command == {\cf22 "fu"})\{\par
00108         similar_function_finder_command(parameters,&similarity_table);\par
00109     \}{\cf19 else} {\cf19 if}(command == {\cf22 "bi"})\{\par
00110         big_clone_formater_command(parameters,&similarity_table);\par
00111     \}{\cf19 else} {\cf19 if}(command == {\cf22 "ev"})\{\par
00112         big_clone_tailor_evaluator_command(parameters,&similarity_table);\par
00113     \}{\cf19 else} {\cf19 if}(command == {\cf22 "ra"})\{\par
00114         random_command(parameters,&similarity_table);\par
00115     \}{\cf19 else}\{\par
00116         help_command();\par
00117     \}\par
00118 \}\par
00119 \par
00120 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00121     {\cf18 string} command = {\cf22 ""};\par
00122     vector<string> parameters;\par
00123     {\cf19 if}(argc >= 2)\{\par
00124         command = string(argv[1]);\par
00125     \}\par
00126     {\cf19 for}({\cf18 int} i = 2; i < argc; i++)\{\par
00127         {\cf18 string} param(argv[i]);\par
00128         parameters.push_back(param);\par
00129     \}\par
00130 \par
00131     Orchestrator(command,parameters);\par
00132 \par
00133     {\cf19 return} 0;\par
00134 \}\par
00135 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/orchestrator.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/orchestrator.hpp}
{\xe \v arkanjo/orchestrator.hpp}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestration interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "base/path.hpp"}\par
{\f2 #include "base/function.hpp"}\par
{\f2 #include "base/utils.hpp"}\par
{\f2 #include "base/similarity_table.hpp"}\par
{\f2 #include "finder/similar_function_finder.hpp"}\par
{\f2 #include "counter/counter_duplication_code_trie.hpp"}\par
{\f2 #include "counter/counter_duplication_code.hpp"}\par
{\f2 #include "explorer/similarity_explorer.hpp"}\par
{\f2 #include "big_clone/big_clone_formater.hpp"}\par
{\f2 #include "big_clone/big_clone_tailor_evaluator.hpp"}\par
{\f2 #include "rand/random_selector.hpp"}\par
{\f2 #include "pre/preprocessor.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for orchestrator.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orchestrator_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orchestrator_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Orchestrator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestrator. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main command orchestration interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides the central command dispatch system that coordinates all tool functionality through various subcomponents.\par
The orchestrator starts the flow of the user iteraction read the user cli command, parser it and call the correct functionality related to the user query. \par
}{
Definition in file {\b orchestrator.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
orchestrator.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/orchestrator.hpp}
{\xe \v arkanjo/orchestrator.hpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #include <bits/stdc++.h>} \par
00014 \par
00015 {\cf21 #include "base/path.hpp"}\par
00016 {\cf21 #include "base/function.hpp"}\par
00017 {\cf21 #include "base/utils.hpp"}\par
00018 {\cf21 #include "base/similarity_table.hpp"}\par
00019 {\cf21 #include "finder/similar_function_finder.hpp"}\par
00020 {\cf21 #include "counter/counter_duplication_code_trie.hpp"}\par
00021 {\cf21 #include "counter/counter_duplication_code.hpp"}\par
00022 {\cf21 #include "explorer/similarity_explorer.hpp"}\par
00023 {\cf21 #include "big_clone/big_clone_formater.hpp"}\par
00024 {\cf21 #include "big_clone/big_clone_tailor_evaluator.hpp"}\par
00025 {\cf21 #include "rand/random_selector.hpp"}\par
00026 {\cf21 #include "pre/preprocessor.hpp"}\par
00027 {\cf17 using namespace }std;\par
00028 \par
00036 {\cf17 class }Orchestrator \{\par
00037         {\cf17 private}:\par
00041                 {\cf18 void} help_command();\par
00042 \par
00048                 {\cf18 void} check_update_similarity(vector<string> parameters, Similarity_Table *similarity_table);\par
00049 \par
00055                 {\cf18 bool} check_force_preprocess(vector<string> parameters);\par
00056 \par
00061                 {\cf18 void} call_preprocess(vector<string> parameters);\par
00062 \par
00068                 {\cf18 void} exploration_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00069 \par
00075                 {\cf18 void} random_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00076 \par
00082                 {\cf18 void} duplication_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00083 \par
00089                 {\cf18 void} big_clone_formater_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00090 \par
00096                 {\cf18 void} big_clone_tailor_evaluator_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00097 \par
00103                 {\cf18 void} similar_function_finder_command(vector<string> parameters, Similarity_Table *similarity_table);\par
00104 \par
00105         {\cf17 public}:\par
00111                 Orchestrator({\cf18 string} command, vector<string> parameters);\par
00112 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/duplication_finder_diff.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_diff.cpp}
{\xe \v arkanjo/pre/duplication_finder_diff.cpp}
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "duplication_finder_diff.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for duplication_finder_diff.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__diff_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplication_finder_diff.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_diff.cpp}
{\xe \v arkanjo/pre/duplication_finder_diff.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "duplication_finder_diff.hpp"}\par
00002 \par
00003 DuplicationFinderDiff::DuplicationFinderDiff({\cf18 string} base_path_, {\cf18 double} similarity_)\{\par
00004     base_path = base_path_;\par
00005     similarity = similarity_;\par
00006 \par
00007     {\cf19 if}(similarity < 0)\{\par
00008         std::cout << {\cf22 "SIMILARITY SHOULD BE GREATER OR EQUAL 0 TO USE DUPLICATION FINDER BY DIFF COMMAND"};\par
00009     \}\par
00010 \}\par
00011 \par
00012 vector<string> DuplicationFinderDiff::find_files({\cf18 string} folder_path)\{\par
00013     vector<string> file_paths;\par
00014     {\cf19 for}({\cf17 const} {\cf17 auto} &dirEntry: std::filesystem::recursive_directory_iterator(folder_path))\{\par
00015         {\cf18 string} file_path = dirEntry.path().string();\par
00016         {\cf19 if}(Utils::does_file_exist(file_path) && Utils::is_regular_file(file_path))\{\par
00017             file_paths.push_back(file_path);\par
00018         \}\par
00019     \}\par
00020     {\cf19 return} file_paths;\par
00021 \}\par
00022 \par
00023 {\cf18 bool} DuplicationFinderDiff::is_empty_line({\cf18 string} line)\{\par
00024     {\cf18 int} line_size = line.size();\par
00025     {\cf18 bool} is_empty = {\cf17 true};\par
00026     {\cf19 for}({\cf18 int} i = 1; i < line_size; i++)\{\par
00027         is_empty &= Utils::is_empty_char(line[i]);\par
00028     \}\par
00029     {\cf19 return} is_empty;\par
00030 \}\par
00031 \par
00032 vector<string> DuplicationFinderDiff::remove_blank_lines(vector<string> content)\{\par
00033     vector<string> ret;\par
00034     {\cf19 for}({\cf17 auto} line : content)\{\par
00035         {\cf19 if}(!is_empty_line(line))\{\par
00036             ret.push_back(line);\par
00037         \}\par
00038     \}\par
00039     {\cf19 return} ret;\par
00040 \}\par
00041 \par
00042 {\cf18 bool} DuplicationFinderDiff::is_equal_files(vector< string> content1, vector<string> content2)\{\par
00043     {\cf19 if}(content1.size() != content2.size())\{\par
00044         {\cf19 return} {\cf17 false};\par
00045     \}\par
00046     {\cf18 int} sz = content1.size();\par
00047     {\cf19 for}({\cf18 int} i = 0; i < sz; i++)\{\par
00048         {\cf19 if}(content1[i] != content2[i])\{\par
00049             {\cf19 return} {\cf17 false};\par
00050         \}\par
00051     \}\par
00052     {\cf19 return} {\cf17 true};\par
00053 \}\par
00054 \par
00055 {\cf18 double} DuplicationFinderDiff::find_similarity({\cf18 string} path1, {\cf18 string} path2)\{\par
00056     vector<string> content1 = Utils::read_file_generic(path1);\par
00057     vector<string> content2 = Utils::read_file_generic(path2);\par
00058 \par
00059     content1 = remove_blank_lines(content1);\par
00060     content2 = remove_blank_lines(content2);\par
00061 \par
00062     {\cf19 if}(is_equal_files(content1,content2))\{\par
00063         {\cf19 return} 100;\par
00064     \}\par
00065 \par
00066     {\cf20 //execute diff command to extract the differences}\par
00067     {\cf18 string} output_file = base_path+{\cf22 "/diff.txt"};\par
00068 \par
00069     {\cf20 //-c is to print in the desired format}\par
00070     {\cf20 //2>&1 is to also send standard error to the output_file}\par
00071     {\cf18 string} command = {\cf22 "diff "} + path1 + {\cf22 " "} + path2 + {\cf22 " -c > "} +output_file + {\cf22 " 2>&1"};\par
00072     system(command.c_str());\par
00073 \par
00074     vector<string> content = Utils::read_file_generic(output_file);\par
00075 \par
00076     {\cf18 int} number_lines = content.size();\par
00077 \par
00078     {\cf18 int} different_lines = 0;\par
00079 \par
00080     {\cf19 for}({\cf18 int} i = 4; i < number_lines; i++)\{\par
00081         {\cf17 auto}& line = content[i];\par
00082         {\cf19 if}(is_empty_line(line))\{\par
00083             {\cf19 continue};\par
00084         \}\par
00085         {\cf19 if}(line[0] == {\cf23 '!'} || line[0] == {\cf23 '-'} || line[0] == {\cf23 '+'})\{\par
00086             different_lines += 1;\par
00087         \}\par
00088     \}\par
00089 \par
00090     {\cf18 int} equal_lines = (int)content1.size() + (int)content2.size();\par
00091     equal_lines -= different_lines;\par
00092 \par
00093     {\cf19 if}(different_lines+equal_lines == 0)\{\par
00094         {\cf19 return} -1;\par
00095     \}\par
00096 \par
00097     {\cf18 double} db_equal_lines = equal_lines;\par
00098     {\cf18 double} db_different_lines = different_lines;\par
00099     {\cf18 double} similarity_metric = db_equal_lines/(db_different_lines+db_equal_lines);\par
00100     similarity_metric *= 100;\par
00101     {\cf19 return} similarity_metric;\par
00102 \}\par
00103 \par
00104 vector<tuple<double,string,string>> DuplicationFinderDiff::find_similar_pairs(vector<string> &file_paths)\{\par
00105     {\cf18 size_t} number_files = file_paths.size();\par
00106     vector<tuple<double,string,string>> ret;\par
00107     {\cf19 for}({\cf18 size_t} i = 0; i < number_files; i++)\{\par
00108         {\cf19 for}({\cf18 size_t} j = 0; j < number_files; j++) {\cf19 if}(i != j)\{\par
00109             {\cf18 string} file_path1 = file_paths[i];\par
00110             {\cf18 string} file_path2 = file_paths[j];\par
00111             {\cf18 double} similarity_metric = find_similarity(file_path1,file_path2);\par
00112             {\cf19 if}( similarity_metric >= similarity)\{\par
00113                 ret.push_back(\{similarity_metric,file_path1,file_path2\});\par
00114             \}\par
00115         \}\par
00116     \}\par
00117     sort(ret.rbegin(),ret.rend());\par
00118     {\cf19 return} ret;\par
00119 \}\par
00120 \par
00121 {\cf18 void} DuplicationFinderDiff::save_duplications(vector<tuple<double,string,string>> &file_duplication_pairs)\{\par
00122     {\cf18 string} output_file_path = base_path+{\cf22 "/output_parsed.txt"};\par
00123 \par
00124     {\cf17 auto} fout = ofstream(output_file_path);\par
00125 \par
00126     fout << file_duplication_pairs.size() << {\cf23 '\\n'};\par
00127     {\cf19 for}({\cf17 const} {\cf17 auto} &[similarity,path1,path2] : file_duplication_pairs)\{\par
00128         fout << path1 << {\cf23 ' '} << path2 << {\cf23 ' '};\par
00129         fout << fixed << setprecision(2) << similarity << {\cf23 '\\n'};\par
00130     \}\par
00131 \par
00132     fout.close();\par
00133 \}\par
00134 \par
00135 {\cf18 void} DuplicationFinderDiff::execute()\{\par
00136 \par
00137     vector<string> file_paths = find_files(base_path+{\cf22 "/source"});\par
00138 \par
00139     vector<tuple<double,string,string>> file_duplication_pairs = find_similar_pairs(file_paths);\par
00140 \par
00141     cout << SAVING_MESSAGE << {\cf23 '\\n'};\par
00142 \par
00143     save_duplications(file_duplication_pairs);\par
00144 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/duplication_finder_diff.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_diff.hpp}
{\xe \v arkanjo/pre/duplication_finder_diff.hpp}
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessing system. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for duplication_finder_diff.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__diff_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__diff_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DuplicationFinderDiff}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessor. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication preprocessing system. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the heavy preprocessing stage that analyzes the codebase for potential duplications to enable fast query responses later.\par
Defines the preprocessor/setup step of the tool, where we do a heavy preprocessing of the input codebase to enable fast query response later. \par
}{
Definition in file {\b duplication_finder_diff.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplication_finder_diff.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_diff.hpp}
{\xe \v arkanjo/pre/duplication_finder_diff.hpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef DUPLICATION_FINDER_DIFF_HPP}\par
00014 {\cf21 #define DUPLICATION_FINDER_DIFF_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>}\par
00017 {\cf21 #include "../base/utils.hpp"}\par
00018 {\cf17 using namespace }std;\par
00019 \par
00027 {\cf17 class }DuplicationFinderDiff \{\par
00028         {\cf17 private}:\par
00029                 {\cf18 string} SAVING_MESSAGE = {\cf22 "Saving results..."};  \par
00030 \par
00031                 {\cf18 string} base_path;  \par
00032                 {\cf18 double} similarity;  \par
00033 \par
00039                 vector<string> find_files({\cf18 string} folder_path);\par
00040 \par
00046                 {\cf18 bool} is_empty_line({\cf18 string} line);\par
00047 \par
00053                 vector<string> remove_blank_lines(vector<string> content);\par
00054 \par
00061                 {\cf18 bool} is_equal_files(vector<string> content1, vector<string> content2);\par
00062 \par
00069                 {\cf18 double} find_similarity({\cf18 string} path1, {\cf18 string} path2);\par
00070 \par
00076                 vector<tuple<double,string,string>> find_similar_pairs(vector<string> &file_paths);\par
00077 \par
00082                 {\cf18 void} save_duplications(vector<tuple<double,string,string>> &file_duplication_pairs);\par
00083 \par
00084         {\cf17 public}:\par
00090                 DuplicationFinderDiff({\cf18 string} base_path_, {\cf18 double} similarity_);\par
00091 \par
00095                 {\cf18 void} execute();\par
00096 \};\par
00097 \par
00098 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/duplication_finder_tool.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_tool.cpp}
{\xe \v arkanjo/pre/duplication_finder_tool.cpp}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "duplication_finder_tool.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for duplication_finder_tool.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__tool_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplication_finder_tool.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_tool.cpp}
{\xe \v arkanjo/pre/duplication_finder_tool.cpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "duplication_finder_tool.hpp"}\par
00002 \par
00003 DuplicationFinderTool::DuplicationFinderTool({\cf18 string} base_path_, {\cf18 double} similarity_)\{\par
00004     base_path = base_path_;\par
00005     similarity = similarity_;\par
00006 \}\par
00007 \par
00008 {\cf18 void} DuplicationFinderTool::execute()\{\par
00009 \par
00010     {\cf18 string} command_tool = {\cf22 "python3 -W ignore third-party/duplicate-code-detection-tool/duplicate_code_detection.py -d "};\par
00011     command_tool += base_path;\par
00012     command_tool += {\cf22 "/source > "};\par
00013     command_tool += base_path;\par
00014     command_tool += {\cf22 "/output_tool.txt"};\par
00015 \par
00016     system(command_tool.c_str());\par
00017 \par
00018     cout << SAVING_MESSAGE << {\cf23 '\\n'};\par
00019 \par
00020     Parser parser(base_path+{\cf22 "/output_tool.txt"},base_path+{\cf22 "/output_parsed.txt"},similarity);\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/duplication_finder_tool.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_tool.hpp}
{\xe \v arkanjo/pre/duplication_finder_tool.hpp}
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main duplication detection tool interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "parser.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for duplication_finder_tool.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__tool_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "duplication__finder__tool_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DuplicationFinderTool}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main code duplication detection tool. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main duplication detection tool interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides the primary interface for the code duplication detection tool, handling the heavy preprocessing of the input codebase to enable fast query responses during operation.\par
Defines the preprocessor/setup step of the tool, where we do a heavy preprocessing of the input codebase to enable fast query response later. \par
}{
Definition in file {\b duplication_finder_tool.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplication_finder_tool.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/duplication_finder_tool.hpp}
{\xe \v arkanjo/pre/duplication_finder_tool.hpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00013 \par
00014 {\cf21 #ifndef DUPLICATION_FINDER_TOOL_HPP}\par
00015 {\cf21 #define DUPLICATION_FINDER_TOOL_HPP}\par
00016 \par
00017 {\cf21 #include <bits/stdc++.h>}\par
00018 {\cf21 #include "parser.hpp"}\par
00019 {\cf17 using namespace }std;\par
00020 \par
00028 {\cf17 class }DuplicationFinderTool \{\par
00029         {\cf17 private}:\par
00030                 {\cf18 string} SAVING_MESSAGE = {\cf22 "Saving results..."};  \par
00031 \par
00032                 {\cf18 string} base_path;  \par
00033                 {\cf18 double} similarity;  \par
00034 \par
00035         {\cf17 public}:\par
00041                 DuplicationFinderTool({\cf18 string} base_path_, {\cf18 double} similarity_);\par
00042 \par
00049                 {\cf18 void} execute();\par
00050 \};\par
00051 \par
00052 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker.cpp}
{\xe \v arkanjo/pre/function_breaker.cpp}
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "function_breaker.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker.cpp}
{\xe \v arkanjo/pre/function_breaker.cpp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20 This file intends to create a script to read a directory with }\par
00003 {\cf20 code in c and extract every function/struct of every .c file as a new file}\par
00004 {\cf20 }\par
00005 {\cf20 Example of expected behaviour: }\par
00006 {\cf20 There is a file example.c with functions a and b, will be create two new }\par
00007 {\cf20 files: example/a.c and example/b.c}\par
00008 {\cf20 }\par
00009 {\cf20 TODO: Doesn't work correct if the file has an incorrect bracket sequence, }\par
00010 {\cf20 even if the bracket sequence is in a commentary}\par
00011 {\cf20 */}\par
00012 \par
00013 {\cf21 #include "function_breaker.hpp"}\par
00014 \par
00015 {\cf18 bool} FunctionBreaker::is_c_extension({\cf18 string} extension)\{\par
00016     {\cf19 for}({\cf17 auto} c_extension : C_EXTENSIONS)\{\par
00017         {\cf19 if}(extension == c_extension)\{\par
00018             {\cf19 return} {\cf17 true};\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} {\cf17 false};\par
00022 \}\par
00023 \par
00024 {\cf18 bool} FunctionBreaker::is_java_extension({\cf18 string} extension)\{\par
00025     {\cf19 for}({\cf17 auto} java_extension : JAVA_EXTENSIONS)\{\par
00026         {\cf19 if}(extension == java_extension)\{\par
00027             {\cf19 return} {\cf17 true};\par
00028         \}\par
00029     \}\par
00030     {\cf19 return} {\cf17 false};\par
00031 \}\par
00032 \par
00033 {\cf18 bool} FunctionBreaker::is_allowed_extension({\cf18 string} extension)\{\par
00034     {\cf19 for}({\cf17 auto} allowed_extension : ALLOWED_EXTENSIONS)\{\par
00035         {\cf19 if}(extension == allowed_extension)\{\par
00036             {\cf19 return} {\cf17 true};\par
00037         \}\par
00038     \}\par
00039     {\cf19 return} {\cf17 false};\par
00040 \}\par
00041 \par
00042 {\cf18 void} FunctionBreaker::file_breaker({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00043     {\cf18 string} extension = extract_extension(file_path);\par
00044 \par
00045     {\cf19 if}(!is_allowed_extension(extension))\{\par
00046         {\cf19 return};\par
00047     \}\par
00048 \par
00049     {\cf19 if}(is_c_extension(extension))\{\par
00050         FunctionBreakerC function_breaker_c(file_path, folder_path);\par
00051     \}\par
00052     {\cf19 else} {\cf19 if}(is_java_extension(extension))\{\par
00053         FunctionBreakerJava function_breaker_java(file_path, folder_path);\par
00054     \}{\cf19 else}\{\par
00055         assert({\cf17 false} && {\cf22 "NOT ALLOWED FILE PASSED"});\par
00056     \}\par
00057 \}\par
00058 \par
00059 {\cf18 void} FunctionBreaker::function_breaker({\cf18 string} folder_path)\{\par
00060     {\cf19 for}({\cf17 const} {\cf17 auto} &dirEntry: std::filesystem::recursive_directory_iterator(folder_path))\{\par
00061         {\cf18 string} file_path = dirEntry.path().string();\par
00062         file_breaker(file_path,folder_path);\par
00063     \}\par
00064 \}\par
00065 \par
00066 FunctionBreaker::FunctionBreaker({\cf18 string} folder_path)\{\par
00067     function_breaker(folder_path);\par
00068 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker.hpp}
{\xe \v arkanjo/pre/function_breaker.hpp}
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "function_breaker_c.hpp"}\par
{\f2 #include "function_breaker_java.hpp"}\par
{\f2 #include "function_breaker_util.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionBreaker}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction processor. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function extraction interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides the primary interface for processing source code directories and extracting functions/structs into individual files in a temporary repository.\par
This file intends to create the process of reading a directory with code in c or java and extract every function/struct of every .c /.java file as a new file in the temporary repository, aka, tmp/\par
Example of expected behaviour: There is a file example.c with functions a and b, will be create two new files: example/a.c and example/b.c\par
TODO: Doesn't work correct if the file has an incorrect bracket sequence, even if the bracket sequence is in a commentary \par
}{
Definition in file {\b function_breaker.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker.hpp}
{\xe \v arkanjo/pre/function_breaker.hpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00019 \par
00020 {\cf21 #ifndef FUNCTION_BREAKER_HPP}\par
00021 {\cf21 #define FUNCTION_BREAKER_HPP}\par
00022 \par
00023 {\cf21 #include <bits/stdc++.h>}\par
00024 {\cf21 #include "../base/utils.hpp"}\par
00025 {\cf21 #include "function_breaker_c.hpp"}\par
00026 {\cf21 #include "function_breaker_java.hpp"}\par
00027 {\cf21 #include "function_breaker_util.hpp"}\par
00028 {\cf17 using namespace }std;\par
00029 \par
00043 {\cf17 class }FunctionBreaker \{\par
00044         {\cf17 const} vector<string> C_EXTENSIONS = \{ {\cf22 "c"}, {\cf22 "h"} \};          \par
00045         {\cf17 const} vector<string> JAVA_EXTENSIONS = \{ {\cf22 "java"} \};         \par
00046         {\cf17 const} vector<string> ALLOWED_EXTENSIONS = \{ {\cf22 "c"}, {\cf22 "h"}, {\cf22 "java"} \};  \par
00047 \par
00053         {\cf18 bool} is_c_extension({\cf18 string} extension);\par
00054 \par
00060         {\cf18 bool} is_java_extension({\cf18 string} extension);\par
00061 \par
00067         {\cf18 bool} is_allowed_extension({\cf18 string} extension);\par
00068 \par
00074         {\cf18 void} file_breaker({\cf18 string} file_path, {\cf18 string} folder_path);\par
00075 \par
00080         {\cf18 void} function_breaker({\cf18 string} folder_path);\par
00081 \par
00082         {\cf17 public}:\par
00087                 FunctionBreaker({\cf18 string} folder_path);\par
00088 \};\par
00089 \par
00090 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_c.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_c.cpp}
{\xe \v arkanjo/pre/function_breaker_c.cpp}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "function_breaker_c.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_c.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__c_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_c.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_c.cpp}
{\xe \v arkanjo/pre/function_breaker_c.cpp}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // TODO - line declaration extraction does not work really well to extract definition}\par
00002 {\cf20 // because of comments or define in the middle of definition}\par
00003 \par
00004 {\cf21 #include "function_breaker_c.hpp"}\par
00005 \par
00006 {\cf18 bool} FunctionBreakerC::is_define({\cf18 int} line, {\cf18 int} pos)\{\par
00007     {\cf18 int} line_size = file_content.size();\par
00008     {\cf20 // does not fit the #define token}\par
00009     {\cf19 if}(pos+7 > line_size) {\cf19 return} {\cf17 false};         \par
00010     {\cf20 // match the token}\par
00011     {\cf18 string} token = {\cf22 "#define"};\par
00012     {\cf18 bool} match = {\cf17 true};\par
00013     {\cf19 for}({\cf18 int} j = 0; j < 7; j++)\{\par
00014         match &= file_content[line][pos+j] == token[j];\par
00015     \}\par
00016     {\cf19 return} match;\par
00017 \}\par
00018 \par
00019 {\cf20 // Only works if the code is compilable. I do have grant any }\par
00020 {\cf20 // ensurances if the source code does not compile}\par
00021 {\cf18 void} FunctionBreakerC::filter_mask_commentaries_and_defines(vector<vector<bool>>& mask)\{\par
00022     {\cf20 // aqui tbm tem que lidar com string literal, ie, "#define" nao eh define a}\par
00023     {\cf20 // eh "//" nao eh commentario}\par
00024     {\cf18 int} number_lines = file_content.size();\par
00025     {\cf18 bool} is_open_block_comment = {\cf17 false};\par
00026     {\cf18 bool} is_open_define = {\cf17 false};\par
00027     {\cf18 bool} is_open_quotation_marks = {\cf17 false};\par
00028     {\cf18 bool} is_open_line_comment = {\cf17 false};\par
00029 \par
00030     {\cf19 for}({\cf18 int} i = 0; i < number_lines; i++)\{\par
00031         {\cf17 auto}& line = file_content[i];\par
00032         {\cf17 auto}& mask_line = mask[i];\par
00033         {\cf18 int} line_size = line.size();\par
00034 \par
00035         {\cf19 if}(is_open_define)\{\par
00036             {\cf19 for}({\cf18 int} j = 0; j < line_size; j++)\{\par
00037                 mask_line[j] = {\cf17 false};\par
00038             \}\par
00039             {\cf20 // if the last token is to continue the define}\par
00040             {\cf19 if}(line.back() != {\cf23 '\\\\'})\{\par
00041                 is_open_define = {\cf17 false};\par
00042             \}\par
00043             {\cf19 continue};\par
00044         \}\par
00045 \par
00046         {\cf19 if}(is_open_line_comment)\{\par
00047             {\cf19 for}({\cf18 int} j = 0; j < line_size; j++)\{\par
00048                 mask_line[j] = {\cf17 false};\par
00049             \}\par
00050             {\cf20 // if the last token is to continue the define}\par
00051             {\cf19 if}(line.back() != {\cf23 '\\\\'})\{\par
00052                 is_open_line_comment = {\cf17 false};\par
00053             \}\par
00054             {\cf19 continue};\par
00055         \}\par
00056 \par
00057         {\cf19 for}({\cf18 int} j = 0; j < line_size; j++)\{\par
00058             {\cf19 if}(is_open_block_comment)\{\par
00059                 mask_line[j] = {\cf17 false};\par
00060                 {\cf20 // if the block line comes to an end}\par
00061                 {\cf19 if}(j+1 < line_size && line[j] == {\cf23 '*'} && line[j+1] == {\cf23 '/'})\{\par
00062                     j++;\par
00063                     mask_line[j] = {\cf17 false};\par
00064                     is_open_block_comment = {\cf17 false};\par
00065                 \}\par
00066                 {\cf19 continue};\par
00067             \}\par
00068 \par
00069             {\cf19 if}(is_open_quotation_marks)\{\par
00070                 mask_line[j] = {\cf17 false};\par
00071                 {\cf20 // TODO should I take a look on ""s ?}\par
00072                 {\cf19 if}(line[j] == {\cf23 '"'})\{\par
00073                     is_open_quotation_marks = {\cf17 false};\par
00074                 \}{\cf19 else} {\cf19 if}(line[j] == {\cf23 '\\\\'})\{\par
00075                     {\cf19 if}(j == line_size-1)\{\par
00076                         {\cf19 break};\par
00077                     \}{\cf19 else}\{\par
00078                         j++;\par
00079                         mask_line[j] = {\cf17 false};\par
00080                     \}\par
00081                 \}\par
00082                 {\cf19 continue};\par
00083             \}\par
00084 \par
00085             {\cf19 if}(line[j] == {\cf23 '\\''})\{\par
00086                 assert(j+1 < line_size && \par
00087                         {\cf22 "source code does not compile, ' open but not closed"});\par
00088                 mask_line[j] = {\cf17 false};\par
00089                 j++;\par
00090                 {\cf19 if}(line[j] == {\cf23 '\\\\'})\{\par
00091                     assert(j+2 < line_size && line[j+2] == {\cf23 '\\''} &&\par
00092                             {\cf22 "source code does not compile, ' open but not closed"});\par
00093                     mask_line[j] = {\cf17 false};\par
00094                     j++;\par
00095                 \}{\cf19 else}\{\par
00096                     assert(j+1 < line_size && line[j+1] == {\cf23 '\\''} &&\par
00097                             {\cf22 "source code does not compile, ' open but not closed"});\par
00098                 \}\par
00099                 mask_line[j] = {\cf17 false};\par
00100                 j++;\par
00101                 mask_line[j] = {\cf17 false};\par
00102                 {\cf19 continue};\par
00103             \}\par
00104 \par
00105             {\cf19 if}(line[j] == {\cf23 '"'})\{\par
00106                 is_open_quotation_marks = {\cf17 true};\par
00107                 mask_line[j] = {\cf17 false};\par
00108                 {\cf19 continue};\par
00109             \}\par
00110 \par
00111             {\cf19 if}(line[j] == {\cf23 '/'})\{\par
00112                 {\cf19 if}(j == line_size-1)\{\par
00113                     {\cf19 continue};\par
00114                 \}\par
00115 \par
00116                 {\cf19 if}(line[j+1] == {\cf23 '/'})\{\par
00117                     {\cf19 for}({\cf18 int} k = j; k < line_size; k++)\{\par
00118                         mask_line[k] = {\cf17 false};\par
00119                     \}\par
00120                     {\cf20 // find line comment, everything after is comment and }\par
00121                     {\cf20 // break the iteration on the current line}\par
00122                     is_open_line_comment = line.back() == {\cf23 '\\\\'};\par
00123                     {\cf19 break};\par
00124                 \}\par
00125 \par
00126                 {\cf19 if}(line[j+1] == {\cf23 '*'})\{\par
00127                     mask_line[j] = {\cf17 false};\par
00128                     j++;\par
00129                     mask_line[j] = {\cf17 false};\par
00130                     is_open_block_comment = {\cf17 true};\par
00131                     {\cf19 continue};\par
00132                 \}\par
00133             \}\par
00134 \par
00135             {\cf19 if}(is_define(i,j))\{\par
00136                 {\cf19 for}({\cf18 int} k = j; k < line_size; k++)\{\par
00137                     mask_line[k] = {\cf17 false};\par
00138                 \}\par
00139                 {\cf20 // find #define, everything after is comment and }\par
00140                 {\cf20 // break the iteration on the current line}\par
00141                 is_open_define = line.back() == {\cf23 '\\\\'};\par
00142                 {\cf19 break};\par
00143             \}\par
00144         \}\par
00145     \}\par
00146 \par
00147     assert(is_open_block_comment == {\cf17 false} && \par
00148             {\cf22 "source code does not compile, open block comment"});\par
00149     assert(is_open_quotation_marks == {\cf17 false} &&\par
00150             {\cf22 "source code does not compile, open quotation marks"});\par
00151 \}\par
00152 \par
00153 {\cf20 // the exactly same size of the input source, the character will be 1 if it is not in a commentary nor a #define's}\par
00154 vector<vector<bool>> FunctionBreakerC::build_mask_valid_code()\{\par
00155     vector<vector<bool>> mask(file_content.size());\par
00156     {\cf19 for}({\cf18 int} i = 0; i < (int)file_content.size(); i++)\{\par
00157         mask[i] = vector<bool>(file_content[i].size(),{\cf17 true});\par
00158     \}\par
00159     filter_mask_commentaries_and_defines(mask);\par
00160     {\cf19 return} mask;\par
00161 \}\par
00162 \par
00163 set<array<int,5>> FunctionBreakerC::find_start_end_and_depth_of_brackets()\{\par
00164     set<array<int,5>> start_ends;\par
00165     {\cf18 int} open_brackets = 0;\par
00166 \par
00167     vector<pair<int,int>> not_processed_open_brackets;\par
00168     {\cf17 auto} process_open = [&]({\cf18 int} line_number, {\cf18 int} column)\{\par
00169         open_brackets++;\par
00170         not_processed_open_brackets.push_back(\{line_number,column\});\par
00171     \};\par
00172     {\cf17 auto} process_close = [&]({\cf18 int} line_number, {\cf18 int} column)\{\par
00173         open_brackets--;\par
00174         {\cf19 if}(open_brackets <= -1)\{\par
00175             open_brackets = 0;\par
00176         \}{\cf19 else}\{\par
00177             {\cf17 auto} [matched_line,matched_column]= not_processed_open_brackets.back();\par
00178             not_processed_open_brackets.pop_back();\par
00179             {\cf18 int} depth_of_open = not_processed_open_brackets.size();\par
00180             start_ends.insert(\{matched_line,\par
00181                     matched_column,\par
00182                     line_number,\par
00183                     column,\par
00184                     depth_of_open\});\par
00185         \}\par
00186     \};\par
00187 \par
00188     {\cf19 for}({\cf18 size_t} i = 0; i < file_content.size(); i++)\{\par
00189         {\cf17 auto}& line = file_content[i];\par
00190         {\cf19 for}({\cf18 size_t} j = 0; j < line.size(); j++)\{\par
00191             {\cf19 if}(!mask_valid[i][j])\{\par
00192                 {\cf19 continue};\par
00193             \}\par
00194             {\cf17 auto} c = line[j];\par
00195             {\cf19 if}(c == {\cf23 '\{'})\{\par
00196                 process_open(i,j);\par
00197             \}\par
00198             {\cf19 if}(c == {\cf23 '\}'})\{\par
00199                 process_close(i,j);\par
00200             \}\par
00201         \}\par
00202     \}\par
00203     {\cf19 return} start_ends;\par
00204 \}\par
00205 \par
00206 set<array<int,4>> FunctionBreakerC::find_start_end_of_brackets_of_given_depth()\{\par
00207     set<array<int,4>> ret;\par
00208     set<array<int,5>> bracket_pairs = find_start_end_and_depth_of_brackets();\par
00209     {\cf19 for}({\cf17 auto} [start_line,start_column,end_line,end_column,dep] : bracket_pairs)\{\par
00210         {\cf19 if}(dep == C_RELEVANT_DEPTH)\{\par
00211             ret.insert(\{start_line,start_column,end_line,end_column\});\par
00212         \}\par
00213     \}\par
00214     {\cf19 return} ret;\par
00215 \}\par
00216 \par
00217 vector<string> FunctionBreakerC::build_function_content({\cf18 int} start_number_line, {\cf18 int} start_column, {\cf18 int} end_number_line, {\cf18 int} end_column)\{\par
00218     vector<string> function_content;\par
00219 \par
00220     {\cf19 if}(start_number_line == end_number_line)\{\par
00221         {\cf18 string} line = {\cf22 ""};\par
00222         {\cf19 for}({\cf18 int} j = start_column; j <= end_column; j++)\{\par
00223             line += file_content[start_number_line][j];\par
00224         \}\par
00225         function_content.push_back(line);\par
00226         {\cf19 return} function_content;\par
00227     \}\par
00228 \par
00229     {\cf18 string} first_line = file_content[start_number_line];\par
00230     {\cf18 int} first_line_size = first_line.size();\par
00231     {\cf18 string} first_line_contribution = {\cf22 ""};\par
00232     {\cf19 for}({\cf18 int} j = start_column; j < first_line_size; j++)\{\par
00233         first_line_contribution += first_line[j];\par
00234     \}\par
00235     function_content.push_back(first_line_contribution);\par
00236 \par
00237     {\cf19 for}({\cf18 int} i = start_number_line+1; i < end_number_line; i++)\{\par
00238         function_content.push_back(file_content[i]);\par
00239     \}\par
00240 \par
00241     {\cf18 string} last_line = file_content[end_number_line];\par
00242     {\cf18 int} last_line_size = last_line.size();\par
00243     {\cf18 string} last_line_contribution = {\cf22 ""};\par
00244     {\cf19 for}({\cf18 int} j = 0; j <= end_column; j++)\{\par
00245         last_line_contribution += last_line[j];\par
00246     \}\par
00247     function_content.push_back(last_line_contribution);\par
00248 \par
00249     {\cf19 return} function_content;\par
00250 \}\par
00251 \par
00252 \par
00253 {\cf18 bool} FunctionBreakerC::move_pointer_until_character_outside_parenteses({\cf18 int} &line, {\cf18 int} &column)\{\par
00254     {\cf18 int} quantity_open = 0;\par
00255     {\cf18 bool} has_parenteses = {\cf17 false};\par
00256     {\cf19 while}(line != 0 || column != -1)\{\par
00257         {\cf19 if}(column == -1)\{\par
00258             line -= 1;\par
00259             column = file_content[line].size();\par
00260             column -= 1;\par
00261             {\cf19 continue};\par
00262         \}\par
00263 \par
00264         {\cf17 auto} c = file_content[line][column];\par
00265         {\cf19 if}(!mask_valid[line][column])\{\par
00266             column--;\par
00267             {\cf19 continue};\par
00268         \}\par
00269         {\cf19 if}(c == {\cf23 ')'})\{\par
00270             quantity_open++;\par
00271             has_parenteses = {\cf17 true};\par
00272             column--;\par
00273             {\cf19 continue};\par
00274         \}\par
00275         {\cf19 if}(c == {\cf23 '('})\{\par
00276             quantity_open--;\par
00277             has_parenteses = {\cf17 true};\par
00278             column--;\par
00279             {\cf19 continue};\par
00280         \}\par
00281         {\cf19 if}(Utils::is_special_char(c) || quantity_open != 0)\{\par
00282             column--;\par
00283             {\cf19 continue};\par
00284         \}\par
00285         {\cf19 break};\par
00286     \}\par
00287     assert( !(line == 0 && column == -1) && {\cf22 "code does not compile, bad formation of parenteses ()"});\par
00288     {\cf19 return} has_parenteses;\par
00289 \}\par
00290 \par
00291 {\cf20 //extract function_name, declaration start line and header content}\par
00292 tuple<string,int,vector<string>> FunctionBreakerC::extract_header_related_information({\cf18 int} start_line, {\cf18 int} start_column)\{\par
00293     {\cf18 int} line = start_line;\par
00294     {\cf18 int} column = start_column-1;\par
00295 \par
00296     {\cf18 bool} has_parenteses = move_pointer_until_character_outside_parenteses(line,column);\par
00297 \par
00298     {\cf18 string} file_name = {\cf22 ""};\par
00299     {\cf19 while}(column != -1)\{\par
00300         {\cf17 auto} c = file_content[line][column];\par
00301         {\cf19 if}(Utils::is_special_char(c))\{\par
00302             {\cf19 break};\par
00303         \}\par
00304         file_name += c;\par
00305         column--;\par
00306     \}\par
00307     reverse(file_name.begin(),file_name.end());\par
00308 \par
00309     move_pointer_until_character_outside_parenteses(line,column);\par
00310 \par
00311     {\cf19 while}(column != -1 || !Utils::is_special_char(file_content[line][column]))\{\par
00312         column--;\par
00313     \}\par
00314     column++;\par
00315 \par
00316     vector<string> header_content;\par
00317     {\cf19 if}(start_column == 0)\{\par
00318         header_content = build_function_content(line,column,start_line-1,({\cf18 int})file_content[start_line-1].size() -1);\par
00319     \}{\cf19 else}\{\par
00320         header_content = build_function_content(line,column,start_line,start_column-1);\par
00321     \}\par
00322 \par
00323     {\cf19 if}(!ALLOW_STRUCTS && !has_parenteses)\{\par
00324         {\cf19 return} \{{\cf22 ""},-1,header_content\};\par
00325     \}\par
00326     {\cf19 return} \{file_name,line,header_content\};\par
00327 \}\par
00328 \par
00329 {\cf18 bool} FunctionBreakerC::is_body_function_empty({\cf18 int} start_number_line, {\cf18 int} start_column, {\cf18 int} end_number_line, {\cf18 int} end_column)\{\par
00330     vector<string> function_content = build_function_content(start_number_line, start_column, end_number_line, end_column);\par
00331     {\cf18 int} count_not_empty_char = 0;\par
00332     {\cf19 for}({\cf17 auto} line : function_content)\{\par
00333         {\cf19 for}({\cf17 auto} c : line)\{\par
00334             {\cf19 if}(!Utils::is_empty_char(c))\{\par
00335                 count_not_empty_char++;\par
00336             \}\par
00337         \}\par
00338     \}\par
00339     {\cf18 bool} is_empty = count_not_empty_char <= 2;\par
00340     {\cf19 return} is_empty;\par
00341 \}\par
00342 \par
00343 {\cf18 void} FunctionBreakerC::process_function({\cf18 int} start_number_line, \par
00344         {\cf18 int} start_column,\par
00345         {\cf18 int} end_number_line, \par
00346         {\cf18 int} end_column,\par
00347         {\cf18 string} relative_path)\{\par
00348     {\cf18 string} first_line = file_content[start_number_line];\par
00349     {\cf17 auto} [function_name, line_declaration, header_content] = extract_header_related_information(start_number_line,start_column);\par
00350     {\cf19 if}(function_name.empty())\{\par
00351         {\cf19 return};\par
00352     \}\par
00353     {\cf19 if}(IGNORE_EMPTY_FUNCTIONS)\{\par
00354         {\cf19 if}(is_body_function_empty(start_number_line,start_column,end_number_line,end_column))\{\par
00355             {\cf19 return};\par
00356         \}\par
00357     \}\par
00358     vector<string> function_content = build_function_content(start_number_line,start_column,end_number_line,end_column);\par
00359 \par
00360     create_source_file(start_number_line,end_number_line,relative_path,function_name,function_content);\par
00361     create_header_file(relative_path, function_name, header_content);\par
00362     create_info_file(line_declaration,start_number_line,end_number_line,relative_path,function_name);\par
00363 \}\par
00364 \par
00365 {\cf18 string} FunctionBreakerC::file_path_from_folder_path({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00366     {\cf18 string} ret = {\cf22 ""};\par
00367     {\cf19 for}({\cf18 size_t} i = folder_path.size(); i < file_path.size(); i++)\{\par
00368         ret += file_path[i];\par
00369     \}\par
00370     {\cf19 return} ret;\par
00371 \}\par
00372 \par
00373 {\cf18 void} FunctionBreakerC::file_breaker_c({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00374     {\cf18 string} relative_path = file_path_from_folder_path(file_path, folder_path);\par
00375     file_content = Utils::read_file_generic(file_path);\par
00376     mask_valid = build_mask_valid_code();\par
00377 \par
00378     set<array<int,4>> start_end_of_functions = find_start_end_of_brackets_of_given_depth();\par
00379     {\cf19 for}({\cf17 auto} [start_line,start_column,end_line,end_column] : start_end_of_functions)\{\par
00380         process_function(start_line,start_column,end_line,end_column,relative_path);\par
00381     \}\par
00382 \}\par
00383 \par
00384 FunctionBreakerC::FunctionBreakerC({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00385     file_breaker_c(file_path, folder_path);\par
00386 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_c.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_c.hpp}
{\xe \v arkanjo/pre/function_breaker_c.hpp}
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parsing and extraction. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "function_breaker_util.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_c.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__c_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__c_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionBreakerC}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parser and extractor. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C/C++ function parsing and extraction. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functionality to parse C/C++ source files and break them into individual function components with metadata.\par
Defines the flow of parsing a source cpp file in multiples functions \par
}{
Definition in file {\b function_breaker_c.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_c.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_c.hpp}
{\xe \v arkanjo/pre/function_breaker_c.hpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 \par
00011 {\cf21 #ifndef FUNCTION_BREAKER_C_HPP}\par
00012 {\cf21 #define FUNCTION_BREAKER_C_HPP}\par
00013 \par
00014 {\cf21 #include <bits/stdc++.h>}\par
00015 {\cf21 #include "../base/utils.hpp"}\par
00016 {\cf21 #include "function_breaker_util.hpp"}\par
00017 \par
00025 {\cf17 class }FunctionBreakerC \{\par
00026         {\cf17 const} {\cf18 int} NUMBER_OF_LINES_BEFORE_FOR_FUNCTION_NAME = 7;  \par
00027         {\cf17 const} {\cf18 int} C_RELEVANT_DEPTH = 0;                         \par
00028         {\cf17 const} {\cf18 bool} IGNORE_EMPTY_FUNCTIONS = {\cf17 true};               \par
00029         {\cf17 const} {\cf18 bool} ALLOW_STRUCTS = {\cf17 false};                       \par
00030 \par
00031         vector<string> file_content;                             \par
00032         vector<vector<bool>> mask_valid;                         \par
00033 \par
00040         {\cf18 bool} is_define({\cf18 int} line, {\cf18 int} pos);\par
00041         \par
00047         {\cf18 void} filter_mask_commentaries_and_defines(vector<vector<bool>>& mask);\par
00048 \par
00053         vector<vector<bool>> build_mask_valid_code();\par
00054 \par
00059         set<array<int,5>> find_start_end_and_depth_of_brackets();\par
00060 \par
00065         set<array<int,4>> find_start_end_of_brackets_of_given_depth();\par
00066 \par
00075         vector<string> build_function_content({\cf18 int} start_number_line, {\cf18 int} start_column, {\cf18 int} end_number_line, {\cf18 int} end_column);\par
00076 \par
00083         {\cf18 bool} move_pointer_until_character_outside_parenteses({\cf18 int} &line, {\cf18 int} &column);\par
00084 \par
00091         tuple<string,int,vector<string>> extract_header_related_information({\cf18 int} start_line, {\cf18 int} start_column);\par
00092 \par
00101         {\cf18 bool} is_body_function_empty({\cf18 int} start_number_line, {\cf18 int} start_column, {\cf18 int} end_number_line, {\cf18 int} end_column);\par
00102 \par
00111         {\cf18 void} process_function({\cf18 int} start_number_line, {\cf18 int} start_column, {\cf18 int} end_number_line, {\cf18 int} end_column, {\cf18 string} relative_path);\par
00112 \par
00119         {\cf18 string} file_path_from_folder_path({\cf18 string} file_path, {\cf18 string} folder_path);\par
00120 \par
00126         {\cf18 void} file_breaker_c({\cf18 string} file_path, {\cf18 string} folder_path);\par
00127 \par
00128         {\cf17 public}:\par
00134                 FunctionBreakerC({\cf18 string} file_path, {\cf18 string} folder_path);\par
00135 \};\par
00136 \par
00137 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_java.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_java.cpp}
{\xe \v arkanjo/pre/function_breaker_java.cpp}
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "function_breaker_java.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_java.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__java_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_java.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_java.cpp}
{\xe \v arkanjo/pre/function_breaker_java.cpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "function_breaker_java.hpp"}\par
00002 \par
00003 set<array<int,3>> FunctionBreakerJava::find_start_end_and_depth_of_brackets(vector<string> brackets_content)\{\par
00004     set<array<int,3>> start_ends;\par
00005     {\cf18 int} open_brackets = 0;\par
00006 \par
00007     vector<int> not_processed_open_brackets;\par
00008     {\cf17 auto} process_open = [&]({\cf18 int} line_number)\{\par
00009         open_brackets++;\par
00010         not_processed_open_brackets.push_back(line_number);\par
00011     \};\par
00012     {\cf17 auto} process_close = [&]({\cf18 int} line_number)\{\par
00013         open_brackets--;\par
00014         {\cf19 if}(open_brackets <= -1)\{\par
00015             open_brackets = 0;\par
00016         \}{\cf19 else}\{\par
00017             {\cf18 int} matched_open_position = not_processed_open_brackets.back();\par
00018             not_processed_open_brackets.pop_back();\par
00019             {\cf18 int} depth_of_open = not_processed_open_brackets.size();\par
00020             start_ends.insert(\{matched_open_position,line_number,depth_of_open\});\par
00021         \}\par
00022     \};\par
00023     \par
00024     {\cf19 for}({\cf18 size_t} i = 0; i < brackets_content.size(); i++)\{\par
00025         {\cf17 auto} line = brackets_content[i];\par
00026         {\cf19 for}({\cf17 auto} c : line)\{\par
00027             {\cf19 if}(c == {\cf23 '\{'})\{\par
00028                 process_open(i);\par
00029             \}\par
00030             {\cf19 if}(c == {\cf23 '\}'})\{\par
00031                 process_close(i);\par
00032             \}\par
00033         \}\par
00034     \}\par
00035     {\cf19 return} start_ends;\par
00036 \}\par
00037 \par
00038 set<pair<int,int>> FunctionBreakerJava::find_start_end_of_brackets_of_given_depth(vector<string> brackets_content, {\cf18 int} depth)\{\par
00039     set<pair<int,int>> ret;\par
00040     set<array<int,3>> bracket_pairs = find_start_end_and_depth_of_brackets(brackets_content);\par
00041     {\cf19 for}({\cf17 auto} [start,end,dep] : bracket_pairs)\{\par
00042         {\cf19 if}(dep == depth)\{\par
00043             ret.insert(\{start,end\});\par
00044         \}\par
00045     \}\par
00046     {\cf19 return} ret;\par
00047 \}\par
00048 \par
00049 {\cf18 int} FunctionBreakerJava::find_position_first_open_bracket({\cf18 string} s)\{\par
00050     {\cf19 for}({\cf18 size_t} i = 0; i < s.size(); i++)\{\par
00051         {\cf18 char} c = s[i];\par
00052         {\cf19 if}(c == {\cf23 '\{'})\{\par
00053             {\cf19 return} i;\par
00054         \}\par
00055     \}\par
00056     {\cf19 return} -1;\par
00057 \}\par
00058 \par
00059 {\cf18 string} FunctionBreakerJava::extract_last_token_of_string({\cf18 string} s)\{\par
00060     vector<string> tokens;\par
00061     {\cf18 string} cur_token = {\cf22 ""};\par
00062     {\cf19 for}({\cf18 size_t} i = 0; i < s.size(); i++)\{\par
00063         {\cf18 char} c = s[i];\par
00064         {\cf19 if}( Utils::is_empty_char(c) || Utils::is_special_char(c))\{\par
00065             {\cf19 if}(!cur_token.empty())\{\par
00066                 tokens.push_back(cur_token);\par
00067             \}\par
00068             cur_token = {\cf22 ""};\par
00069         \}{\cf19 else}\{\par
00070             cur_token += c;\par
00071         \}\par
00072     \}\par
00073     {\cf19 if}(!cur_token.empty())\{\par
00074         tokens.push_back(cur_token);\par
00075     \}\par
00076 \par
00077     {\cf19 if}(tokens.empty())\{\par
00078         {\cf19 return} {\cf22 ""};\par
00079     \}\par
00080     {\cf19 return} tokens.back();\par
00081 \}\par
00082 \par
00083 Line_content FunctionBreakerJava::build_line_code({\cf18 int} line_number, {\cf18 string} content)\{\par
00084     Line_content ret;\par
00085     ret.line_number = line_number;\par
00086     ret.content = content;\par
00087     {\cf19 return} ret;\par
00088 \}\par
00089 \par
00090 vector<Line_content> FunctionBreakerJava::get_lines_before_body_function({\cf17 const} vector<string> &file_content, {\cf18 int} line_start_body_function, {\cf18 int} pos_bracket)\{    \par
00091     vector<Line_content> ret;\par
00092     Line_content line_bracket = build_line_code(line_start_body_function,file_content[line_start_body_function]);\par
00093     {\cf20 //remove everything after \{}\par
00094     {\cf19 while}({\cf18 int}(line_bracket.content.size()) > pos_bracket)\{\par
00095         line_bracket.content.pop_back();\par
00096     \}\par
00097     ret.push_back(line_bracket);\par
00098 \par
00099     {\cf18 int} until = max(0,line_start_body_function-NUMBER_OF_LINES_BEFORE_FOR_FUNCTION_NAME);\par
00100     {\cf19 for}({\cf18 int} i = line_start_body_function-1; i >= until; i--)\{\par
00101         ret.push_back(build_line_code(i,file_content[i]));\par
00102     \}\par
00103     reverse(ret.begin(),ret.end());\par
00104 \par
00105     {\cf20 //remove empty lines/empty characters at the end of lines}\par
00106     {\cf19 while}(!ret.empty())\{\par
00107         {\cf19 if}(ret.back().content.empty())\{\par
00108             ret.pop_back();\par
00109             {\cf19 continue};\par
00110         \}\par
00111         {\cf19 if}(Utils::is_empty_char(ret.back().content.back()))\{\par
00112             ret.back().content.pop_back();\par
00113             {\cf19 continue};\par
00114         \}\par
00115         {\cf19 break};\par
00116     \}\par
00117     {\cf19 return} ret;\par
00118 \}\par
00119 \par
00120 \par
00121 vector<Line_content> FunctionBreakerJava::remove_parenteses_at_the_end_of_the_scope(vector<Line_content> code)\{\par
00122     {\cf19 if}(code.empty() || code.back().content.back() != {\cf23 ')'})\{\par
00123         {\cf19 return} code;\par
00124     \}\par
00125     {\cf18 int} count_close_parenteses = 0;\par
00126 \par
00127     {\cf19 while}(!code.empty())\{\par
00128         {\cf18 string} content = code.back().content;\par
00129         {\cf19 while}(!content.empty())\{\par
00130             {\cf19 if}(content.back() == {\cf23 ')'})\{\par
00131                 count_close_parenteses++;\par
00132             \}\par
00133             {\cf19 if}(content.back() == {\cf23 '('})\{\par
00134                 count_close_parenteses--;\par
00135             \}\par
00136             content.pop_back();\par
00137             {\cf19 if}(count_close_parenteses == 0)\{\par
00138                 {\cf19 break};\par
00139             \}\par
00140         \}\par
00141         code.back().content = content;\par
00142         {\cf19 if}(count_close_parenteses == 0)\{\par
00143             {\cf19 break};\par
00144         \}\par
00145         code.pop_back();\par
00146     \}\par
00147     {\cf19 return} code;\par
00148 \}\par
00149 \par
00150 vector<Line_content> FunctionBreakerJava::remove_content_until_find_parenteses_at_the_end(vector<Line_content> code)\{\par
00151     {\cf19 while}(!code.empty())\{\par
00152         {\cf18 string} content = code.back().content;\par
00153         {\cf19 while}(!content.empty())\{\par
00154             {\cf19 if}(content.back() == {\cf23 ')'})\{\par
00155                 {\cf19 break};\par
00156             \}{\cf19 else}\{\par
00157                 content.pop_back();\par
00158             \}\par
00159         \}\par
00160         code.back().content = content;\par
00161         {\cf19 if}(!content.empty())\{\par
00162             {\cf19 break};\par
00163         \}\par
00164         code.pop_back();\par
00165     \}\par
00166     {\cf19 return} code;\par
00167 \}\par
00168 \par
00169 vector<Line_content> FunctionBreakerJava::remove_parameters_of_declaration_c(vector<Line_content> code)\{\par
00170     {\cf19 if}(!ALLOW_STRUCTS)\{\par
00171         {\cf17 auto} ret = remove_content_until_find_parenteses_at_the_end(code);\par
00172         {\cf19 return} remove_parenteses_at_the_end_of_the_scope(ret);\par
00173     \}\par
00174     {\cf19 return} remove_parenteses_at_the_end_of_the_scope(code);\par
00175 \}\par
00176 \par
00177 vector<Line_content> FunctionBreakerJava::remove_parameters_of_declaration_java(vector<Line_content> code)\{\par
00178     {\cf17 auto} ret = remove_content_until_find_parenteses_at_the_end(code);\par
00179     {\cf19 return} remove_parenteses_at_the_end_of_the_scope(ret);\par
00180 \}\par
00181 \par
00182 vector<Line_content> FunctionBreakerJava::remove_parameters_of_declaration(vector<Line_content> code, PROGRAMMING_LANGUAGE programming_language)\{\par
00183     {\cf19 if}(programming_language == C)\{\par
00184         {\cf19 return} remove_parameters_of_declaration_c(code);\par
00185     \}\par
00186     {\cf19 if}(programming_language == JAVA)\{\par
00187         {\cf19 return} remove_parameters_of_declaration_java(code);\par
00188     \}\par
00189     {\cf19 return} code;\par
00190 \}\par
00191 \par
00192 pair<string,int> FunctionBreakerJava::extract_function_name_and_line_from_declaration({\cf17 const} vector<string> &file_content, {\cf18 int} line_start_body_function, PROGRAMMING_LANGUAGE programming_language)\{\par
00193     {\cf18 int} pos = find_position_first_open_bracket(file_content[line_start_body_function]);\par
00194     vector<Line_content> code_before_bracket = get_lines_before_body_function(file_content, line_start_body_function,pos);\par
00195     vector<Line_content> code = remove_parameters_of_declaration(code_before_bracket, programming_language);\par
00196     {\cf19 if}(code.empty())\{\par
00197         {\cf19 return} make_pair({\cf22 ""},-1);\par
00198     \}\par
00199     {\cf18 string} ret = extract_last_token_of_string(code.back().content);\par
00200     {\cf19 return} \{ret,code.back().line_number\};\par
00201 \}\par
00202 \par
00203 vector<string> FunctionBreakerJava::build_function_content({\cf18 int} start_number_line, {\cf18 int} end_number_line,{\cf17 const} vector<string> &file_content)\{\par
00204     {\cf18 string} first_line = file_content[start_number_line];\par
00205     {\cf18 int} to_remove = find_position_first_open_bracket(first_line);\par
00206     \par
00207     vector<string> function_content;\par
00208     reverse(first_line.begin(),first_line.end());\par
00209     {\cf19 for}({\cf18 int} i = 0; i < to_remove; i++)\{\par
00210         first_line.pop_back();\par
00211     \}\par
00212     reverse(first_line.begin(),first_line.end());\par
00213     function_content.push_back(first_line);\par
00214     {\cf19 for}({\cf18 int} i = start_number_line+1; i <= end_number_line; i++)\{\par
00215         function_content.push_back(file_content[i]);\par
00216     \}\par
00217     {\cf19 return} function_content;\par
00218 \}\par
00219 \par
00220 vector<string> FunctionBreakerJava::build_header_content({\cf18 int} start_number_line, {\cf18 int} line_declaration, {\cf18 string} relative_path, {\cf18 string} function_name, {\cf17 const} vector<string> &file_content)\{\par
00221     vector<string> function_content;\par
00222     {\cf19 for}({\cf18 int} i = line_declaration; i < start_number_line; i++)\{\par
00223         function_content.push_back(file_content[i]);\par
00224     \}\par
00225 \par
00226     {\cf18 string} first_line = file_content[start_number_line];\par
00227     {\cf18 int} to_keep = find_position_first_open_bracket(first_line);\par
00228     {\cf19 while}({\cf18 int}(first_line.size()) > to_keep)\{\par
00229         first_line.pop_back();\par
00230     \}\par
00231     function_content.push_back(first_line);\par
00232     {\cf19 return} function_content;\par
00233 \}\par
00234 \par
00235 {\cf18 bool} FunctionBreakerJava::is_body_function_empty({\cf18 int} start_number_line, {\cf18 int} end_number_line,{\cf17 const} vector<string> &file_content)\{\par
00236     vector<string> function_content = build_function_content(start_number_line, end_number_line, file_content);\par
00237     {\cf18 int} count_not_empty_char = 0;\par
00238     {\cf19 for}({\cf17 auto} line : function_content)\{\par
00239         {\cf19 for}({\cf17 auto} c : line)\{\par
00240             {\cf19 if}(!Utils::is_empty_char(c))\{\par
00241                 count_not_empty_char++;\par
00242             \}\par
00243         \}\par
00244     \}\par
00245     {\cf18 bool} is_empty = count_not_empty_char <= 2;\par
00246     {\cf19 return} is_empty;\par
00247 \}\par
00248 \par
00249 {\cf18 void} FunctionBreakerJava::process_function({\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf18 string} relative_path, {\cf17 const} vector<string> &file_content, PROGRAMMING_LANGUAGE programming_language)\{\par
00250     {\cf18 string} first_line = file_content[start_number_line];\par
00251     {\cf17 auto} [function_name,line_declaration] = extract_function_name_and_line_from_declaration(file_content,start_number_line, programming_language);\par
00252     {\cf19 if}(function_name.empty())\{\par
00253         {\cf19 return};\par
00254     \}\par
00255     {\cf19 if}(IGNORE_EMPTY_FUNCTIONS)\{\par
00256         {\cf19 if}(is_body_function_empty(start_number_line,end_number_line,file_content))\{\par
00257             {\cf19 return};\par
00258         \}\par
00259     \}\par
00260 \par
00261     vector<string> function_content = build_function_content(start_number_line,end_number_line,file_content);\par
00262     vector<string> header_content = build_header_content(start_number_line,line_declaration,relative_path,function_name,file_content);\par
00263 \par
00264     create_source_file(start_number_line,end_number_line,relative_path,function_name,function_content);\par
00265     create_header_file(relative_path, function_name, header_content);\par
00266     create_info_file(line_declaration,start_number_line,end_number_line,relative_path,function_name);\par
00267 \}\par
00268 \par
00269 {\cf18 string} FunctionBreakerJava::file_path_from_folder_path({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00270     {\cf18 string} ret = {\cf22 ""};\par
00271     {\cf19 for}({\cf18 size_t} i = folder_path.size(); i < file_path.size(); i++)\{\par
00272         ret += file_path[i];\par
00273     \}\par
00274     {\cf19 return} ret;\par
00275 \}\par
00276 \par
00277 {\cf18 void} FunctionBreakerJava::file_breaker_java({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00278     {\cf18 string} relative_path = file_path_from_folder_path(file_path, folder_path);\par
00279     vector<string> file_content = Utils::read_file_generic(file_path);\par
00280     set<pair<int,int>> start_end_of_functions = find_start_end_of_brackets_of_given_depth(file_content, JAVA_RELEVANT_DEPTH);\par
00281 \par
00282     {\cf19 for}({\cf17 auto} [start_line, end_line] : start_end_of_functions)\{\par
00283         process_function(start_line,end_line,relative_path, file_content, JAVA);\par
00284     \}\par
00285 \}\par
00286 \par
00287 FunctionBreakerJava::FunctionBreakerJava({\cf18 string} file_path, {\cf18 string} folder_path)\{\par
00288     file_breaker_java(file_path, folder_path);\par
00289 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_java.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_java.hpp}
{\xe \v arkanjo/pre/function_breaker_java.hpp}
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parsing and extraction. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "function_breaker_util.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_java.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__java_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__java_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionBreakerJava}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parser and extractor. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java function parsing and extraction. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functionality to parse Java source files and break them into individual function components with metadata.\par
Defines the flow of parsing a java source file in multiples functions \par
}{
Definition in file {\b function_breaker_java.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_java.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_java.hpp}
{\xe \v arkanjo/pre/function_breaker_java.hpp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 \par
00011 {\cf21 #ifndef FUNCTION_BREAKER_JAVA_HPP}\par
00012 {\cf21 #define FUNCTION_BREAKER_JAVA_HPP}\par
00013 \par
00014 {\cf21 #include <bits/stdc++.h>}\par
00015 {\cf21 #include "../base/utils.hpp"}\par
00016 {\cf21 #include "function_breaker_util.hpp"}\par
00017 \par
00025 {\cf17 class }FunctionBreakerJava \{\par
00026         {\cf17 const} {\cf18 int} NUMBER_OF_LINES_BEFORE_FOR_FUNCTION_NAME = 7;  \par
00027         {\cf17 const} {\cf18 int} C_RELEVANT_DEPTH = 0;                         \par
00028         {\cf17 const} {\cf18 int} JAVA_RELEVANT_DEPTH = 1;                      \par
00029         {\cf17 const} {\cf18 bool} IGNORE_EMPTY_FUNCTIONS = {\cf17 true};               \par
00030         {\cf17 const} {\cf18 bool} ALLOW_STRUCTS = {\cf17 false};                       \par
00031 \par
00037         set<array<int,3>> find_start_end_and_depth_of_brackets(vector<string> brackets_content);\par
00038 \par
00045         set<pair<int,int>> find_start_end_of_brackets_of_given_depth(vector<string> brackets_content, {\cf18 int} depth);\par
00046 \par
00052         {\cf18 int} find_position_first_open_bracket({\cf18 string} s);\par
00053 \par
00059         {\cf18 string} extract_last_token_of_string({\cf18 string} s);\par
00060 \par
00067         Line_content build_line_code({\cf18 int} line_number, {\cf18 string} content);\par
00068 \par
00076         vector<Line_content> get_lines_before_body_function({\cf17 const} vector<string> &file_content, {\cf18 int} line_start_body_function, {\cf18 int} pos_bracket);\par
00077 \par
00083         vector<Line_content> remove_parenteses_at_the_end_of_the_scope(vector<Line_content> code);\par
00084 \par
00090         vector<Line_content> remove_content_until_find_parenteses_at_the_end(vector<Line_content> code);\par
00091 \par
00097         vector<Line_content> remove_parameters_of_declaration_c(vector<Line_content> code);\par
00098 \par
00104         vector<Line_content> remove_parameters_of_declaration_java(vector<Line_content> code);\par
00105 \par
00112         vector<Line_content> remove_parameters_of_declaration(vector<Line_content> code, PROGRAMMING_LANGUAGE programming_language);\par
00113 \par
00121         pair<string,int> extract_function_name_and_line_from_declaration({\cf17 const} vector<string> &file_content, {\cf18 int} line_start_body_function, PROGRAMMING_LANGUAGE programming_language);\par
00122 \par
00130         vector<string> build_function_content({\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf17 const} vector<string> &file_content);\par
00131 \par
00141         vector<string> build_header_content({\cf18 int} start_number_line, {\cf18 int} line_declaration, {\cf18 string} relative_path, {\cf18 string} function_name, {\cf17 const} vector<string> &file_content);\par
00142 \par
00150         {\cf18 bool} is_body_function_empty({\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf17 const} vector<string> &file_content);\par
00151 \par
00160         {\cf18 void} process_function({\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf18 string} relative_path, {\cf17 const} vector<string> &file_content, PROGRAMMING_LANGUAGE programming_language);\par
00161 \par
00168         {\cf18 string} file_path_from_folder_path({\cf18 string} file_path, {\cf18 string} folder_path);\par
00169 \par
00175         {\cf18 void} file_breaker_java({\cf18 string} file_path, {\cf18 string} folder_path);\par
00176 \par
00177         {\cf17 public}:\par
00183                 FunctionBreakerJava({\cf18 string} file_path, {\cf18 string} folder_path);\par
00184 \};\par
00185 \par
00186 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_util.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_util.cpp}
{\xe \v arkanjo/pre/function_breaker_util.cpp}
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "function_breaker_util.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_util.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__util_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b anonymous_namespace\{function_breaker_util.cpp\}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b anonymous_namespace\{function_breaker_util.cpp\}::find_position_first_open_bracket} (string s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b extract_extension} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts file extension from path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_source_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_header_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_info_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds info file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_source_file} (int start_number_line, int end_number_line, string relative_path, string function_name, const vector< string > &function_content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates source file for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_header_file} (string relative_path, string function_name, const vector< string > &header_content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates header file for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_info_file} (int line_declaration, int start_number_line, int end_number_line, string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates JSON metadata file for a function. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v build_header_path\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:build_header_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_header_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the header file \par
}}}{
Definition at line {\b 42} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v build_info_path\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:build_info_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_info_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds info file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the info file \par
}}}{
Definition at line {\b 51} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v build_source_path\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:build_source_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_source_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the source file \par
}}}{
Definition at line {\b 33} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_header_file\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:create_header_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_header_file (string relative_path, string function_name, const vector< string > & header_content)}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates header file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header_content} \cell }{Vector of strings containing the header content \cell }
{\row }
}
}{
Definition at line {\b 65} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_info_file\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:create_info_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_info_file (int line_declaration, int start_number_line, int end_number_line, string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates JSON metadata file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i line_declaration} \cell }{Line number where function is declared \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_number_line} \cell }{Starting line number of function body \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_number_line} \cell }{Ending line number of function body \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
}{
Definition at line {\b 71} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_source_file\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:create_source_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_source_file (int start_number_line, int end_number_line, string relative_path, string function_name, const vector< string > & function_content)}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates source file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_number_line} \cell }{Starting line number in original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_number_line} \cell }{Ending line number in original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_content} \cell }{Vector of strings containing the function body \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v extract_extension\:function_breaker_util.cpp}
{\xe \v function_breaker_util.cpp\:extract_extension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string extract_extension (string file_path)}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts file extension from path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{{\b Path} to the file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string File extension \par
}}}{
Definition at line {\b 16} of file {\b function_breaker_util.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_util.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_util.cpp}
{\xe \v arkanjo/pre/function_breaker_util.cpp}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "function_breaker_util.hpp"}\par
00002 \par
00003 {\cf20 // TODO Refactor, refactor this}\par
00004 {\cf17 namespace }\{\par
00005     {\cf18 int} find_position_first_open_bracket({\cf18 string} s)\{\par
00006         {\cf19 for}({\cf18 size_t} i = 0; i < s.size(); i++)\{\par
00007             {\cf18 char} c = s[i];\par
00008             {\cf19 if}(c == {\cf23 '\{'})\{\par
00009                 {\cf19 return} i;\par
00010             \}\par
00011         \}\par
00012         {\cf19 return} -1;\par
00013     \}\par
00014 \}\par
00015 \par
00016 {\cf18 string} extract_extension({\cf18 string} file_path)\{\par
00017     {\cf18 string} extension = {\cf22 ""};\par
00018     {\cf18 int} pos_last_dot = -1;\par
00019     {\cf19 for}({\cf18 size_t} i = 0; i < file_path.size(); i++)\{\par
00020         {\cf19 if}(file_path[i] == {\cf23 '.'})\{\par
00021             pos_last_dot = i;\par
00022         \}\par
00023     \}\par
00024     {\cf19 if}(pos_last_dot == -1)\{\par
00025         {\cf19 return} extension;\par
00026     \}\par
00027     {\cf19 for}({\cf18 size_t} i = pos_last_dot+1; i < file_path.size(); i++)\{\par
00028         extension += file_path[i];\par
00029     \}\par
00030     {\cf19 return} extension;\par
00031 \}\par
00032 \par
00033 {\cf18 string} build_source_path({\cf18 string} relative_path, {\cf18 string} function_name)\{\par
00034     {\cf18 string} extension = extract_extension(relative_path);\par
00035     Config *config = Config::config();\par
00036     {\cf18 string} final_path = config->getBasePath() + {\cf22 "/"};\par
00037     final_path += SOURCE_PATH + relative_path + {\cf22 "/"};\par
00038     final_path += function_name + {\cf22 "."} + extension;\par
00039     {\cf19 return} final_path;\par
00040 \}\par
00041 \par
00042 {\cf18 string} build_header_path({\cf18 string} relative_path, {\cf18 string} function_name)\{\par
00043     {\cf18 string} extension = extract_extension(relative_path);\par
00044     Config *config = Config::config();\par
00045     {\cf18 string} final_path = config->getBasePath() + {\cf22 "/"};\par
00046     final_path += HEADER_PATH + relative_path + {\cf22 "/"};\par
00047     final_path += function_name + {\cf22 "."} + extension;\par
00048     {\cf19 return} final_path;\par
00049 \}\par
00050 \par
00051 {\cf18 string} build_info_path({\cf18 string} relative_path, {\cf18 string} function_name)\{\par
00052     {\cf18 string} extension = extract_extension(relative_path);\par
00053     Config *config = Config::config();\par
00054     {\cf18 string} final_path = config->getBasePath() + {\cf22 "/"};\par
00055     final_path += INFO_PATH + relative_path + {\cf22 "/"};\par
00056     final_path += function_name + {\cf22 ".json"};\par
00057     {\cf19 return} final_path;\par
00058 \}\par
00059 \par
00060 {\cf18 void} create_source_file({\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf18 string} relative_path, {\cf18 string} function_name, {\cf17 const} vector<string> &function_content)\{\par
00061     {\cf18 string} path = build_source_path(relative_path, function_name);\par
00062     Utils::write_file_generic(path, function_content);\par
00063 \}\par
00064 \par
00065 {\cf18 void} create_header_file({\cf18 string} relative_path, {\cf18 string} function_name, {\cf17 const} vector<string> &header_content)\{\par
00066     {\cf18 string} path = build_header_path(relative_path, function_name);\par
00067     Utils::write_file_generic(path, header_content);\par
00068 \}\par
00069 \par
00070 {\cf20 /*This creates a json file*/}\par
00071 {\cf18 void} create_info_file({\cf18 int} line_declaration, {\cf18 int} start_number_line, {\cf18 int} end_number_line, {\cf18 string} relative_path, {\cf18 string} function_name)\{\par
00072     vector<string> content;\par
00073     content.push_back({\cf22 "\{\\n"});\par
00074     content.push_back({\cf22 "\\"file_name\\":\\""} + relative_path + {\cf22 "\\",\\n"});\par
00075     content.push_back({\cf22 "\\"function_name\\":\\""} + function_name + {\cf22 "\\",\\n"});\par
00076     content.push_back({\cf22 "\\"line_declaration\\":"} + to_string(line_declaration) + {\cf22 ",\\n"});\par
00077     content.push_back({\cf22 "\\"start_number_line\\":"} + to_string(start_number_line) + {\cf22 ",\\n"});\par
00078     content.push_back({\cf22 "\\"end_number_line\\":"} + to_string(end_number_line) + {\cf22 "\\n"});\par
00079     content.push_back({\cf22 "\}\\n"});\par
00080     {\cf18 string} path = build_info_path(relative_path, function_name);\par
00081     Utils::write_file_generic(path, content);\par
00082 \}\par
00083 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/function_breaker_util.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_util.hpp}
{\xe \v arkanjo/pre/function_breaker_util.hpp}
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} breaker utilities and constants. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "../base/config.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_breaker_util.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__util_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__breaker__util_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Line_content}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a line of source code. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PROGRAMMING_LANGUAGE} \{ {\b C}
, {\b JAVA}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of supported programming languages. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b extract_extension} (string file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts file extension from path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_source_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_header_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b build_info_path} (string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds info file path for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_source_file} (int start_number_line, int end_number_line, string relative_path, string function_name, const vector< string > &function_content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates source file for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_header_file} (string relative_path, string function_name, const vector< string > &header_content)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates header file for a function. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_info_file} (int line_declaration, int start_number_line, int end_number_line, string relative_path, string function_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates JSON metadata file for a function. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b SOURCE_PATH} = "source"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for source files. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b HEADER_PATH} = "header"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for header files. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b INFO_PATH} = "info"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for metadata files. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Function} breaker utilities and constants. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines common utilities, structures, and constants used across the function breaking process for supported programming languages.\par
Defines util functions, struct and constants used across the function breaker process for the suported languages \par
}{
Definition in file {\b function_breaker_util.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v PROGRAMMING_LANGUAGE\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:PROGRAMMING_LANGUAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b PROGRAMMING_LANGUAGE}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of supported programming languages. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v C\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:C}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid C{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C programming language. \par
}\cell }{\row }
{\xe \v JAVA\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:JAVA}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid JAVA{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Java programming language. \par
}\cell }{\row }
}
{
Definition at line {\b 30} of file {\b function_breaker_util.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v build_header_path\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:build_header_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_header_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds header file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the header file \par
}}}{
Definition at line {\b 42} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v build_info_path\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:build_info_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_info_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds info file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the info file \par
}}}{
Definition at line {\b 51} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v build_source_path\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:build_source_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string build_source_path (string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Builds source file path for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string Full path for the source file \par
}}}{
Definition at line {\b 33} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_header_file\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:create_header_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_header_file (string relative_path, string function_name, const vector< string > & header_content)}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates header file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header_content} \cell }{Vector of strings containing the header content \cell }
{\row }
}
}{
Definition at line {\b 65} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_info_file\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:create_info_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_info_file (int line_declaration, int start_number_line, int end_number_line, string relative_path, string function_name)}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates JSON metadata file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i line_declaration} \cell }{Line number where function is declared \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_number_line} \cell }{Starting line number of function body \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_number_line} \cell }{Ending line number of function body \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
}
}{
Definition at line {\b 71} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v create_source_file\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:create_source_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_source_file (int start_number_line, int end_number_line, string relative_path, string function_name, const vector< string > & function_content)}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates source file for a function. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_number_line} \cell }{Starting line number in original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_number_line} \cell }{Ending line number in original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i relative_path} \cell }{Relative path of the original file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_name} \cell }{Name of the function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i function_content} \cell }{Vector of strings containing the function body \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b function_breaker_util.cpp}.}\par
}
{\xe \v extract_extension\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:extract_extension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string extract_extension (string file_path)}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts file extension from path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{{\b Path} to the file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
string File extension \par
}}}{
Definition at line {\b 16} of file {\b function_breaker_util.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v HEADER_PATH\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:HEADER_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string HEADER_PATH = "header"}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for header files. }}\par
{
Definition at line {\b 36} of file {\b function_breaker_util.hpp}.}\par
}
{\xe \v INFO_PATH\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:INFO_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string INFO_PATH = "info"}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for metadata files. }}\par
{
Definition at line {\b 37} of file {\b function_breaker_util.hpp}.}\par
}
{\xe \v SOURCE_PATH\:function_breaker_util.hpp}
{\xe \v function_breaker_util.hpp\:SOURCE_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string SOURCE_PATH = "source"}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Directory name for source files. }}\par
{
Definition at line {\b 35} of file {\b function_breaker_util.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
function_breaker_util.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/function_breaker_util.hpp}
{\xe \v arkanjo/pre/function_breaker_util.hpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 \par
00012 {\cf21 #ifndef FUNCTION_BREAKER_UTIL_HPP}\par
00013 {\cf21 #define FUNCTION_BREAKER_UTIL_HPP}\par
00014 \par
00015 {\cf21 #include <bits/stdc++.h>}\par
00016 {\cf21 #include "../base/utils.hpp"}\par
00017 {\cf21 #include "../base/config.hpp"}\par
00018 \par
00022 {\cf17 struct }Line_content \{\par
00023     {\cf18 int} line_number;    \par
00024     {\cf18 string} content;     \par
00025 \};\par
00026 \par
00030 {\cf17 enum} PROGRAMMING_LANGUAGE \{\par
00031     C,      \par
00032     JAVA    \par
00033 \};\par
00034 \par
00035 {\cf17 const} {\cf18 string} SOURCE_PATH = {\cf22 "source"};   \par
00036 {\cf17 const} {\cf18 string} HEADER_PATH = {\cf22 "header"};   \par
00037 {\cf17 const} {\cf18 string} INFO_PATH = {\cf22 "info"};       \par
00038 \par
00044 {\cf18 string} extract_extension({\cf18 string} file_path);\par
00045 \par
00052 {\cf18 string} build_source_path({\cf18 string} relative_path, {\cf18 string} function_name);\par
00053 \par
00060 {\cf18 string} build_header_path({\cf18 string} relative_path, {\cf18 string} function_name);\par
00061 \par
00068 {\cf18 string} build_info_path({\cf18 string} relative_path, {\cf18 string} function_name);\par
00069 \par
00078 {\cf18 void} create_source_file({\cf18 int} start_number_line, {\cf18 int} end_number_line, \par
00079                        {\cf18 string} relative_path, {\cf18 string} function_name, \par
00080                        {\cf17 const} vector<string> &function_content);\par
00081 \par
00088 {\cf18 void} create_header_file({\cf18 string} relative_path, {\cf18 string} function_name, \par
00089                        {\cf17 const} vector<string> &header_content);\par
00090 \par
00099 {\cf18 void} create_info_file({\cf18 int} line_declaration, {\cf18 int} start_number_line, \par
00100                      {\cf18 int} end_number_line, {\cf18 string} relative_path, \par
00101                      {\cf18 string} function_name);\par
00102 \par
00103 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/parser.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/parser.hpp}
{\xe \v arkanjo/pre/parser.hpp}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication results parser. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Comparation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a code comparison result. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Parser}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and transforms duplication detection tool output. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Code duplication results parser. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles parsing and transformation of output from third-party code duplication detection tools into a more usable format.\par
The parser is responsible to read the output to the code duplication detection tool that exists in the third_party folder and parse/transform it in a way that is easier to work with later. \par
}{
Definition in file {\b parser.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/parser.hpp}
{\xe \v arkanjo/pre/parser.hpp}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef PARSER_HPP}\par
00014 {\cf21 #define PARSER_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>}\par
00017 {\cf17 using namespace }std;\par
00018 \par
00025 {\cf17 struct }Comparation \{\par
00026         {\cf18 string} path1;       \par
00027         {\cf18 string} path2;       \par
00028         {\cf18 double} similarity;  \par
00029 \par
00033         Comparation() \{\}\par
00034 \par
00041         Comparation({\cf18 string} _path1, {\cf18 string} _path2, {\cf18 double} _sim);\par
00042 \par
00048         {\cf18 bool} operator<({\cf17 const} Comparation &com) {\cf17 const};\par
00049 \par
00055         {\cf18 bool} operator==({\cf17 const} Comparation &com) {\cf17 const};\par
00056 \};\par
00057 \par
00064 {\cf17 class }Parser \{\par
00065         {\cf17 private}:\par
00066                 {\cf18 string} PROJECT_PATH_MESSAGE = {\cf22 "Enter your project path:"};            \par
00067                 {\cf18 string} MINIMUM_SIMILARITY_MESSAGE = {\cf22 "Enter minimum similarity desired on using the tool:"};  \par
00068 \par
00069                 ifstream fin;           \par
00070                 ofstream fout;          \par
00071                 {\cf18 double} similarity_cap_; \par
00072 \par
00078                 vector<string> parser_line({\cf18 string} line);\par
00079 \par
00085                 {\cf18 bool} is_an_file({\cf18 string} s);\par
00086 \par
00092                 {\cf18 string} remove_formatation_from_similarity({\cf18 string} s);\par
00093 \par
00099                 {\cf18 double} retrive_similarity({\cf18 string} s);\par
00100 \par
00106                 {\cf18 void} parser_block({\cf18 string} path, set<Comparation> &comparations);\par
00107 \par
00111                 {\cf18 void} exec();\par
00112 \par
00113         {\cf17 public}:\par
00120                 Parser({\cf18 string} input_file, {\cf18 string} output_file, {\cf18 double} similarity_cap);\par
00121 \};\par
00122 \par
00123 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/preprocessor.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor.cpp}
{\xe \v arkanjo/pre/preprocessor.cpp}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "preprocessor.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preprocessor.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preprocessor_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
preprocessor.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor.cpp}
{\xe \v arkanjo/pre/preprocessor.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "preprocessor.hpp"}\par
00002 \par
00003 {\cf18 void} Preprocessor::save_current_run_params({\cf18 string} path)\{\par
00004     vector<string> config_content;\par
00005 \par
00006     {\cf18 string} path_message = PATH_MESSAGE + path;\par
00007 \par
00008     {\cf17 auto} end = std::chrono::system_clock::now();\par
00009     std::time_t end_time = std::chrono::system_clock::to_time_t(end);\par
00010     {\cf18 string} time_message = TIME_MESSAGE + std::ctime(&end_time);\par
00011 \par
00012     config_content.push_back(path_message);\par
00013     config_content.push_back(time_message);\par
00014 \par
00015     Utils::write_file_generic(Config::config()->getBasePath() + {\cf22 "/"} + CONFIG_PATH,config_content);\par
00016 \}\par
00017 \par
00018 tuple<string,double,bool> Preprocessor::read_parameters()\{\par
00019     cout << INITIAL_MESSAGE << {\cf23 '\\n'};\par
00020     {\cf18 string} path,similarity_message;\par
00021 \par
00022     cout << PROJECT_PATH_MESSAGE << {\cf23 '\\n'};\par
00023     cin >> path;\par
00024 \par
00025     cout << MINIMUM_SIMILARITY_MESSAGE << {\cf23 '\\n'};\par
00026     cin >> similarity_message;\par
00027     {\cf18 double} similarity = stod(similarity_message);\par
00028 \par
00029     {\cf18 bool} use_duplication_finder_by_tool={\cf17 false};\par
00030 \par
00031     {\cf19 while}({\cf17 true})\{\par
00032         cout << MESSAGE_DUPLICATION_FINDER_TYPE_1 << {\cf23 '\\n'};\par
00033         cout << MESSAGE_DUPLICATION_FINDER_TYPE_2 << {\cf23 '\\n'};\par
00034         cout << MESSAGE_DUPLICATION_FINDER_TYPE_3 << {\cf23 '\\n'};\par
00035         {\cf18 int} x;\par
00036         cin >> x;\par
00037         {\cf19 if}(x == 1)\{\par
00038             use_duplication_finder_by_tool = {\cf17 true};\par
00039         \}{\cf19 else} {\cf19 if}(x == 2)\{\par
00040             use_duplication_finder_by_tool = {\cf17 false};\par
00041         \}{\cf19 else}\{\par
00042             cout << INVALID_CODE_DUPLICATION_FINDER << {\cf23 '\\n'};\par
00043             exit(0);\par
00044             {\cf19 continue};\par
00045         \}\par
00046         {\cf19 break};\par
00047     \}\par
00048 \par
00049     {\cf19 return} \{path,similarity,use_duplication_finder_by_tool\};\par
00050 \}\par
00051 \par
00052 {\cf18 void} Preprocessor::preprocess({\cf18 string} path, {\cf18 double} similarity, {\cf18 bool} use_duplication_finder_by_tool)\{\par
00053     cout << BREAKER_MESSAGE << {\cf23 '\\n'};\par
00054 \par
00055     Config *config = Config::config();\par
00056     {\cf18 string} base_path = config->getBasePath();\par
00057 \par
00058     {\cf18 string} command_rm_tmp = {\cf22 "rm -r -f "} + base_path + {\cf22 "/"};\par
00059     system(command_rm_tmp.c_str());\par
00060     FunctionBreaker function_breaker(path);\par
00061 \par
00062     cout << DUPLICATION_MESSAGE << {\cf23 '\\n'};\par
00063 \par
00064     {\cf19 if}(use_duplication_finder_by_tool)\{\par
00065         DuplicationFinderTool duplicationFinder(base_path,similarity);\par
00066         duplicationFinder.execute();\par
00067     \}{\cf19 else}\{\par
00068         DuplicationFinderDiff duplicationFinder(base_path,similarity);\par
00069         duplicationFinder.execute();\par
00070     \}\par
00071 \par
00072     save_current_run_params(path);\par
00073 \par
00074     cout << END_MESSAGE << {\cf23 '\\n'};\par
00075 \}\par
00076 \par
00077 Preprocessor::Preprocessor({\cf18 bool} force_preprocess)\{\par
00078     Config *config = Config::config();\par
00079     {\cf18 string} base_path = config->getBasePath();\par
00080     {\cf19 if}(force_preprocess || !Utils::does_file_exist(base_path+{\cf22 "/"}+CONFIG_PATH))\{\par
00081         {\cf17 auto} [path,similarity,use_duplication_finder_by_tool] = read_parameters();\par
00082         preprocess(path,similarity,use_duplication_finder_by_tool);\par
00083     \}\par
00084 \}\par
00085 \par
00086 Preprocessor::Preprocessor({\cf18 bool} force_preprocess, {\cf18 string} path, {\cf18 double} similarity)\{\par
00087     Config *config = Config::config();\par
00088     {\cf18 string} base_path = config->getBasePath();\par
00089     {\cf19 if}(force_preprocess || !Utils::does_file_exist(base_path+{\cf22 "/"}+CONFIG_PATH))\{\par
00090         preprocess(path,similarity,{\cf17 true});\par
00091     \}\par
00092 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/preprocessor.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor.hpp}
{\xe \v arkanjo/pre/preprocessor.hpp}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "parser.hpp"}\par
{\f2 #include "function_breaker.hpp"}\par
{\f2 #include "../base/config.hpp"}\par
{\f2 #include "duplication_finder_tool.hpp"}\par
{\f2 #include "duplication_finder_diff.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preprocessor.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preprocessor_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preprocessor_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Preprocessor}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing orchestrator. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Codebase preprocessing interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the preprocessing stage that prepares the codebase for efficient duplication detection by parsing, analyzing, and organizing source code into a queryable format.\par
Defines the preprocessor/setup step of the tool, where we do a heavy preprocessing of the input codebase to enable fast query response later. \par
}{
Definition in file {\b preprocessor.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
preprocessor.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor.hpp}
{\xe \v arkanjo/pre/preprocessor.hpp}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef PREPROCESSOR_HPP}\par
00014 {\cf21 #define PREPROCESSOR_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 {\cf21 #include "parser.hpp"}\par
00018 {\cf21 #include "function_breaker.hpp"}\par
00019 {\cf21 #include "../base/config.hpp"}\par
00020 {\cf21 #include "duplication_finder_tool.hpp"}\par
00021 {\cf21 #include "duplication_finder_diff.hpp"}\par
00022 {\cf17 using namespace }std;\par
00023 \par
00035 {\cf17 class }Preprocessor \{\par
00036         {\cf17 private}:\par
00037                 {\cf20 // User interaction messages}\par
00038                 {\cf18 string} PROJECT_PATH_MESSAGE = {\cf22 "Enter your project path:"};  \par
00039                 {\cf18 string} MINIMUM_SIMILARITY_MESSAGE = {\cf22 "Enter minimum similarity desired on using the tool:"};  \par
00040                 {\cf18 string} CONFIG_PATH = {\cf22 "config.txt"};                        \par
00041                 {\cf18 string} PATH_MESSAGE = {\cf22 "path of the current preprocess: "}; \par
00042                 {\cf18 string} TIME_MESSAGE = {\cf22 "Finished time: "};                  \par
00043 \par
00044                 {\cf20 // Processing stage messages}\par
00045                 {\cf18 string} INITIAL_MESSAGE = {\cf22 "Initiating Preprocessing"};      \par
00046                 {\cf18 string} BREAKER_MESSAGE = {\cf22 "Reading codebase... (this may take a while)"};  \par
00047                 {\cf18 string} DUPLICATION_MESSAGE = {\cf22 "Finding duplication in the codebase... (this may take a while)"};  \par
00048                 {\cf18 string} SAVING_MESSAGE = {\cf22 "Saving results..."};              \par
00049                 {\cf18 string} END_MESSAGE = {\cf22 "Finished preprocessing"};            \par
00050 \par
00051                 {\cf20 // Duplication finder selection messages}\par
00052                 {\cf18 string} MESSAGE_DUPLICATION_FINDER_TYPE_1 = {\cf22 "Enter the number of the duplication finder technique you want to use:"};\par
00053                 {\cf18 string} MESSAGE_DUPLICATION_FINDER_TYPE_2 = {\cf22 "1) NLP text similarity using gensim"};\par
00054                 {\cf18 string} MESSAGE_DUPLICATION_FINDER_TYPE_3 = {\cf22 "2) Count proportion of equal lines using diff command"};\par
00055                 {\cf18 string} INVALID_CODE_DUPLICATION_FINDER = {\cf22 "Valid options are '1' or '2' only. Stopping Program..."};\par
00056 \par
00064                 tuple<string,double,bool> read_parameters();\par
00065 \par
00070                 {\cf18 void} save_current_run_params({\cf18 string} path);\par
00071 \par
00078                 {\cf18 void} preprocess({\cf18 string} path, {\cf18 double} similarity, {\cf18 bool} use_duplication_finder_by_tool);\par
00079 \par
00080         {\cf17 public}:\par
00085                 Preprocessor({\cf18 bool} force_preprocess);\par
00086                 \par
00094                 Preprocessor({\cf18 bool} force_preprocess, {\cf18 string} path, {\cf18 double} similarity);\par
00095 \};\par
00096 \par
00097 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/preprocessor_main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor_main.cpp}
{\xe \v arkanjo/pre/preprocessor_main.cpp}
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "preprocessor.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for preprocessor_main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "preprocessor__main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:preprocessor_main.cpp}
{\xe \v preprocessor_main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b preprocessor_main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
preprocessor_main.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/preprocessor_main.cpp}
{\xe \v arkanjo/pre/preprocessor_main.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // As preprocessor is, in the moment, separated from orchestrator}\par
00002 {\cf20 // we define a main function to use it.}\par
00003 \par
00004 {\cf21 #include <bits/stdc++.h>} \par
00005 {\cf21 #include "preprocessor.hpp"}\par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00009     Preprocessor preprocessor({\cf17 true});\par
00010     {\cf19 return} 0;\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/rand/random_selector.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/rand/random_selector.cpp}
{\xe \v arkanjo/rand/random_selector.cpp}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "random_selector.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for random_selector.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "random__selector_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
random_selector.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/rand/random_selector.cpp}
{\xe \v arkanjo/rand/random_selector.cpp}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "random_selector.hpp"}\par
00002 \par
00003 Utils::COLOR Random_Selector::choose_text_color()\{\par
00004     Utils::COLOR ret = Utils::GRAY;\par
00005     {\cf19 if}(processed_results%2 == 0)\{\par
00006         ret = Utils::CYAN;\par
00007     \}\par
00008     {\cf19 return} ret;\par
00009 \}\par
00010 \par
00011 {\cf18 string} Random_Selector::format_path_message_in_pair(Path path)\{\par
00012     {\cf18 string} ret = path.build_relative_path() + BETWEEN_RELATIVE_AND_FUNCTION_NAME + path.build_function_name();\par
00013     {\cf19 return} ret;\par
00014 \}\par
00015 \par
00016 {\cf18 bool} Random_Selector::is_valid_pair(tuple<double,Path,Path> path_pair)\{\par
00017     {\cf17 auto} [similarity,path1,path2] = path_pair;\par
00018     {\cf19 if}(similarity < minimum_similarity) {\cf19 return} {\cf17 false};\par
00019     {\cf19 if}(similarity > maximum_similarity) {\cf19 return} {\cf17 false};\par
00020     {\cf19 return} {\cf17 true};\par
00021 \}\par
00022 \par
00023 vector<tuple<double,Path,Path>> Random_Selector::get_similarity_pairs_filtered()\{\par
00024     {\cf17 auto} path_pairs = similarity_table->get_all_path_pairs_and_similarity_sorted_by_similarity();\par
00025     vector<tuple<double,Path,Path>> ret;\par
00026     {\cf19 for}({\cf17 auto} path_pair : path_pairs)\{\par
00027         {\cf19 if}(is_valid_pair(path_pair))\{\par
00028             ret.push_back(path_pair);\par
00029         \}\par
00030     \}\par
00031     {\cf19 return} ret;\par
00032 \}\par
00033 \par
00034 vector<tuple<double,Path,Path>> Random_Selector::make_random_selection(vector<tuple<double,Path,Path>> path_pairs)\{\par
00035     shuffle(path_pairs.begin(),path_pairs.end(), rng);\par
00036     {\cf19 while}( {\cf18 int}(path_pairs.size()) > maximum_quantity)\{\par
00037         path_pairs.pop_back();\par
00038     \}\par
00039     {\cf19 return} path_pairs;\par
00040 \}\par
00041 \par
00042 {\cf18 void} Random_Selector::print_path_pair(tuple<double,Path,Path> path_pair)\{\par
00043     {\cf17 auto} [similarity,path1,path2] = path_pair;\par
00044     {\cf18 string} line;\par
00045     line += START_LINE_COMPARATION_PRINT;\par
00046     line += format_path_message_in_pair(path1);\par
00047     line += BETWEEN_TWO_FUNCTION;\par
00048     line += format_path_message_in_pair(path2);\par
00049     line += SIMILARITY_MESSAGE;\par
00050     line += to_string(similarity);\par
00051     Utils::COLOR color = choose_text_color();\par
00052     cout << Utils::format_colored_message(line,color) << {\cf23 '\\n'};\par
00053 \}\par
00054 \par
00055 {\cf18 void} Random_Selector::print_path_pairs(vector<tuple<double,Path,Path>> path_pairs)\{\par
00056     {\cf19 for}({\cf17 auto} path_pair : path_pairs)\{\par
00057         print_path_pair(path_pair);\par
00058     \}\par
00059 \}\par
00060 \par
00061 Random_Selector::Random_Selector(\par
00062         Similarity_Table *_similarity_table,\par
00063         {\cf18 double} _minimum_similarity,\par
00064         {\cf18 double} _maximum_similarity,\par
00065         {\cf18 double} _maximum_quantity\par
00066         )\{\par
00067     similarity_table = _similarity_table;\par
00068     similarity_table->update_similarity(0);\par
00069     minimum_similarity = _minimum_similarity;\par
00070     maximum_similarity = _maximum_similarity;\par
00071     maximum_quantity = _maximum_quantity;\par
00072 \par
00073     {\cf17 auto} path_pairs = get_similarity_pairs_filtered();\par
00074     path_pairs = make_random_selection(path_pairs);\par
00075     print_path_pairs(path_pairs);\par
00076 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/rand/random_selector.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/rand/random_selector.hpp}
{\xe \v arkanjo/rand/random_selector.hpp}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random selection of similar code pairs. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../base/path.hpp"}\par
{\f2 #include "../base/utils.hpp"}\par
{\f2 #include "../base/similarity_table.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for random_selector.hpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "random__selector_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "random__selector_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Random_Selector}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random pair selector for similar code segments. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Random selection of similar code pairs. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides functionality to randomly select and display pairs of similar code segments within specified similarity ranges.\par
The Random Selector random selects a set of duplicated functions pairs enables to set the interval of acceptable similarity probability and the number of functions to be selected. \par
}{
Definition in file {\b random_selector.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
random_selector.hpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/rand/random_selector.hpp}
{\xe \v arkanjo/rand/random_selector.hpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 \par
00013 {\cf21 #ifndef RANDOM_SELECTOR_HPP}\par
00014 {\cf21 #define RANDOM_SELECTOR_HPP}\par
00015 \par
00016 {\cf21 #include <bits/stdc++.h>} \par
00017 {\cf21 #include "../base/path.hpp"}\par
00018 {\cf21 #include "../base/utils.hpp"}\par
00019 {\cf21 #include "../base/similarity_table.hpp"}\par
00020 {\cf17 using namespace }std;\par
00021 \par
00029 {\cf17 class }Random_Selector \{\par
00030         {\cf18 string} START_LINE_COMPARATION_PRINT = {\cf22 "Functions: "};          \par
00031         {\cf18 string} BETWEEN_TWO_FUNCTION = {\cf22 " AND "};                       \par
00032         {\cf18 string} BETWEEN_RELATIVE_AND_FUNCTION_NAME = {\cf22 "::"};            \par
00033         {\cf18 string} SIMILARITY_MESSAGE = {\cf22 ". Similarity: "};                \par
00034         \par
00035         Similarity_Table *similarity_table;                          \par
00036         {\cf18 double} minimum_similarity;                                   \par
00037         {\cf18 double} maximum_similarity;                                   \par
00038         {\cf18 double} maximum_quantity;                                     \par
00039         \par
00040         {\cf17 const} {\cf18 int} seed = 123456789;                                  \par
00041         mt19937 rng = mt19937(seed);                                 \par
00042         \par
00043         {\cf18 int} processed_results = 0;                                   \par
00044 \par
00049         Utils::COLOR choose_text_color();\par
00050 \par
00056         {\cf18 string} format_path_message_in_pair(Path path);\par
00057 \par
00063         {\cf18 bool} is_valid_pair(tuple<double,Path,Path> path_pair);\par
00064 \par
00069         vector<tuple<double,Path,Path>> get_similarity_pairs_filtered();\par
00070 \par
00076         vector<tuple<double,Path,Path>> make_random_selection(vector<tuple<double,Path,Path>> path_pairs);\par
00077 \par
00082         {\cf18 void} print_path_pair(tuple<double,Path,Path> path_pair);\par
00083 \par
00088         {\cf18 void} print_path_pairs(vector<tuple<double,Path,Path>> path_pairs);\par
00089 \par
00090         {\cf17 public}:\par
00098                 Random_Selector(\par
00099                         Similarity_Table *_similarity_table,\par
00100                         {\cf18 double} _minimum_similarity,\par
00101                         {\cf18 double} _maximum_similarity,\par
00102                         {\cf18 double} _maximum_quantity\par
00103                 );\par
00104 \};\par
00105 \par
00106 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/check_sorted.c}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n}-1;i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ok}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:check_sorted.c}
{\xe \v check_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b check_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ok\:check_sorted.c}
{\xe \v check_sorted.c\:ok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ok}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b check_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
check_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/check_sorted.c}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 bool} ok = {\cf17 true};\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00004         ok &= v[i] <= v[i+1];\par
00005     \}\par
00006     {\cf19 return} ok;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_max.c}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_max.c}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_max.c}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mx}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_max.c}
{\xe \v find_max.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_max.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mx\:find_max.c}
{\xe \v find_max.c\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mx}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_max.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_max.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_max.c}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mx = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mx > v[i])\{\par
00005             mx = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mx;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_min.c}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_min.c}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_min.c}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=1;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b mn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_min.c}
{\xe \v find_min.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_min.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mn\:find_min.c}
{\xe \v find_min.c\:mn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} mn}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b find_min.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_min.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_min.c}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} mn = v[0];\par
00003     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00004         {\cf19 if}(mn > v[i])\{\par
00005             mn = i;\par
00006         \}\par
00007     \}\par
00008     {\cf19 return} mn;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/find_sum.c}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/find_sum.c}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/find_sum.c}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b sum}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:find_sum.c}
{\xe \v find_sum.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b find_sum.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v sum\:find_sum.c}
{\xe \v find_sum.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} sum}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b find_sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
find_sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/find_sum.c}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} sum = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         sum += v[i];\par
00005     \}\par
00006     {\cf19 return} sum;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++) = i\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for () = i}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013 \par
00014     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00015         printf({\cf22 "%d "},p[i]);\par
00016     \}\par
00017     printf({\cf22 "\\n"});\par
00018 \par
00019     free(p);\par
00020     {\cf19 return} 0;\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013 \par
00014 \par
00015     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00016         printf({\cf22 "%d "},p[i]);\par
00017     \}\par
00018     printf({\cf22 "\\n"});\par
00019 \par
00020     free(p);\par
00021     {\cf19 return} 0;\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013     \par
00014     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00015         printf({\cf22 "%d "},p[i]);\par
00016     \}\par
00017     printf({\cf22 "\\n"});\par
00018     \par
00019     free(p);\par
00020     {\cf19 return} 0;\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_of_median(v,n);\par
00013     \par
00014 \par
00015     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00016         printf({\cf22 "%d "},p[i]);\par
00017     \}\par
00018     printf({\cf22 "\\n"});\par
00019     \par
00020     free(p);\par
00021     {\cf19 return} 0;\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p1})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p2})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p1} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p2} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p1} )}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p2} )}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p1\:main.c}
{\xe \v main.c\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p1 = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v p2\:main.c}
{\xe \v main.c\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p2 = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00013     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00014 \par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         printf({\cf22 "%d "},p1[i]);\par
00018     \}\par
00019     printf({\cf22 "\\n"});\par
00020 \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         printf({\cf22 "%d "},p2[i]);\par
00023     \}\par
00024     printf({\cf22 "\\n"});\par
00025 \par
00026     free(p1);\par
00027     free(p2);\par
00028     {\cf19 return} 0;\par
00029 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b sum_of_array}({\b v},5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b sum_of_array2}(5,{\b v})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b sum_of_vector}({\b v},5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b sum_of_array}({\b v},5)}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b sum_of_array2}(5,{\b v})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b sum_of_vector}({\b v},5)}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = sum_of_array(v,5);\par
00011     {\cf18 int} D = sum_of_array2(5,v);\par
00012     {\cf18 int} E = sum_of_vector(v,5);\par
00013     {\cf19 return} 0;\par
00014 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b B} = 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b sum_of_two_elements}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b sum}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b sum_of_pair}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v B\:main.c}
{\xe \v main.c\:B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int B = 4}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b main.c}.}\par
}
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b sum_of_two_elements}(A,{\b B})}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b sum}(A,{\b B})}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b sum_of_pair}(A,{\b B})}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} A = 5;\par
00003     {\cf18 int} B = 4;\par
00004 \par
00005     {\cf18 int} C = sum_of_two_elements(A,B);\par
00006     {\cf18 int} D = sum(A,B);\par
00007     {\cf18 int} E = sum_of_pair(A,B);\par
00008     {\cf19 return} 0;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p1})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p2})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p1} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p2} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p1} )}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p2} )}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p1\:main.c}
{\xe \v main.c\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p1 = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v p2\:main.c}
{\xe \v main.c\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p2 = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00013     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00014     \par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         printf({\cf22 "%d "},p1[i]);\par
00018     \}\par
00019     printf({\cf22 "\\n"});\par
00020     \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         printf({\cf22 "%d "},p2[i]);\par
00023     \}\par
00024     printf({\cf22 "\\n"});\par
00025     \par
00026     free(p1);\par
00027     free(p2);\par
00028     {\cf19 return} 0;\par
00029 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/main.c}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013 \par
00014     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00015         printf({\cf22 "%d "},p[i]);\par
00016     \}\par
00017     printf({\cf22 "\\n"});\par
00018 \par
00019     free(p);\par
00020     {\cf19 return} 0;\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/main.c}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013 \par
00014 \par
00015     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00016         printf({\cf22 "%d "},p[i]);\par
00017     \}\par
00018     printf({\cf22 "\\n"});\par
00019 \par
00020     free(p);\par
00021     {\cf19 return} 0;\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/code.c/main.c}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_equal_code/source.c/main.c}
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/code.c/main.c}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b find_min}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b find_max}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b find_sum}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_sorted} = {\b check_sorted}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b find_min}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b find_max}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b find_sum}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v is_sorted\:main.c}
{\xe \v main.c\:is_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_sorted = {\b check_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_shuffled_functions/source.c/main.c}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = find_min(v,n);\par
00011     {\cf18 int} D = find_max(v,n);\par
00012     {\cf18 int} E = find_sum(v,n);\par
00013     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00014     {\cf19 return} 0;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/main.c}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00013     \par
00014     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00015         printf({\cf22 "%d "},p[i]);\par
00016     \}\par
00017     printf({\cf22 "\\n"});\par
00018     \par
00019     free(p);\par
00020     {\cf19 return} 0;\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p} )}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/main.c}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p = sorted_by_distance_of_median(v,n);\par
00013     \par
00014 \par
00015     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00016         printf({\cf22 "%d "},p[i]);\par
00017     \}\par
00018     printf({\cf22 "\\n"});\par
00019     \par
00020     free(p);\par
00021     {\cf19 return} 0;\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p1})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p2})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p1} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p2} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p1} )}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p2} )}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p1\:main.c}
{\xe \v main.c\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p1 = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v p2\:main.c}
{\xe \v main.c\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p2 = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/main.c}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00013     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00014 \par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         printf({\cf22 "%d "},p1[i]);\par
00018     \}\par
00019     printf({\cf22 "\\n"});\par
00020 \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         printf({\cf22 "%d "},p2[i]);\par
00023     \}\par
00024     printf({\cf22 "\\n"});\par
00025 \par
00026     free(p1);\par
00027     free(p2);\par
00028     {\cf19 return} 0;\par
00029 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b sum_of_array}({\b v},5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b sum_of_array2}(5,{\b v})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b sum_of_vector}({\b v},5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b sum_of_array}({\b v},5)}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b sum_of_array2}(5,{\b v})}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b sum_of_vector}({\b v},5)}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 5}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[4] = 1}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/main.c}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[5];\par
00004     v[0] = 1;\par
00005     v[1] = 2;\par
00006     v[2] = 3;\par
00007     v[3] = 4;\par
00008     v[4] = 5;\par
00009     {\cf18 int} n = 5;\par
00010     {\cf18 int} C = sum_of_array(v,5);\par
00011     {\cf18 int} D = sum_of_array2(5,v);\par
00012     {\cf18 int} E = sum_of_vector(v,5);\par
00013     {\cf19 return} 0;\par
00014 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b B} = 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b C} = {\b sum_of_two_elements}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b D} = {\b sum}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b E} = {\b sum_of_pair}(A,{\b B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v B\:main.c}
{\xe \v main.c\:B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int B = 4}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b main.c}.}\par
}
{\xe \v C\:main.c}
{\xe \v main.c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int C = {\b sum_of_two_elements}(A,{\b B})}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b main.c}.}\par
}
{\xe \v D\:main.c}
{\xe \v main.c\:D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int D = {\b sum}(A,{\b B})}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b main.c}.}\par
}
{\xe \v E\:main.c}
{\xe \v main.c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int E = {\b sum_of_pair}(A,{\b B})}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/main.c}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} A = 5;\par
00003     {\cf18 int} B = 4;\par
00004 \par
00005     {\cf18 int} C = sum_of_two_elements(A,B);\par
00006     {\cf18 int} D = sum(A,B);\par
00007     {\cf18 int} E = sum_of_pair(A,B);\par
00008     {\cf19 return} 0;\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b printf} ("\\n")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p1})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b p2})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v} [0] = 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n} = 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p1} = {\b sorted_by_distance_to_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p2} = {\b sorted_by_distance_of_median}({\b v},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:main.c}
{\xe \v main.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p1} )}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:main.c}
{\xe \v main.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b p2} )}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printf\:main.c}
{\xe \v main.c\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
printf ("\\n" )}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v n\:main.c}
{\xe \v main.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 6}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b main.c}.}\par
}
{\xe \v p1\:main.c}
{\xe \v main.c\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p1 = {\b sorted_by_distance_to_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b main.c}.}\par
}
{\xe \v p2\:main.c}
{\xe \v main.c\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* p2 = {\b sorted_by_distance_of_median}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b main.c}.}\par
}
{\xe \v return\:main.c}
{\xe \v main.c\:return}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
return}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b main.c}.}\par
}
{\xe \v v\:main.c}
{\xe \v main.c\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v[5] = 5}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/main.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/main.c}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} v[6];\par
00004     v[0] = 5;\par
00005     v[1] = 3;\par
00006     v[2] = 4;\par
00007     v[3] = 1;\par
00008     v[4] = 2;\par
00009     v[5] = 1;\par
00010     {\cf18 int} n = 6;\par
00011 \par
00012     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00013     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00014     \par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         printf({\cf22 "%d "},p1[i]);\par
00018     \}\par
00019     printf({\cf22 "\\n"});\par
00020     \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         printf({\cf22 "%d "},p2[i]);\par
00023     \}\par
00024     printf({\cf22 "\\n"});\par
00025     \par
00026     free(p1);\par
00027     free(p2);\par
00028     {\cf19 return} 0;\par
00029 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b dist_to_median}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_dist_to_median.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} dist_to_median}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b compute_dist_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         dist_to_median[i] = v[i]-median;\par
00006         {\cf19 if}(dist_to_median[i] < 0)\{\par
00007             dist_to_median[i] *= -1;\par
00008         \}\par
00009     \}\par
00010     {\cf19 return} dist_to_median;\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b dist_to_median}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_dist_to_median.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} dist_to_median}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b compute_dist_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         dist_to_median[i] = v[i]-median;\par
00006         {\cf19 if}(dist_to_median[i] < 0)\{\par
00007             dist_to_median[i] *= -1;\par
00008         \}\par
00009     \}\par
00010     {\cf19 return} dist_to_median;\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b dist_to_median}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_dist_to_median.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} dist_to_median}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b compute_dist_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         dist_to_median[i] = v[i]-median;\par
00006         {\cf19 if}(dist_to_median[i] < 0)\{\par
00007             dist_to_median[i] *= -1;\par
00008         \}\par
00009     \}\par
00010     {\cf19 return} dist_to_median;\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b dist_to_median}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_dist_to_median.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:compute_dist_to_median.c}
{\xe \v compute_dist_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} dist_to_median}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b compute_dist_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_dist_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_dist_to_median.c}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         dist_to_median[i] = v[i]-median;\par
00006         {\cf19 if}(dist_to_median[i] < 0)\{\par
00007             dist_to_median[i] *= -1;\par
00008         \}\par
00009     \}\par
00010     {\cf19 return} dist_to_median;\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_p.c}
{\xe \v compute_p.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_p.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v p\:compute_p.c}
{\xe \v compute_p.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_p.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         p[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00011                 {\cf18 int} aux = p[j];\par
00012                 p[j] = p[j+1];\par
00013                 p[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} p;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_p.c}
{\xe \v compute_p.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_p.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v p\:compute_p.c}
{\xe \v compute_p.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_p.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         p[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00011                 {\cf18 int} aux = p[j];\par
00012                 p[j] = p[j+1];\par
00013                 p[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} p;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_p.c}
{\xe \v compute_p.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_p.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v p\:compute_p.c}
{\xe \v compute_p.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_p.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_p.c}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         p[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00011                 {\cf18 int} aux = p[j];\par
00012                 p[j] = p[j+1];\par
00013                 p[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} p;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_p.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_p.c}
{\xe \v compute_p.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_p.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v p\:compute_p.c}
{\xe \v compute_p.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_p.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_p.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_p.c}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         p[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00011                 {\cf18 int} aux = p[j];\par
00012                 p[j] = p[j+1];\par
00013                 p[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} p;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b v_sorted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_v_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v v_sorted\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} v_sorted}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_v_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         v_sorted[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00011                 {\cf18 int} aux = v_sorted[j];\par
00012                 v_sorted[j] = v_sorted[j+1];\par
00013                 v_sorted[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} v_sorted;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b v_sorted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_v_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v v_sorted\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} v_sorted}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_v_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         v_sorted[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00011                 {\cf18 int} aux = v_sorted[j];\par
00012                 v_sorted[j] = v_sorted[j+1];\par
00013                 v_sorted[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} v_sorted;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b v_sorted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_v_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v v_sorted\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} v_sorted}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_v_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         v_sorted[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00011                 {\cf18 int} aux = v_sorted[j];\par
00012                 v_sorted[j] = v_sorted[j+1];\par
00013                 v_sorted[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} v_sorted;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b v_sorted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b compute_v_sorted.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v v_sorted\:compute_v_sorted.c}
{\xe \v compute_v_sorted.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} v_sorted}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b compute_v_sorted.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compute_v_sorted.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/compute_v_sorted.c}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00003 \par
00004     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00005         v_sorted[i] = i;\par
00006     \}\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00010             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00011                 {\cf18 int} aux = v_sorted[j];\par
00012                 v_sorted[j] = v_sorted[j+1];\par
00013                 v_sorted[j+1] = aux;\par
00014             \}\par
00015         \}\par
00016     \}\par
00017     {\cf19 return} v_sorted;\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum.c}
{\xe \v sum.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} ret = a+b\par
}
{
Definition at line {\b 3} of file {\b sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = a+b;\par
00003     {\cf19 return} ret;\par
00004 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} a+b;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum.c}
{\xe \v sum.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} ret = a+b\par
}
{
Definition at line {\b 3} of file {\b sum.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum.c}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = a+b;\par
00003     {\cf19 return} ret;\par
00004 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum.c}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} a+b;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_array({\cf18 int} array[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_array.c}
{\xe \v sum_of_array.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_array.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_array.c}
{\xe \v sum_of_array.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_array.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         ret += array[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_array({\cf18 int} array[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_array.c}
{\xe \v sum_of_array.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_array.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_array.c}
{\xe \v sum_of_array.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_array.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array.c}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         ret += array[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array2.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_array2({\cf18 int} n, {\cf18 int} array[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_array2.c}
{\xe \v sum_of_array2.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_array2.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_array2.c}
{\xe \v sum_of_array2.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_array2.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array2.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         ret += array[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array2.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_array2({\cf18 int} n, {\cf18 int} array[])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_array2.c}
{\xe \v sum_of_array2.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_array2.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_array2.c}
{\xe \v sum_of_array2.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_array2.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_array2.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_array2.c}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00004         ret += array[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left_hand + right_hand;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left_hand + right_hand;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left_hand + right_hand;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_two_elements.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_two_elements.c}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left_hand + right_hand;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_vector.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_vector({\cf18 int} vector[], {\cf18 int} size_of_vector)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=size_of_vector-1;i >=0;i--)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_vector.c}
{\xe \v sum_of_vector.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for (int i = {\f2 size_of_vector-1;\~ i\~ >=\~ 0;\~ i--})}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_vector.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_vector.c}
{\xe \v sum_of_vector.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_vector.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_vector.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = size_of_vector-1; i >= 0; i--)\{\par
00004         ret += vector[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_vector.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_vector({\cf18 int} vector[], {\cf18 int} size_of_vector)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=size_of_vector-1;i >=0;i--)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b return} {\b ret}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sum_of_vector.c}
{\xe \v sum_of_vector.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for (int i = {\f2 size_of_vector-1;\~ i\~ >=\~ 0;\~ i--})}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b sum_of_vector.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ret\:sum_of_vector.c}
{\xe \v sum_of_vector.c\:ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} ret}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sum_of_vector.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_vector.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_different_functions_same_logic.c/sum_of_vector.c}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} ret = 0;\par
00003     {\cf19 for}({\cf18 int} i = size_of_vector-1; i >= 0; i--)\{\par
00004         ret += vector[i];\par
00005     \}\par
00006     {\cf19 return} ret;\par
00007 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_pair.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_pair({\cf18 int} left, {\cf18 int} right)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_pair.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left+right;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_pair.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} sum_of_pair({\cf18 int} left, {\cf18 int} right)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sum_of_pair.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_equal_functions.c/sum_of_pair.c}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf19 return} left+right;\par
00003 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b v_sorted} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* v_sorted = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} median;\par
00004     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00007 \par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022 \par
00023     median = v[v_sorted[n/2]];\par
00024 \par
00025     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00026         dist_to_median[i] = v[i]-median;\par
00027         {\cf19 if}(dist_to_median[i] < 0)\par
00028             dist_to_median[i] = -dist_to_median[i];\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00032         p[i] = i;\par
00033 \par
00034     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00035         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00036             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00037                 {\cf18 int} aux = p[j];\par
00038                 p[j] = p[j+1];\par
00039                 p[j+1] = aux;\par
00040             \}\par
00041         \}\par
00042     \}\par
00043 \par
00044     free(dist_to_median);\par
00045     free(v_sorted);\par
00046     {\cf19 return} p;\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b compute_p}({\b dist_to_median},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v_sorted} = {\b compute_v_sorted}({\b v},{\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dist_to_median}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} *v_sorted\par
}
{
Definition at line {\b 3} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = {\b compute_p}({\b dist_to_median},{\b n})}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v_sorted = {\b compute_v_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted;\par
00003     {\cf18 int} *dist_to_median;\par
00004     {\cf18 int} *p;\par
00005     {\cf18 int} median;\par
00006 \par
00007     v_sorted = compute_v_sorted(v,n);\par
00008     median = v[v_sorted[n/2]];\par
00009     dist_to_median = compute_dist_to_median(v,n,median);\par
00010     p = compute_p(dist_to_median,n);\par
00011 \par
00012     free(v_sorted);\par
00013     free(dist_to_median);\par
00014     {\cf19 return} p;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b v_sorted} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* v_sorted = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} median;\par
00004     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00007 \par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022 \par
00023     median = v[v_sorted[n/2]];\par
00024 \par
00025     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00026         dist_to_median[i] = v[i]-median;\par
00027         {\cf19 if}(dist_to_median[i] < 0)\par
00028             dist_to_median[i] = -dist_to_median[i];\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00032         p[i] = i;\par
00033 \par
00034     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00035         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00036             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00037                 {\cf18 int} aux = p[j];\par
00038                 p[j] = p[j+1];\par
00039                 p[j+1] = aux;\par
00040             \}\par
00041         \}\par
00042     \}\par
00043 \par
00044     free(dist_to_median);\par
00045     free(v_sorted);\par
00046     {\cf19 return} p;\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b v_sorted} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* v_sorted = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/source.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} median;\par
00004     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00007 \par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022 \par
00023     median = v[v_sorted[n/2]];\par
00024 \par
00025     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00026         dist_to_median[i] = v[i]-median;\par
00027         {\cf19 if}(dist_to_median[i] < 0)\par
00028             dist_to_median[i] = -dist_to_median[i];\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00032         p[i] = i;\par
00033 \par
00034     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00035         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00036             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00037                 {\cf18 int} aux = p[j];\par
00038                 p[j] = p[j+1];\par
00039                 p[j+1] = aux;\par
00040             \}\par
00041         \}\par
00042     \}\par
00043 \par
00044     free(dist_to_median);\par
00045     free(v_sorted);\par
00046     {\cf19 return} p;\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b compute_p}({\b dist_to_median},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v_sorted} = {\b compute_v_sorted}({\b v},{\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dist_to_median}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} *v_sorted\par
}
{
Definition at line {\b 3} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = {\b compute_p}({\b dist_to_median},{\b n})}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v_sorted = {\b compute_v_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted;\par
00003     {\cf18 int} *dist_to_median;\par
00004     {\cf18 int} *p;\par
00005     {\cf18 int} median;\par
00006 \par
00007     v_sorted = compute_v_sorted(v,n);\par
00008     median = v[v_sorted[n/2]];\par
00009     dist_to_median = compute_dist_to_median(v,n,median);\par
00010     p = compute_p(dist_to_median,n);\par
00011 \par
00012     free(v_sorted);\par
00013     free(dist_to_median);\par
00014     {\cf19 return} p;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b v_sorted} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_of_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_of_median.c}
{\xe \v sorted_by_distance_of_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* v_sorted = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_of_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_of_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_of_median.c}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} median;\par
00004     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00007 \par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022 \par
00023     median = v[v_sorted[n/2]];\par
00024 \par
00025     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00026         dist_to_median[i] = v[i]-median;\par
00027         {\cf19 if}(dist_to_median[i] < 0)\par
00028             dist_to_median[i] = -dist_to_median[i];\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00032         p[i] = i;\par
00033 \par
00034     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00035         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00036             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00037                 {\cf18 int} aux = p[j];\par
00038                 p[j] = p[j+1];\par
00039                 p[j+1] = aux;\par
00040             \}\par
00041         \}\par
00042     \}\par
00043 \par
00044     free(dist_to_median);\par
00045     free(v_sorted);\par
00046     {\cf19 return} p;\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b compute_p}({\b dist_to_median},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v_sorted} = {\b compute_v_sorted}({\b v},{\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dist_to_median}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} *v_sorted\par
}
{
Definition at line {\b 3} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = {\b compute_p}({\b dist_to_median},{\b n})}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v_sorted = {\b compute_v_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted;\par
00003     {\cf18 int} *dist_to_median;\par
00004     {\cf18 int} *p;\par
00005     {\cf18 int} median;\par
00006 \par
00007     v_sorted = compute_v_sorted(v,n);\par
00008     median = v[v_sorted[n/2]];\par
00009     dist_to_median = compute_dist_to_median(v,n,median);\par
00010     p = compute_p(dist_to_median,n);\par
00011 \par
00012     free(v_sorted);\par
00013     free(dist_to_median);\par
00014     {\cf19 return} p;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b djfasuhfhs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v djfasuhfhs\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:djfasuhfhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define djfasuhfhs}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     fddfkjdjfk jkdsklfjalksd \\\par
    fdsajfdsjkafjkl\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003 {\cf21     #define \{djfasuhfhs fddfkjdjfk jkdsklfjalksd \\}\par
00004 {\cf21     fdsajfdsjkafjkl }{\cf20 // fdsajfkldsaf /* \\}\par
00005 {\cf20     fsadjfkaksjdfjk}\par
00006 \par
00007     {\cf20 // fdjsff\{ weh /* fsdhusgh wekew */ fsajdfjsad // \\}\par
00008 {\cf20     fdsajfjkdsf " fdsafdsjakfj */ /* asdfjkdsakf //\\}\par
00009 {\cf20     fsdfjdskjkf // " sjdfkjsd '"'fkljasdf #define}\par
00010 \par
00011     {\cf20 /*fsd fj \}// sadf j #define sdjafkjds "f jdsfj "fsdajkjf '"' fa}\par
00012 {\cf20     sdjafkljdsaj h*/}\par
00013 \par
00014     {\cf18 char} D = {\cf23 '"'};\par
00015 \par
00016     printf({\cf22 "%d, dsfj hushu \\" /**/ #define // fdahu "},3);\par
00017 \par
00018     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00019     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00020     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00021     {\cf18 int} median;\par
00022 \par
00023     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00024         v_sorted[i] = i;\par
00025     \}\par
00026 \par
00027     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00028         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00029             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00030                 {\cf18 int} aux = v_sorted[j];\par
00031                 v_sorted[j] = v_sorted[j+1];\par
00032                 v_sorted[j+1] = aux;\par
00033             \}\par
00034         \}\par
00035     \}\par
00036 \par
00037     median = v[v_sorted[n/2]];\par
00038         \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         dist_to_median[i] = v[i]-median;\par
00041         {\cf19 if}(dist_to_median[i] < 0)\{\par
00042             dist_to_median[i] *= -1;\par
00043         \}\par
00044     \}\par
00045 \par
00046     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00047         p[i] = i;\par
00048     \}\par
00049 \par
00050     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00051         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00052             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00053                 {\cf18 int} aux = p[j];\par
00054                 p[j] = p[j+1];\par
00055                 p[j+1] = aux;\par
00056             \}\par
00057         \}\par
00058     \}\par
00059 \par
00060     free(v_sorted);\par
00061     free(dist_to_median);\par
00062     {\cf19 return} p;\par
00063 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/current/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/header/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/big.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = {\b compute_p}({\b dist_to_median},{\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b v_sorted} = {\b compute_v_sorted}({\b v},{\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dist_to_median}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
    {\cf18 int} *v_sorted\par
}
{
Definition at line {\b 3} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = {\b compute_p}({\b dist_to_median},{\b n})}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v v_sorted\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
v_sorted = {\b compute_v_sorted}({\b v},{\b n})}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_big_functions_against_small/small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002     {\cf18 int} *v_sorted;\par
00003     {\cf18 int} *dist_to_median;\par
00004     {\cf18 int} *p;\par
00005     {\cf18 int} median;\par
00006 \par
00007     v_sorted = compute_v_sorted(v,n);\par
00008     median = v[v_sorted[n/2]];\par
00009     dist_to_median = compute_dist_to_median(v,n,median);\par
00010     p = compute_p(dist_to_median,n);\par
00011 \par
00012     free(v_sorted);\par
00013     free(dist_to_median);\par
00014     {\cf19 return} p;\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_multiple_file_similiar_function/code.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b djfasuhfhs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v djfasuhfhs\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:djfasuhfhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define djfasuhfhs}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     fddfkjdjfk jkdsklfjalksd \\\par
    fdsajfdsjkafjkl\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_big_function_against_small.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003 {\cf21     #define \{djfasuhfhs fddfkjdjfk jkdsklfjalksd \\}\par
00004 {\cf21     fdsajfdsjkafjkl }{\cf20 // fdsajfkldsaf /* \\}\par
00005 {\cf20     fsadjfkaksjdfjk}\par
00006 \par
00007     {\cf20 // fdjsff\{ weh /* fsdhusgh wekew */ fsajdfjsad // \\}\par
00008 {\cf20     fdsajfjkdsf " fdsafdsjakfj */ /* asdfjkdsakf //\\}\par
00009 {\cf20     fsdfjdskjkf // " sjdfkjsd '"'fkljasdf #define}\par
00010 \par
00011     {\cf20 /*fsd fj \}// sadf j #define sdjafkjds "f jdsfj "fsdajkjf '"' fa}\par
00012 {\cf20     sdjafkljdsaj h*/}\par
00013 \par
00014     {\cf18 char} D = {\cf23 '"'};\par
00015 \par
00016     printf({\cf22 "%d, dsfj hushu \\" /**/ #define // fdahu "},3);\par
00017 \par
00018     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00019     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00020     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00021     {\cf18 int} median;\par
00022 \par
00023     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00024         v_sorted[i] = i;\par
00025     \}\par
00026 \par
00027     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00028         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00029             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00030                 {\cf18 int} aux = v_sorted[j];\par
00031                 v_sorted[j] = v_sorted[j+1];\par
00032                 v_sorted[j+1] = aux;\par
00033             \}\par
00034         \}\par
00035     \}\par
00036 \par
00037     median = v[v_sorted[n/2]];\par
00038         \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         dist_to_median[i] = v[i]-median;\par
00041         {\cf19 if}(dist_to_median[i] < 0)\{\par
00042             dist_to_median[i] *= -1;\par
00043         \}\par
00044     \}\par
00045 \par
00046     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00047         p[i] = i;\par
00048     \}\par
00049 \par
00050     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00051         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00052             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00053                 {\cf18 int} aux = p[j];\par
00054                 p[j] = p[j+1];\par
00055                 p[j+1] = aux;\par
00056             \}\par
00057         \}\par
00058     \}\par
00059 \par
00060     free(v_sorted);\par
00061     free(dist_to_median);\par
00062     {\cf19 return} p;\par
00063 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b for} (int i=0;i< {\b n};i++)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b v_sorted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b free} ({\b dist_to_median})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b dist_to_median} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b p} = (int*)malloc({\b n}*sizeof(int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b median} = {\b v}[{\b v_sorted}[{\b n}/2]]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v for\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:for}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
for ()}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b dist_to_median} )}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
free ({\b v_sorted} )}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dist_to_median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* dist_to_median = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v median\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
median = {\b v}[{\b v_sorted}[{\b n}/2]]}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b sorted_by_distance_to_median.c}.}\par
}
{\xe \v p\:sorted_by_distance_to_median.c}
{\xe \v sorted_by_distance_to_median.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b return} p = (int*)malloc({\b n}*sizeof(int))}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b sorted_by_distance_to_median.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sorted_by_distance_to_median.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\xe \v arkanjo/tests/e2e/expected/tmp/source/test_same_file_similar_functions.c/sorted_by_distance_to_median.c}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \{\par
00002 \par
00003     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00004     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00005     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00006     {\cf18 int} median;\par
00007 \par
00008     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00009         v_sorted[i] = i;\par
00010     \}\par
00011 \par
00012     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00013         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00014             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00015                 {\cf18 int} aux = v_sorted[j];\par
00016                 v_sorted[j] = v_sorted[j+1];\par
00017                 v_sorted[j+1] = aux;\par
00018             \}\par
00019         \}\par
00020     \}\par
00021 \par
00022     median = v[v_sorted[n/2]];\par
00023         \par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         dist_to_median[i] = v[i]-median;\par
00026         {\cf19 if}(dist_to_median[i] < 0)\{\par
00027             dist_to_median[i] *= -1;\par
00028         \}\par
00029     \}\par
00030 \par
00031     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00032         p[i] = i;\par
00033     \}\par
00034 \par
00035     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00036         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00037             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00038                 {\cf18 int} aux = p[j];\par
00039                 p[j] = p[j+1];\par
00040                 p[j+1] = aux;\par
00041             \}\par
00042         \}\par
00043     \}\par
00044 \par
00045     free(v_sorted);\par
00046     free(dist_to_median);\par
00047     {\cf19 return} p;\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/test.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/test.cpp}
{\xe \v arkanjo/tests/e2e/test.cpp}
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
{\f2 #include "../../base/utils.hpp"}\par
{\f2 #include "../../pre/preprocessor.hpp"}\par
{\f2 #include "../../base/config.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b should_skip} (string s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b areEqualFile} (string file1, string file2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b remove_prefix} (string a, int rem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b EXPECTED_DIR} = "tests/e2e/expected"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b CURRENT_DIR} = "tests/e2e/current"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b CODEBASE_DIR} = "tests/e2e/codebase"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b skip_check_list} = \{"/tmp/config.txt","/tmp/output_tool.txt","/tmp/output_parsed.txt"\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v areEqualFile\:test.cpp}
{\xe \v test.cpp\:areEqualFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool areEqualFile (string file1, string file2)}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b test.cpp}.}\par
}
{\xe \v main\:test.cpp}
{\xe \v test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b test.cpp}.}\par
}
{\xe \v remove_prefix\:test.cpp}
{\xe \v test.cpp\:remove_prefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string remove_prefix (string a, int rem)}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b test.cpp}.}\par
}
{\xe \v should_skip\:test.cpp}
{\xe \v test.cpp\:should_skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool should_skip (string s)}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b test.cpp}.}\par
}
{\xe \v Test\:test.cpp}
{\xe \v test.cpp\:Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test ()}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b test.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v CODEBASE_DIR\:test.cpp}
{\xe \v test.cpp\:CODEBASE_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string CODEBASE_DIR = "tests/e2e/codebase"}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b test.cpp}.}\par
}
{\xe \v CURRENT_DIR\:test.cpp}
{\xe \v test.cpp\:CURRENT_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string CURRENT_DIR = "tests/e2e/current"}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b test.cpp}.}\par
}
{\xe \v EXPECTED_DIR\:test.cpp}
{\xe \v test.cpp\:EXPECTED_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string EXPECTED_DIR = "tests/e2e/expected"}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b test.cpp}.}\par
}
{\xe \v skip_check_list\:test.cpp}
{\xe \v test.cpp\:skip_check_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<string> skip_check_list = \{"/tmp/config.txt","/tmp/output_tool.txt","/tmp/output_parsed.txt"\}}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b test.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/test.cpp}
{\xe \v arkanjo/tests/e2e/test.cpp}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <bits/stdc++.h>}\par
00002 {\cf21 #include "../../base/utils.hpp"}\par
00003 {\cf21 #include "../../pre/preprocessor.hpp"}\par
00004 {\cf21 #include "../../base/config.hpp"}\par
00005 \par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 {\cf17 const} {\cf18 string} EXPECTED_DIR = {\cf22 "tests/e2e/expected"};\par
00009 {\cf17 const} {\cf18 string} CURRENT_DIR = {\cf22 "tests/e2e/current"};\par
00010 {\cf17 const} {\cf18 string} CODEBASE_DIR = {\cf22 "tests/e2e/codebase"};\par
00011 \par
00012 vector<string> skip_check_list = \{{\cf22 "/tmp/config.txt"},{\cf22 "/tmp/output_tool.txt"},{\cf22 "/tmp/output_parsed.txt"}\};\par
00013 \par
00014 {\cf18 bool} should_skip({\cf18 string} s)\{\par
00015     {\cf19 for}({\cf17 auto} x : skip_check_list)\{\par
00016         {\cf19 if}(x == s)\{\par
00017             {\cf19 return} {\cf17 true};\par
00018         \}\par
00019     \}\par
00020     {\cf19 return} {\cf17 false};\par
00021 \}\par
00022 \par
00023 {\cf18 bool} areEqualFile({\cf18 string} file1, {\cf18 string} file2)\{\par
00024     vector<string> left = Utils::read_file_generic(file1);\par
00025     vector<string> right = Utils::read_file_generic(file2);\par
00026     \par
00027     {\cf19 if}(left.size() != right.size())\{    \par
00028         {\cf19 return} {\cf17 false};\par
00029     \}\par
00030 \par
00031     {\cf18 int} sz = left.size();\par
00032 \par
00033     {\cf19 for}({\cf18 int} i = 0; i < sz; i++)\{\par
00034         {\cf19 if}(left[i] != right[i])\{\par
00035             {\cf19 return} {\cf17 false};\par
00036         \}\par
00037     \}\par
00038 \par
00039     {\cf19 return} {\cf17 true};\par
00040 \}\par
00041 \par
00042 {\cf18 string} remove_prefix({\cf18 string} a, {\cf18 int} rem)\{\par
00043     reverse(a.begin(),a.end());\par
00044     {\cf18 int} cnt = rem;\par
00045 \par
00046     {\cf19 while}(cnt > 0 && !a.empty())\{\par
00047         a.pop_back();\par
00048         cnt--;\par
00049     \}\par
00050     reverse(a.begin(),a.end());\par
00051     {\cf19 return} a;\par
00052 \}\par
00053 \par
00054 {\cf18 void} Test()\{\par
00055     vector<string> expected_files;\par
00056     vector<string> current_files;\par
00057 \par
00058     {\cf19 for}({\cf17 const} {\cf17 auto} &dirEntry: std::filesystem::recursive_directory_iterator(EXPECTED_DIR))\{\par
00059         {\cf18 string} file_path = dirEntry.path().string();\par
00060         expected_files.push_back(file_path);\par
00061     \}\par
00062     {\cf19 for}({\cf17 const} {\cf17 auto} &dirEntry: std::filesystem::recursive_directory_iterator(CURRENT_DIR))\{\par
00063         {\cf18 string} file_path = dirEntry.path().string();\par
00064         current_files.push_back(file_path);\par
00065     \}\par
00066 \par
00067     sort(expected_files.begin(),expected_files.end());\par
00068     sort(current_files.begin(),current_files.end());\par
00069     \par
00070     {\cf18 int} ite = min(({\cf18 int})expected_files.size(),({\cf18 int})current_files.size());\par
00071     \par
00072     {\cf19 for}({\cf18 int} i = 0; i < ite; i++)\{\par
00073         {\cf18 string} expected_file = expected_files[i];\par
00074         {\cf18 string} current_file = current_files[i];\par
00075 \par
00076         {\cf18 string} expected_without_prefix = remove_prefix(expected_file,EXPECTED_DIR.size());\par
00077         {\cf18 string} current_without_prefix = remove_prefix(current_file,CURRENT_DIR.size());\par
00078 \par
00079         {\cf19 if}(expected_without_prefix != current_without_prefix)\{\par
00080             {\cf19 if}(expected_without_prefix < current_without_prefix)\{\par
00081                 cout << {\cf22 "TEST FAILED"} << {\cf23 '\\n'};\par
00082                 cout << {\cf22 "Expected file with name "} <<expected_file <<{\cf22 " but does not exist"} << {\cf23 '\\n'};\par
00083                 {\cf19 return};\par
00084             \}{\cf19 else}\{\par
00085                 cout << {\cf22 "TEST FAILED"} << {\cf23 '\\n'};\par
00086                 cout << {\cf22 "Unexpected file with name "} << current_file << {\cf22 " found"} << {\cf23 '\\n'};\par
00087                 {\cf19 return};\par
00088             \}\par
00089         \}\par
00090         {\cf19 if}(should_skip(current_without_prefix)) {\cf19 continue};\par
00091         {\cf19 if}(!areEqualFile(expected_file,current_file))\{\par
00092             cout << {\cf22 "TEST FAILED"} << {\cf23 '\\n'};\par
00093             cout << {\cf22 "File "} << expected_file << {\cf22 " does not have the expected content"} << {\cf23 '\\n'};\par
00094             {\cf19 return};\par
00095         \}\par
00096     \}\par
00097     cout << {\cf22 "TEST PASSED"} << {\cf23 '\\n'};\par
00098 \}\par
00099 \par
00100 \par
00101 {\cf18 int} main( {\cf18 int} argc, {\cf18 char} *argv[] )\{\par
00102     Config::config()->setTestConfig();\par
00103     Preprocessor({\cf17 true},CODEBASE_DIR,0);\par
00104     Test();\par
00105 \par
00106 \}\par
00107 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/duplicate_code_detection.py File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/duplicate_code_detection.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/duplicate_code_detection.py}
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Python3 tool to detect similarities between files within a repository. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b duplicate_code_detection.ReturnCode}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of possible return codes for the application. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b duplicate_code_detection.CliColors}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ANSI color codes for terminal text formatting. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b duplicate_code_detection}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.get_all_source_code_from_directory} (directory, file_extensions)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a list with all the source code files within the directory. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.conditional_print} (text, machine_friendly_output)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.remove_comments_and_docstrings} (str source_code)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strip comments and docstrings from source code. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.get_loc_count} (file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.get_loc_to_print} (loc_count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.main} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.run} (fail_threshold, directories, files, ignore_directories, ignore_files, json_output, project_root_dir, file_extensions, ignore_threshold, only_code, csv_output, show_loc)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b duplicate_code_detection.source_code_file_extensions} = ["h", "c", "cpp", "cc", "java", "py", "cs"]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.file_column_label} = "File"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.file_loc_label} = ",#LoC"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.similarity_column_label} = "Similarity (%)"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.similarity_label_length} = len({\b similarity_column_label})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.loc_label} = "#LoC"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b duplicate_code_detection.similarity_label} = "Similarity"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection.exit_code}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b duplicate_code_detection._}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A simple Python3 tool to detect similarities between files within a repository. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Document similarity code adapted from Jonathan Mugan's tutorial: {\f2 https://www.oreilly.com/learning/how-do-i-compare-document-similarity-using-python} \par
}{
Definition in file {\b duplicate_code_detection.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
duplicate_code_detection.py\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/duplicate_code_detection.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/duplicate_code_detection.py}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """! @package duplicate_code_detection}\par
00002 {\cf22 @file duplicate_code_detection.py}\par
00003 {\cf22 @brief A simple Python3 tool to detect similarities between files within a repository.}\par
00004 {\cf22 }\par
00005 {\cf22 Document similarity code adapted from Jonathan Mugan's tutorial:}\par
00006 {\cf22 https://www.oreilly.com/learning/how-do-i-compare-document-similarity-using-python}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 import} os\par
00010 {\cf17 import} sys\par
00011 {\cf17 import} argparse\par
00012 {\cf17 import} gensim\par
00013 {\cf17 import} ast\par
00014 {\cf17 import} csv\par
00015 {\cf17 import} astor\par
00016 {\cf17 import} re\par
00017 {\cf17 import} tempfile\par
00018 {\cf17 import} json\par
00019 {\cf17 from} enum {\cf17 import} Enum\par
00020 {\cf17 from} nltk.tokenize {\cf17 import} word_tokenize\par
00021 {\cf17 from} collections {\cf17 import} OrderedDict\par
00022 \par
00023 source_code_file_extensions = [{\cf22 "h"}, {\cf22 "c"}, {\cf22 "cpp"}, {\cf22 "cc"}, {\cf22 "java"}, {\cf22 "py"}, {\cf22 "cs"}]\par
00024 file_column_label = {\cf22 "File"}\par
00025 file_loc_label = {\cf22 ",#LoC"}\par
00026 similarity_column_label = {\cf22 "Similarity (%)"}\par
00027 similarity_label_length = len(similarity_column_label)\par
00028 loc_label = {\cf22 "#LoC"}\par
00029 similarity_label = {\cf22 "Similarity"}\par
00030 \par
00031 {\cf17 class }ReturnCode(Enum):\par
00032     {\cf22 """! @brief Enumeration of possible return codes for the application.}\par
00033 {\cf22     }\par
00034 {\cf22     @param SUCCESS Indicates successful operation (value: 0)}\par
00035 {\cf22     @param BAD_INPUT Indicates invalid input parameters (value: 1)}\par
00036 {\cf22     @param THRESHOLD_EXCEEDED Indicates a threshold limit was exceeded (value: 2)}\par
00037 {\cf22     """}\par
00038     SUCCESS = 0\par
00039     BAD_INPUT = 1\par
00040     THRESHOLD_EXCEEDED = 2\par
00041 \par
00042 \par
00043 {\cf17 class }CliColors:\par
00044     {\cf22 """! @brief ANSI color codes for terminal text formatting.}\par
00045 {\cf22     }\par
00046 {\cf22     Provides named constants for colored terminal output using ANSI escape sequences.}\par
00047 {\cf22     All colors should be used with ENDC to reset formatting.}\par
00048 {\cf22     }\par
00049 {\cf22     Example:}\par
00050 {\cf22         print(f"\{CliColors.OKGREEN\}Success!\{CliColors.ENDC\}")}\par
00051 {\cf22     """}\par
00052     HEADER = {\cf22 "\\033[95m"}\par
00053     OKBLUE = {\cf22 "\\033[94m"}\par
00054     OKGREEN = {\cf22 "\\033[92m"}\par
00055     WARNING = {\cf22 "\\033[93m"}\par
00056     FAIL = {\cf22 "\\033[91m"}\par
00057     ENDC = {\cf22 "\\033[0m"}\par
00058     BOLD = {\cf22 "\\033[1m"}\par
00059     UNDERLINE = {\cf22 "\\033[4m"}\par
00060 \par
00061 \par
00062 {\cf17 def }get_all_source_code_from_directory(directory, file_extensions):\par
00063     {\cf22 """! @brief Get a list with all the source code files within the directory}\par
00064 {\cf22     }\par
00065 {\cf22     @param directory }\par
00066 {\cf22     @param file_extensions}\par
00067 {\cf22     @return source_code_files}\par
00068 {\cf22     """}\par
00069     source_code_files = list()\par
00070     {\cf19 for} dirpath, _, filenames {\cf19 in} os.walk(directory):\par
00071         {\cf19 for} name {\cf19 in} filenames:\par
00072             _, file_extension = os.path.splitext(name)\par
00073             {\cf19 if} file_extension[1:] {\cf19 in} file_extensions:\par
00074                 filename = os.path.join(dirpath, name)\par
00075                 source_code_files.append(filename)\par
00076 \par
00077     {\cf19 return} source_code_files\par
00078 \par
00079 \par
00080 {\cf17 def }conditional_print(text, machine_friendly_output):\par
00081     {\cf22 """! @brief}\par
00082 {\cf22 }\par
00083 {\cf22     @param text}\par
00084 {\cf22     @param machine_friendly_output }\par
00085 {\cf22     """}\par
00086     {\cf19 if} {\cf19 not} machine_friendly_output:\par
00087         print(text)\par
00088 \par
00089 \par
00090 {\cf17 def }remove_comments_and_docstrings(source_code: str) -> str:\par
00091     {\cf22 """! @brief Strip comments and docstrings from source code}\par
00092 {\cf22 }\par
00093 {\cf22     @see https://gist.github.com/phpdude/1ae6f19de213d66286c8183e9e3b9ec1}\par
00094 {\cf22 }\par
00095 {\cf22     @param source_code Raw source code as a single string}\par
00096 {\cf22     @return source_code_clean Stripped source code as a single string}\par
00097 {\cf22     """}\par
00098     parsed = ast.parse(source_code)\par
00099     {\cf19 for} node {\cf19 in} ast.walk(parsed):\par
00100         {\cf19 if} {\cf19 not} isinstance(\par
00101             node, (ast.FunctionDef, ast.ClassDef, ast.AsyncFunctionDef, ast.Module)\par
00102         ):\par
00103             {\cf19 continue}\par
00104 \par
00105         {\cf19 if} {\cf19 not} len(node.body):\par
00106             {\cf19 continue}\par
00107 \par
00108         {\cf19 if} {\cf19 not} isinstance(node.body[0], ast.Expr):\par
00109             {\cf19 continue}\par
00110 \par
00111         {\cf19 if} {\cf19 not} hasattr(node.body[0], {\cf22 "value"}) {\cf19 or} {\cf19 not} isinstance(\par
00112             node.body[0].value, ast.Str\par
00113         ):\par
00114             {\cf19 continue}\par
00115 \par
00116         node.body = node.body[1:]\par
00117 \par
00118     source_code_clean = astor.to_source(parsed)\par
00119     {\cf19 return} source_code_clean\par
00120 \par
00121 \par
00122 {\cf17 def }get_loc_count(file_path):\par
00123     {\cf22 """! @brief}\par
00124 {\cf22 }\par
00125 {\cf22     @param file_path}\par
00126 {\cf22     @return lines_count}\par
00127 {\cf22     """}\par
00128     lines_count = -1\par
00129     {\cf19 try}:\par
00130         {\cf17 with} open(os.path.normpath(file_path), {\cf22 'r'}) {\cf17 as} the_file:\par
00131             lines_count = len(the_file.readlines())\par
00132     {\cf19 except} Exception {\cf17 as} err:\par
00133         print(f{\cf22 "WARNING: Failed to get lines count for file \{file_path\}, reason: \{str(err)\}"})\par
00134     {\cf19 return} lines_count\par
00135 \par
00136 \par
00137 {\cf17 def }get_loc_to_print(loc_count):\par
00138     {\cf22 """! @brief}\par
00139 {\cf22 }\par
00140 {\cf22     @param loc_count }\par
00141 {\cf22     @return loc_to_print}\par
00142 {\cf22     """}\par
00143     loc_to_print = str(loc_count) {\cf19 if} loc_count >= 0 {\cf19 else} {\cf22 ""}\par
00144     {\cf19 return} loc_to_print\par
00145 \par
00146 \par
00147 {\cf17 def }main():\par
00148     {\cf22 """! @brief}\par
00149 {\cf22  }\par
00150 {\cf22     @return result}\par
00151 {\cf22     """}\par
00152     parser_description = (\par
00153         CliColors.HEADER\par
00154         + CliColors.BOLD\par
00155         + {\cf22 "=== Duplicate Code Detection Tool ==="}\par
00156         + CliColors.ENDC\par
00157     )\par
00158     parser = argparse.ArgumentParser(description=parser_description)\par
00159     parser.add_argument(\par
00160         {\cf22 "-t"},\par
00161         {\cf22 "--fail-threshold"},\par
00162         type=int,\par
00163         default=100,\par
00164         help={\cf22 "The maximum allowed similarity before the script exits with an error."},\par
00165     )\par
00166     group = parser.add_mutually_exclusive_group(required={\cf17 True})\par
00167     group.add_argument(\par
00168         {\cf22 "-d"},\par
00169         {\cf22 "--directories"},\par
00170         nargs={\cf22 "+"},\par
00171         help={\cf22 "Check for similarities between all files of the specified directories."},\par
00172     )\par
00173     group.add_argument(\par
00174         {\cf22 "-f"},\par
00175         {\cf22 "--files"},\par
00176         nargs={\cf22 "+"},\par
00177         help={\cf22 "Check for similarities between specified files. \\}\par
00178 {\cf22                         The more files are supplied the more accurate are the results."},\par
00179     )\par
00180     parser.add_argument(\par
00181         {\cf22 "--ignore-directories"}, nargs={\cf22 "+"}, default=list(), help={\cf22 "Directories to ignore."}\par
00182     )\par
00183     parser.add_argument({\cf22 "--ignore-files"}, nargs={\cf22 "+"}, help={\cf22 "Files to ignore."})\par
00184     parser.add_argument(\par
00185         {\cf22 "-j"}, {\cf22 "--json"}, type=bool, default={\cf17 False}, help={\cf22 "Print output as JSON."}\par
00186     )\par
00187     parser.add_argument(\par
00188         {\cf22 "--project-root-dir"},\par
00189         type=str,\par
00190         default=str(),\par
00191         help={\cf22 "The relative path to the project root directory to be removed when printing out results."},\par
00192     )\par
00193     parser.add_argument(\par
00194         {\cf22 "--file-extensions"},\par
00195         nargs={\cf22 "+"},\par
00196         default=source_code_file_extensions,\par
00197         help={\cf22 "File extensions to check for similarities."},\par
00198     )\par
00199     parser.add_argument(\par
00200         {\cf22 "--ignore-threshold"},\par
00201         type=int,\par
00202         default=0,\par
00203         help={\cf22 "Don't print out similarity below the ignore threshold"},\par
00204     )\par
00205     parser.add_argument(\par
00206         {\cf22 "--only-code"},\par
00207         action={\cf22 "store_true"},\par
00208         help={\cf22 "Removes comments and docstrings from the source code before analysis"},\par
00209     )\par
00210     parser.add_argument(\par
00211         {\cf22 "--csv-output"},\par
00212         type=str,\par
00213         default=str(),\par
00214         help={\cf22 "Outputs results as a CSV to the specified CSV path"},\par
00215     )\par
00216     parser.add_argument(\par
00217         {\cf22 "--show-loc"},\par
00218         action={\cf22 "store_true"},\par
00219         help={\cf22 "Add file line counts, including blank lines and comments, to all outputs."},\par
00220     )\par
00221     args = parser.parse_args()\par
00222 \par
00223     result = run(\par
00224         args.fail_threshold,\par
00225         args.directories,\par
00226         args.files,\par
00227         args.ignore_directories,\par
00228         args.ignore_files,\par
00229         args.json,\par
00230         args.project_root_dir,\par
00231         args.file_extensions,\par
00232         args.ignore_threshold,\par
00233         args.only_code,\par
00234         args.csv_output,\par
00235         args.show_loc,\par
00236     )\par
00237 \par
00238     {\cf19 return} result\par
00239 \par
00240 \par
00241 {\cf17 def }run(\par
00242     fail_threshold,\par
00243     directories,\par
00244     files,\par
00245     ignore_directories,\par
00246     ignore_files,\par
00247     json_output,\par
00248     project_root_dir,\par
00249     file_extensions,\par
00250     ignore_threshold,\par
00251     only_code,\par
00252     csv_output,\par
00253     show_loc,\par
00254 ):\par
00255     {\cf22 """! @brief}\par
00256 {\cf22 }\par
00257 {\cf22     @param fail_threshold}\par
00258 {\cf22     @param directories}\par
00259 {\cf22     @param files}\par
00260 {\cf22     @param ignore_directories}\par
00261 {\cf22     @param ignore_files}\par
00262 {\cf22     @param json_output}\par
00263 {\cf22     @param project_root_dir}\par
00264 {\cf22     @param file_extensions}\par
00265 {\cf22     @param ignore_threshold}\par
00266 {\cf22     @param only_code}\par
00267 {\cf22     @param csv_output}\par
00268 {\cf22     @param show_loc}\par
00269 {\cf22     """}\par
00270     {\cf20 # Determine which files to compare for similarities}\par
00271     source_code_files = list()\par
00272     files_to_ignore = list()\par
00273     {\cf19 if} directories:\par
00274         {\cf19 for} directory {\cf19 in} directories:\par
00275             {\cf19 if} {\cf19 not} os.path.isdir(directory):\par
00276                 print({\cf22 "Path does not exist or is not a directory:"}, directory)\par
00277                 {\cf19 return} (ReturnCode.BAD_INPUT, \{\})\par
00278             source_code_files += get_all_source_code_from_directory(\par
00279                 directory, file_extensions\par
00280             )\par
00281         {\cf19 for} directory {\cf19 in} ignore_directories:\par
00282             files_to_ignore += get_all_source_code_from_directory(\par
00283                 directory, file_extensions\par
00284             )\par
00285     {\cf19 else}:\par
00286         {\cf19 if} len(files) < 2:\par
00287             print({\cf22 "Too few files to compare, you need to supply at least 2"})\par
00288             {\cf19 return} (ReturnCode.BAD_INPUT, \{\})\par
00289         {\cf19 for} supplied_file {\cf19 in} files:\par
00290             {\cf19 if} {\cf19 not} os.path.isfile(supplied_file):\par
00291                 print({\cf22 "Supplied file does not exist:"}, supplied_file)\par
00292                 {\cf19 return} (ReturnCode.BAD_INPUT, \{\})\par
00293         source_code_files = files\par
00294 \par
00295     files_to_ignore += ignore_files {\cf19 if} ignore_files {\cf19 else} list()\par
00296     files_to_ignore = [os.path.normpath(f) {\cf19 for} f {\cf19 in} files_to_ignore]\par
00297     source_code_files = [os.path.normpath(f) {\cf19 for} f {\cf19 in} source_code_files]\par
00298     source_code_files = list(set(source_code_files) - set(files_to_ignore))\par
00299     {\cf19 if} len(source_code_files) < 2:\par
00300         print({\cf22 "Not enough source code files found"})\par
00301         {\cf19 return} (ReturnCode.BAD_INPUT, \{\})\par
00302     {\cf20 # Sort the sources, so the results are sorted too and are reproducible}\par
00303     source_code_files.sort()\par
00304     source_code_files = [os.path.abspath(f) {\cf19 for} f {\cf19 in} source_code_files]\par
00305 \par
00306     {\cf20 # Get the absolute project root directory path to remove when printing out the results}\par
00307     {\cf19 if} project_root_dir:\par
00308         {\cf19 if} {\cf19 not} os.path.isdir(project_root_dir):\par
00309             print(\par
00310                 {\cf22 "The project root directory does not exist or is not a directory:"},\par
00311                 project_root_dir,\par
00312             )\par
00313             {\cf19 return} (ReturnCode.BAD_INPUT, \{\})\par
00314         project_root_dir = os.path.abspath(project_root_dir)\par
00315         project_root_dir = os.path.join(project_root_dir, {\cf22 ""})  {\cf20 # Add the trailing slash}\par
00316 \par
00317     {\cf20 # Find the largest string length to format the textual output}\par
00318     largest_string_length = len(\par
00319         max(source_code_files, key=len).replace(project_root_dir, {\cf22 ""})\par
00320     )\par
00321 \par
00322     {\cf20 # Parse the contents of all the source files}\par
00323     source_code = OrderedDict()\par
00324     {\cf19 for} source_code_file {\cf19 in} source_code_files:\par
00325         {\cf19 try}:\par
00326             {\cf20 # read file but also recover from encoding errors in source files}\par
00327             {\cf17 with} open(source_code_file, {\cf22 "r"}, errors={\cf22 "surrogateescape"}) {\cf17 as} f:\par
00328                 {\cf20 # Store source code with the file path as the key}\par
00329                 content = f.read()\par
00330                 {\cf19 if} only_code {\cf19 and} source_code_file.endswith({\cf22 "py"}):\par
00331                     content = remove_comments_and_docstrings(content)\par
00332                 source_code[source_code_file] = content\par
00333         {\cf19 except} Exception {\cf17 as} err:\par
00334             print(f{\cf22 "ERROR: Failed to open file \{source_code_file\}, reason: \{str(err)\}"})\par
00335 \par
00336     {\cf20 # Create a Similarity object of all the source code}\par
00337     gen_docs = [\par
00338         [word.lower() {\cf19 for} word {\cf19 in} word_tokenize(source_code[source_file])]\par
00339         {\cf19 for} source_file {\cf19 in} source_code\par
00340     ]\par
00341     dictionary = gensim.corpora.Dictionary(gen_docs)\par
00342     corpus = [dictionary.doc2bow(gen_doc) {\cf19 for} gen_doc {\cf19 in} gen_docs]\par
00343     tf_idf = gensim.models.TfidfModel(corpus)\par
00344     sims = gensim.similarities.Similarity(\par
00345         tempfile.gettempdir() + os.sep, tf_idf[corpus], num_features=len(dictionary)\par
00346     )\par
00347 \par
00348     column_label = file_column_label\par
00349     {\cf19 if} show_loc:\par
00350         column_label += file_loc_label\par
00351         largest_string_length += len(file_loc_label)\par
00352 \par
00353     exit_code = ReturnCode.SUCCESS\par
00354     code_similarity = dict()\par
00355     {\cf19 for} source_file {\cf19 in} source_code:\par
00356         {\cf20 # Check for similarities}\par
00357         query_doc = [w.lower() {\cf19 for} w {\cf19 in} word_tokenize(source_code[source_file])]\par
00358         query_doc_bow = dictionary.doc2bow(query_doc)\par
00359         query_doc_tf_idf = tf_idf[query_doc_bow]\par
00360 \par
00361         loc_info = {\cf22 ""}\par
00362         source_file_loc = -1\par
00363         {\cf19 if} show_loc:\par
00364             source_file_loc = get_loc_count(source_file)\par
00365             loc_info = {\cf22 ","} + get_loc_to_print(source_file_loc)\par
00366 \par
00367         short_source_file_path = source_file.replace(project_root_dir, {\cf22 ""})\par
00368         conditional_print(\par
00369             {\cf22 "\\n\\n\\n"}\par
00370             + CliColors.HEADER\par
00371             + {\cf22 "Code duplication probability for "}\par
00372             + short_source_file_path\par
00373             + loc_info\par
00374             + CliColors.ENDC,\par
00375             json_output,\par
00376         )\par
00377         conditional_print(\par
00378             {\cf22 "-"} * (largest_string_length + similarity_label_length), json_output\par
00379         )\par
00380         conditional_print(\par
00381             CliColors.BOLD\par
00382             + {\cf22 "%s %s"}\par
00383             % (column_label.center(largest_string_length), similarity_column_label)\par
00384             + CliColors.ENDC,\par
00385             json_output,\par
00386         )\par
00387         conditional_print(\par
00388             {\cf22 "-"} * (largest_string_length + similarity_label_length), json_output\par
00389         )\par
00390 \par
00391         empty_length = 0\par
00392         code_similarity[short_source_file_path] = dict()\par
00393         {\cf19 if} show_loc:\par
00394             code_similarity[short_source_file_path][loc_label] = source_file_loc\par
00395             empty_length = len(code_similarity[short_source_file_path])\par
00396         {\cf19 for} similarity, source {\cf19 in} zip(sims[query_doc_tf_idf], source_code):\par
00397             {\cf20 # Ignore similarities for the same file}\par
00398             {\cf19 if} source == source_file:\par
00399                 {\cf19 continue}\par
00400             similarity_percentage = similarity * 100\par
00401             {\cf20 # Ignore very low similarity}\par
00402             {\cf19 if} similarity_percentage < ignore_threshold:\par
00403                 {\cf19 continue}\par
00404             short_source_path = source.replace(project_root_dir, {\cf22 ""})\par
00405             {\cf19 if} show_loc:\par
00406                 code_similarity[short_source_file_path][short_source_path] = dict()\par
00407                 code_similarity[short_source_file_path][short_source_path][loc_label] = get_loc_count(\par
00408                     source\par
00409                 )\par
00410                 code_similarity[short_source_file_path][short_source_path][similarity_label]  = round(\par
00411                     similarity_percentage, 2\par
00412                 )\par
00413             {\cf19 else}:\par
00414                 code_similarity[short_source_file_path][short_source_path] = round(\par
00415                     similarity_percentage, 2\par
00416                 )\par
00417             {\cf19 if} similarity_percentage > fail_threshold:\par
00418                 similarity_percentage = 100.00\par
00419             color = (\par
00420                 CliColors.OKGREEN\par
00421                 {\cf19 if} similarity_percentage < 10\par
00422                 {\cf19 else} (\par
00423                     CliColors.WARNING {\cf19 if} similarity_percentage < 20 {\cf19 else} CliColors.FAIL\par
00424                 )\par
00425             )\par
00426             info_to_print = short_source_path\par
00427             {\cf19 if} show_loc:\par
00428                 info_to_print += {\cf22 ","} + get_loc_to_print(get_loc_count(source))\par
00429 \par
00430             conditional_print(\par
00431                 {\cf22 "%s     "} % (info_to_print.ljust(largest_string_length))\par
00432                 + color\par
00433                 + {\cf22 "%.2f"} % (similarity_percentage)\par
00434                 + CliColors.ENDC,\par
00435                 json_output,\par
00436             )\par
00437         {\cf20 # If no similarities found for the particular file, remove it from the report}\par
00438         {\cf19 if} len(code_similarity[short_source_file_path]) == empty_length:\par
00439             del code_similarity[short_source_file_path]\par
00440     {\cf19 if} exit_code == ReturnCode.THRESHOLD_EXCEEDED:\par
00441         conditional_print(\par
00442             {\cf22 "Code duplication threshold exceeded. Please consult logs."}, json_output\par
00443         )\par
00444 \par
00445     {\cf19 if} json_output:\par
00446         similarities_json = json.dumps(code_similarity, indent=4)\par
00447         print(similarities_json)\par
00448 \par
00449     {\cf19 if} csv_output:\par
00450         {\cf17 with} open(csv_output, {\cf22 "w"}) {\cf17 as} csv_file:\par
00451             writer = csv.writer(csv_file)\par
00452             {\cf19 if} show_loc:\par
00453                 writer.writerow([{\cf22 "File A"}, {\cf22 "#LoC A"}, {\cf22 "File B"}, {\cf22 "#LoC B"}, {\cf22 "Similarity"}])\par
00454                 {\cf19 for} first_file {\cf19 in} code_similarity:\par
00455                     {\cf19 for} second_file {\cf19 in} code_similarity[first_file]:\par
00456                         {\cf19 if} second_file != loc_label:\par
00457                             \par
00458                             writer.writerow(\par
00459                                 [\par
00460                                     first_file,\par
00461                                     get_loc_to_print(get_loc_count(os.path.join(project_root_dir, first_file))),\par
00462                                     second_file,\par
00463                                     get_loc_to_print(get_loc_count(os.path.join(project_root_dir, second_file))),\par
00464                                     code_similarity[first_file][second_file][similarity_label],\par
00465                                 ]\par
00466                             )\par
00467             {\cf19 else}:\par
00468                 writer.writerow([{\cf22 "File A"}, {\cf22 "File B"}, {\cf22 "Similarity"}])\par
00469                 {\cf19 for} first_file {\cf19 in} code_similarity:\par
00470                     {\cf19 for} second_file {\cf19 in} code_similarity[first_file]:\par
00471                         writer.writerow(\par
00472                             [\par
00473                                 first_file,\par
00474                                 second_file,\par
00475                                 code_similarity[first_file][second_file],\par
00476                             ]\par
00477                         )\par
00478 \par
00479     {\cf19 return} (exit_code, code_similarity)\par
00480 \par
00481 \par
00482 {\cf19 if} __name__ == {\cf22 "__main__"}:\par
00483     exit_code, _ = main()\par
00484     sys.exit(exit_code.value)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/run_action.py File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/run_action.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/run_action.py}
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b run_action}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.make_markdown_table} (array)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.get_markdown_link} (file, url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.get_warning} (similarity, warn_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.similarities_to_markdown} (similarities, url_prefix, warn_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.split_and_trim} (input_list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.to_absolute_path} (paths)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b run_action.main} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\b run_action.WARNING_SUFFIX} = " \'E2\'9A\'A0\'EF\'B8\'8F"\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
run_action.py\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/run_action.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/run_action.py}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 #!/usr/bin/env python}\par
00002 \par
00003 {\cf17 import} os\par
00004 {\cf17 import} sys\par
00005 {\cf17 import} json\par
00006 {\cf17 import} requests\par
00007 {\cf17 import} argparse\par
00008 \par
00009 {\cf17 import} duplicate_code_detection\par
00010 \par
00011 WARNING_SUFFIX = {\cf22 " \'E2\'9A\'A0\'EF\'B8\'8F"}\par
00012 \par
00013 \par
00014 {\cf17 def }make_markdown_table(array):\par
00015     {\cf22 """Input: Python list with rows of table as lists}\par
00016 {\cf22                First element as header.}\par
00017 {\cf22         Output: String to put into a .md file}\par
00018 {\cf22 }\par
00019 {\cf22     Ex Input:}\par
00020 {\cf22         [["Name", "Age", "Height"],}\par
00021 {\cf22          ["Jake", 20, 5'10],}\par
00022 {\cf22          ["Mary", 21, 5'7]]}\par
00023 {\cf22 }\par
00024 {\cf22      Adopted from: https://gist.github.com/m0neysha/219bad4b02d2008e0154}\par
00025 {\cf22     """}\par
00026     markdown = {\cf22 "\\n"} + str({\cf22 "| "})\par
00027 \par
00028     {\cf19 for} e {\cf19 in} array[0]:\par
00029         to_add = {\cf22 " "} + str(e) + str({\cf22 " |"})\par
00030         markdown += to_add\par
00031     markdown += {\cf22 "\\n"}\par
00032 \par
00033     markdown += {\cf22 "|"}\par
00034     {\cf19 for} i {\cf19 in} range(len(array[0])):\par
00035         markdown += str({\cf22 "-------------- | "})\par
00036     markdown += {\cf22 "\\n"}\par
00037 \par
00038     markdown_characters = 0\par
00039     max_characters = 65000\par
00040     {\cf19 for} entry {\cf19 in} array[1:]:\par
00041         markdown += str({\cf22 "| "})\par
00042         {\cf19 for} e {\cf19 in} entry:\par
00043             to_add = str(e) + str({\cf22 " | "})\par
00044             markdown += to_add\par
00045         markdown += {\cf22 "\\n"}\par
00046         markdown_characters += len(markdown)\par
00047         {\cf19 if} markdown_characters > max_characters:\par
00048             markdown += {\cf22 "\\n"} + WARNING_SUFFIX + {\cf22 " "}\par
00049             markdown += {\cf22 "Results were omitted because the report was too large. "}\par
00050             markdown += {\cf22 "Please consider ignoring results below a certain threshold.\\n"}\par
00051             {\cf19 break}\par
00052 \par
00053     {\cf19 return} markdown + {\cf22 "\\n"}\par
00054 \par
00055 \par
00056 {\cf17 def }get_markdown_link(file, url):\par
00057     {\cf19 return} {\cf22 "[%s](%s%s)"} % (file, url, file)\par
00058 \par
00059 \par
00060 {\cf17 def }get_warning(similarity, warn_threshold):\par
00061     {\cf19 return} (\par
00062         str(similarity)\par
00063         {\cf19 if} similarity < int(warn_threshold)\par
00064         {\cf19 else} str(similarity) + WARNING_SUFFIX\par
00065     )\par
00066 \par
00067 \par
00068 {\cf17 def }similarities_to_markdown(similarities, url_prefix, warn_threshold):\par
00069     markdown = str()\par
00070     {\cf19 for} checked_file {\cf19 in} similarities.keys():\par
00071         markdown += {\cf22 "<details><summary>%s</summary>\\n\\n"} % checked_file\par
00072         markdown += {\cf22 "### \'F0\'9F\'93\'84 %s\\n"} % get_markdown_link(checked_file, url_prefix)\par
00073 \par
00074         table_header = [{\cf22 "File"}, {\cf22 "Similarity (%)"}]\par
00075         table_contents = [\par
00076             [get_markdown_link(f, url_prefix), get_warning(s, warn_threshold)]\par
00077             {\cf19 for} (f, s) {\cf19 in} similarities[checked_file].items()\par
00078         ]\par
00079         {\cf20 # Sort table contents based on similarity}\par
00080         table_contents.sort(\par
00081             reverse={\cf17 True}, key={\cf17 lambda} row: float(row[1].replace(WARNING_SUFFIX, {\cf22 ""}))\par
00082         )\par
00083         entire_table = [[] {\cf19 for} _ {\cf19 in} range(len(table_contents) + 1)]\par
00084         entire_table[0] = table_header\par
00085         {\cf19 for} i {\cf19 in} range(1, len(table_contents) + 1):\par
00086             entire_table[i] = table_contents[i - 1]\par
00087 \par
00088         markdown += make_markdown_table(entire_table)\par
00089         markdown += {\cf22 "</details>\\n"}\par
00090 \par
00091     {\cf19 return} markdown\par
00092 \par
00093 \par
00094 {\cf17 def }split_and_trim(input_list):\par
00095     {\cf19 return} [token.strip() {\cf19 for} token {\cf19 in} input_list.split({\cf22 ","})]\par
00096 \par
00097 \par
00098 {\cf17 def }to_absolute_path(paths):\par
00099     {\cf19 return} [os.path.abspath(path) {\cf19 for} path {\cf19 in} paths]\par
00100 \par
00101 \par
00102 {\cf17 def }main():\par
00103     parser = argparse.ArgumentParser(\par
00104         description={\cf22 "Duplicate code detection action runner"}\par
00105     )\par
00106     parser.add_argument(\par
00107         {\cf22 "--latest-head"},\par
00108         type=str,\par
00109         default={\cf22 "master"},\par
00110         help={\cf22 "The latest commit hash or branch"},\par
00111     )\par
00112     parser.add_argument(\par
00113         {\cf22 "--pull-request-id"}, type=str, required={\cf17 True}, help={\cf22 "The pull request id"}\par
00114     )\par
00115     args = parser.parse_args()\par
00116 \par
00117     fail_threshold = os.environ.get({\cf22 "INPUT_FAIL_ABOVE"})\par
00118     directories = os.environ.get({\cf22 "INPUT_DIRECTORIES"})\par
00119     ignore_directories = os.environ.get({\cf22 "INPUT_IGNORE_DIRECTORIES"})\par
00120     project_root_dir = os.environ.get({\cf22 "INPUT_PROJECT_ROOT_DIR"})\par
00121     file_extensions = os.environ.get({\cf22 "INPUT_FILE_EXTENSIONS"})\par
00122     ignore_threshold = os.environ.get({\cf22 "INPUT_IGNORE_BELOW"})\par
00123     only_code = os.environ.get({\cf22 "INPUT_ONLY_CODE"})\par
00124 \par
00125     directories_list = split_and_trim(directories)\par
00126     directories_list = to_absolute_path(directories_list)\par
00127     ignore_directories_list = (\par
00128         split_and_trim(ignore_directories) {\cf19 if} ignore_directories != {\cf22 ""} {\cf19 else} list()\par
00129     )\par
00130     ignore_directories_list = to_absolute_path(ignore_directories_list)\par
00131     file_extensions_list = split_and_trim(file_extensions)\par
00132     project_root_dir = os.path.abspath(project_root_dir)\par
00133 \par
00134     files_list = {\cf18 None}\par
00135     ignore_files_list = {\cf18 None}\par
00136     json_output = {\cf17 True}\par
00137     csv_output_path = {\cf22 ""}  {\cf20 # No CSV output by default for now in GitHub Actions}\par
00138     show_loc = {\cf17 False}\par
00139 \par
00140     detection_result, code_similarity = duplicate_code_detection.run(\par
00141         int(fail_threshold),\par
00142         directories_list,\par
00143         files_list,\par
00144         ignore_directories_list,\par
00145         ignore_files_list,\par
00146         json_output,\par
00147         project_root_dir,\par
00148         file_extensions_list,\par
00149         int(ignore_threshold),\par
00150         bool(only_code),\par
00151         csv_output_path,\par
00152         show_loc,\par
00153     )\par
00154 \par
00155     {\cf19 if} detection_result == duplicate_code_detection.ReturnCode.BAD_INPUT:\par
00156         print({\cf22 "Action aborted due to bad user input"})\par
00157         {\cf19 return} detection_result.value\par
00158     {\cf19 elif} detection_result == duplicate_code_detection.ReturnCode.THRESHOLD_EXCEEDED:\par
00159         print(\par
00160             {\cf22 "Action failed due to maximum similarity threshold exceeded, check the report"}\par
00161         )\par
00162 \par
00163     repo = os.environ.get({\cf22 "GITHUB_REPOSITORY"})\par
00164     files_url_prefix = {\cf22 "https://github.com/%s/blob/%s/"} % (repo, args.latest_head)\par
00165     warn_threshold = os.environ.get({\cf22 "INPUT_WARN_ABOVE"})\par
00166 \par
00167     header_message_start = os.environ.get({\cf22 "INPUT_HEADER_MESSAGE_START"}) + {\cf22 "\\n"}\par
00168     message = header_message_start\par
00169     message += {\cf22 "The [tool](https://github.com/platisd/duplicate-code-detection-tool)"}\par
00170     message += {\cf22 " analyzed your source code and found the following degree of"}\par
00171     message += {\cf22 " similarity between the files:\\n"}\par
00172     message += similarities_to_markdown(\par
00173         code_similarity, files_url_prefix, warn_threshold\par
00174     )\par
00175 \par
00176     github_token = os.environ.get({\cf22 "INPUT_GITHUB_TOKEN"})\par
00177     github_api_url = os.environ.get({\cf22 "GITHUB_API_URL"})\par
00178 \par
00179     request_url = {\cf22 "%s/repos/%s/issues/%s/comments"} % (\par
00180         github_api_url,\par
00181         repo,\par
00182         args.pull_request_id,\par
00183     )\par
00184 \par
00185     headers = \{\par
00186         {\cf22 "Authorization"}: {\cf22 "token %s"} % github_token,\par
00187     \}\par
00188     report = \{{\cf22 "body"}: message\}\par
00189 \par
00190     update_existing_comment = os.environ.get({\cf22 "INPUT_ONE_COMMENT"}, {\cf22 "false"}).lower() {\cf19 in} (\par
00191         {\cf22 "true"},\par
00192         {\cf22 "1"},\par
00193     )\par
00194     comment_updated = {\cf17 False}\par
00195     {\cf19 if} update_existing_comment:\par
00196         {\cf20 # If the bot has posted many comments, update the last one}\par
00197         pr_comments = requests.get(request_url, headers=headers).json()\par
00198         {\cf19 for} pr_comment {\cf19 in} pr_comments[::-1]:\par
00199             {\cf19 if} pr_comment[{\cf22 "body"}].startswith(header_message_start):\par
00200                 update_result = requests.patch(\par
00201                     pr_comment[{\cf22 "url"}],\par
00202                     json=report,\par
00203                     headers=headers,\par
00204                 )\par
00205                 {\cf19 if} update_result.status_code != 200:\par
00206                     print(\par
00207                         {\cf22 "Updating existing comment failed with code: "}\par
00208                         + str(update_result.status_code)\par
00209                     )\par
00210                     print(update_result.text)\par
00211                     print({\cf22 "Attempting to post a new comment instead"})\par
00212                 {\cf19 else}:\par
00213                     comment_updated = {\cf17 True}\par
00214                 {\cf19 break}\par
00215 \par
00216     {\cf19 if} {\cf19 not} comment_updated:\par
00217         post_result = requests.post(\par
00218             request_url,\par
00219             json=report,\par
00220             headers=headers,\par
00221         )\par
00222 \par
00223         {\cf19 if} post_result.status_code != 201:\par
00224             print(\par
00225                 {\cf22 "Posting results to GitHub failed with code: "}\par
00226                 + str(post_result.status_code)\par
00227             )\par
00228             print(post_result.text)\par
00229 \par
00230     {\cf17 with} open({\cf22 "message.md"}, {\cf22 "w"}) {\cf17 as} f:\par
00231         f.write(message)\par
00232 \par
00233     {\cf19 return} detection_result.value\par
00234 \par
00235 \par
00236 {\cf19 if} __name__ == {\cf22 "__main__"}:\par
00237     sys.exit(main())\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/setup.py File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/setup.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/setup.py}
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Package configuration for duplicate code detection tool. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b setup}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.name}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.entry_points}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.py_modules}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.package_dir}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.install_requires}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.setuptools_git_versioning}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.setup_requires}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Package configuration for duplicate code detection tool. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This setup configuration defines the installation parameters for the duplicate code detection tool package, including dependencies, version control, and console entry points. \par
}{
Definition in file {\b setup.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
setup.py\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/setup.py}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/setup.py}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """! @package setup}\par
00002 {\cf22 @file setup.py}\par
00003 {\cf22 @brief Package configuration for duplicate code detection tool.}\par
00004 {\cf22 }\par
00005 {\cf22 This setup configuration defines the installation parameters for the duplicate}\par
00006 {\cf22 code detection tool package, including dependencies, version control, and}\par
00007 {\cf22 console entry points.}\par
00008 {\cf22 """}\par
00009 \par
00010 {\cf17 from} setuptools {\cf17 import} setup\par
00011 \par
00012 setup(\par
00013     name={\cf22 'duplicate code detection tool'},\par
00014     entry_points=\{\par
00015         {\cf22 'console_scripts'}: [{\cf22 'duplicate-code-detection=duplicate_code_detection:main'}]\par
00016     \},\par
00017     py_modules=[{\cf22 'duplicate_code_detection'}],\par
00018     package_dir=\{\par
00019         {\cf22 'duplicate_code_detection'}: {\cf22 '.'},\par
00020     \},\par
00021     install_requires=[\par
00022         {\cf22 'gensim>=3.8'},\par
00023         {\cf22 'nltk>=3.5'},\par
00024         {\cf22 'astor>=0.8.1'}\par
00025     ],\par
00026     setuptools_git_versioning=\{\par
00027         {\cf22 "enabled"}: {\cf17 True},\par
00028     \},\par
00029     setup_requires=[{\cf22 "setuptools-git-versioning<2"}],\par
00030 )\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/file_parser/filter.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/file_parser/filter.cpp}
{\xe \v master_artifacts/file_parser/filter.cpp}
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for filter.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "filter_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b matches} (string text, string pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filter} (string file_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v filter\:filter.cpp}
{\xe \v filter.cpp\:filter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void filter (string file_name)}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b filter.cpp}.}\par
}
{\xe \v main\:filter.cpp}
{\xe \v filter.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b filter.cpp}.}\par
}
{\xe \v matches\:filter.cpp}
{\xe \v filter.cpp\:matches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool matches (string text, string pattern)}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b filter.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
filter.cpp\par \pard\plain 
{\tc\tcl2 \v master_artifacts/file_parser/filter.cpp}
{\xe \v master_artifacts/file_parser/filter.cpp}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20 This file expect the output of parser.cpp}\par
00003 {\cf20 This code filter the output only printing the files similar to files that contains a given pattern passed as argc}\par
00004 {\cf20 The code filter every file that has the pattern as a substring, so be carefull with duplications}\par
00005 {\cf20 */}\par
00006 \par
00007 {\cf21 #include <bits/stdc++.h>} \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 \par
00011 {\cf18 bool} matches({\cf18 string} text, {\cf18 string} pattern)\{\par
00012     {\cf19 return} text.find(pattern) != string::npos;\par
00013 \}\par
00014 \par
00015 {\cf18 void} filter({\cf18 string} file_name)\{\par
00016     {\cf18 int} number_comparations;\par
00017     cin >> number_comparations;\par
00018 \par
00019     set<pair<string,double>> similar_files;\par
00020     \par
00021     {\cf19 for}({\cf18 int} i = 0; i < number_comparations; i++)\{\par
00022         vector<string> files_compared(2);\par
00023         {\cf18 double} similarity;\par
00024 \par
00025         cin >> files_compared[0] >> files_compared[1];\par
00026         cin >> similarity;\par
00027         \par
00028         {\cf19 for}({\cf18 int} j = 0; j < 2; j++)\{\par
00029             {\cf18 string} file1 = files_compared[j];\par
00030             {\cf18 string} file2 = files_compared[j^1];\par
00031             \par
00032             {\cf19 if}(matches(file1,file_name))\{\par
00033                 similar_files.insert(make_pair(file2,similarity));\par
00034             \}\par
00035         \}\par
00036     \}\par
00037 \par
00038     {\cf19 for}({\cf17 auto} [similar_file,similarity] : similar_files)\{\par
00039         cout << similar_file << {\cf23 ' '};\par
00040         cout << fixed << setprecision(2) << similarity << endl;\par
00041     \}\par
00042 \}\par
00043 \par
00044 \par
00045 \par
00046 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00047     {\cf19 if}(argc <= 1)\{\par
00048         cout << {\cf22 "Erro: Expect the name of the file to be filtred, but none has given"} << endl;\par
00049         {\cf19 return} 0;\par
00050     \}\par
00051     {\cf18 string} pattern(argv[1]);\par
00052     filter(pattern);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/pre/parser.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/parser.cpp}
{\xe \v arkanjo/pre/parser.cpp}
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "parser.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2pre_2parser_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.cpp\par \pard\plain 
{\tc\tcl2 \v arkanjo/pre/parser.cpp}
{\xe \v arkanjo/pre/parser.cpp}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "parser.hpp"}\par
00002 \par
00003 \par
00004 Comparation::Comparation({\cf18 string} _path1, {\cf18 string} _path2, {\cf18 double} _sim)\{\par
00005     {\cf19 if}(_path1 > _path2) swap(_path1,_path2);\par
00006     path1 = _path1;\par
00007     path2 = _path2;\par
00008     similarity = _sim;\par
00009 \}\par
00010 \par
00011 {\cf18 bool} Comparation::operator<({\cf17 const} Comparation &com){\cf17  const}\{\par
00012     {\cf19 if}(similarity != com.similarity)\{\par
00013         {\cf19 return} similarity > com.similarity;\par
00014     \}\par
00015     {\cf19 if}(path1 == com.path1)\{\par
00016         {\cf19 return} path2 < com.path2;\par
00017     \}\par
00018     {\cf19 return} path1 < com.path1;\par
00019 \}\par
00020 \par
00021 {\cf18 bool} Comparation::operator==({\cf17 const} Comparation &com){\cf17  const}\{\par
00022     {\cf19 return} path1 == com.path1 && path2 == com.path2;\par
00023 \}\par
00024 \par
00025 vector<string> Parser::parser_line({\cf18 string} line)\{\par
00026     {\cf18 string} at = {\cf22 ""};\par
00027     vector<string> ret;\par
00028     {\cf19 for}({\cf17 auto} c : line)\{\par
00029         {\cf19 if}(c <= 20 || c == {\cf23 ' '})\{ {\cf20 //an space on non-printable char}\par
00030             {\cf19 if}(!at.empty())\par
00031                 ret.push_back(at);\par
00032             at = {\cf22 ""};\par
00033         \}{\cf19 else}\{\par
00034             at += c;\par
00035         \}\par
00036     \}\par
00037     {\cf19 if}(!at.empty())\par
00038         ret.push_back(at);\par
00039     \par
00040     {\cf19 return} ret;\par
00041 \}\par
00042 \par
00043 {\cf18 bool} Parser::is_an_file({\cf18 string} s)\{\par
00044     {\cf19 return} !s.empty() && s[0] == {\cf23 '/'};\par
00045 \}\par
00046 \par
00047 {\cf18 string} Parser::remove_formatation_from_similarity({\cf18 string} s)\{\par
00048     {\cf19 for}({\cf18 int} i = 0; i < 4; i++)\{\par
00049         s.pop_back();\par
00050     \}\par
00051     reverse(s.begin(),s.end());\par
00052     {\cf19 while}(s.back() != {\cf23 'm'})\{\par
00053         s.pop_back();\par
00054     \}\par
00055     s.pop_back();\par
00056     reverse(s.begin(),s.end());\par
00057     {\cf19 return} s;\par
00058 \}\par
00059 \par
00060 {\cf18 double} Parser::retrive_similarity({\cf18 string} s)\{ \par
00061     s = remove_formatation_from_similarity(s);\par
00062     {\cf18 char} *cs = s.data();\par
00063     {\cf18 float} similarity = stod(s);\par
00064     {\cf19 return} similarity;\par
00065 \}\par
00066 \par
00067 {\cf18 void} Parser::parser_block({\cf18 string} path, set<Comparation> &comparations)\{\par
00068     {\cf18 string} line;\par
00069     {\cf19 while}(getline(fin,line))\{\par
00070         vector<string> tokens = parser_line(line);\par
00071         {\cf19 if}(tokens.empty())\{\par
00072             {\cf19 break};\par
00073         \}\par
00074         {\cf19 if}( int32_t(tokens.size()) != 2 || !is_an_file(tokens[0]))\{\par
00075             {\cf19 continue};\par
00076         \}\par
00077         {\cf18 string} path_compared = tokens[0];\par
00078 \par
00079         {\cf18 double} similarity = retrive_similarity(tokens[1]);\par
00080         Comparation com(path,path_compared,similarity);\par
00081         {\cf19 if}(similarity >= similarity_cap_)\par
00082             comparations.insert(com);\par
00083     \}\par
00084 \}\par
00085 \par
00086 {\cf18 void} Parser::exec()\{\par
00087     {\cf18 string} line;\par
00088     set<Comparation> comparations;\par
00089 \par
00090     {\cf19 while}(getline(fin,line))\{\par
00091         vector<string> tokens =  parser_line(line);\par
00092         {\cf19 if}(tokens.empty()) {\cf19 continue};\par
00093 \par
00094         {\cf18 string} path;\par
00095         {\cf19 for}({\cf17 auto} token : tokens)\{\par
00096             {\cf19 if}(is_an_file(token))\{\par
00097                 path = token;\par
00098                 {\cf19 break};\par
00099             \}\par
00100         \}\par
00101         {\cf20 //Removing some formatation that shows on terminal}\par
00102         {\cf19 for}({\cf18 int} i = 0; i < 4; i++) path.pop_back();\par
00103         parser_block(path,comparations);\par
00104     \}\par
00105     fout << comparations.size() << {\cf23 '\\n'};\par
00106     {\cf19 for}({\cf17 auto} com : comparations)\{\par
00107         fout << com.path1 << {\cf23 ' '} << com.path2 << {\cf23 ' '};\par
00108         fout << fixed << setprecision(2) << com.similarity << {\cf23 '\\n'};\par
00109     \}\par
00110 \}\par
00111 \par
00112 Parser::Parser({\cf18 string} input_file, {\cf18 string} output_file, {\cf18 double} similarity_cap)\{\par
00113     fin = ifstream(input_file);\par
00114     fout = ofstream(output_file);\par
00115     similarity_cap_ = similarity_cap;\par
00116 \par
00117     exec();\par
00118 \par
00119     fin.close();\par
00120     fout.close();\par
00121 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/file_parser/parser.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/file_parser/parser.cpp}
{\xe \v master_artifacts/file_parser/parser.cpp}
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <bits/stdc++.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2file__parser_2parser_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Comparation}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structure representing a code comparison result. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b parser_line} (string line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_an_file} (string s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b remove_formatation_from_similarity} (string s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b retrive_similarity} (string s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parser_block} (string path, set< {\b Comparation} > &comparations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parser} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CAP} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v is_an_file\:parser.cpp}
{\xe \v parser.cpp\:is_an_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool is_an_file (string s)}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b parser.cpp}.}\par
}
{\xe \v main\:parser.cpp}
{\xe \v parser.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b parser.cpp}.}\par
}
{\xe \v parser\:parser.cpp}
{\xe \v parser.cpp\:parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parser ()}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b parser.cpp}.}\par
}
{\xe \v parser_block\:parser.cpp}
{\xe \v parser.cpp\:parser_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parser_block (string path, set< {\b Comparation} > & comparations)}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b parser.cpp}.}\par
}
{\xe \v parser_line\:parser.cpp}
{\xe \v parser.cpp\:parser_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > parser_line (string line)}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b parser.cpp}.}\par
}
{\xe \v remove_formatation_from_similarity\:parser.cpp}
{\xe \v parser.cpp\:remove_formatation_from_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string remove_formatation_from_similarity (string s)}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b parser.cpp}.}\par
}
{\xe \v retrive_similarity\:parser.cpp}
{\xe \v parser.cpp\:retrive_similarity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double retrive_similarity (string s)}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b parser.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v CAP\:parser.cpp}
{\xe \v parser.cpp\:CAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CAP = 0}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b parser.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.cpp\par \pard\plain 
{\tc\tcl2 \v master_artifacts/file_parser/parser.cpp}
{\xe \v master_artifacts/file_parser/parser.cpp}
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <bits/stdc++.h>} \par
00002 {\cf17 using namespace }std;\par
00003 \par
00004 \par
00005 {\cf18 double} CAP = 0;\par
00006 \par
00007 \par
00008 vector<string> parser_line({\cf18 string} line)\{\par
00009     {\cf18 string} at = {\cf22 ""};\par
00010     vector<string> ret;\par
00011     {\cf19 for}({\cf17 auto} c : line)\{\par
00012         {\cf19 if}(c <= 20 || c == {\cf23 ' '})\{ {\cf20 //an space on non-printable char}\par
00013             {\cf19 if}(!at.empty())\par
00014                 ret.push_back(at);\par
00015             at = {\cf22 ""};\par
00016         \}{\cf19 else}\{\par
00017             at += c;\par
00018         \}\par
00019     \}\par
00020     {\cf19 if}(!at.empty())\par
00021         ret.push_back(at);\par
00022     \par
00023     {\cf19 return} ret;\par
00024 \}\par
00025 \par
00026 {\cf18 bool} is_an_file({\cf18 string} s)\{\par
00027     {\cf19 return} !s.empty() && s[0] == {\cf23 '/'};\par
00028 \}\par
00029 \par
00030 {\cf18 string} remove_formatation_from_similarity({\cf18 string} s)\{\par
00031     {\cf19 for}({\cf18 int} i = 0; i < 4; i++)\{\par
00032         s.pop_back();\par
00033     \}\par
00034     reverse(s.begin(),s.end());\par
00035     {\cf19 while}(s.back() != {\cf23 'm'})\{\par
00036         s.pop_back();\par
00037     \}\par
00038     s.pop_back();\par
00039     reverse(s.begin(),s.end());\par
00040     {\cf19 return} s;\par
00041 \}\par
00042 \par
00043 {\cf18 double} retrive_similarity({\cf18 string} s)\{\par
00044     s = remove_formatation_from_similarity(s);\par
00045     {\cf18 char} *cs = s.data();\par
00046     {\cf18 float} similarity = stod(s);\par
00047     {\cf19 return} similarity;\par
00048 \}\par
00049 \par
00050 \par
00051 {\cf17 struct }Comparation\{\par
00052     {\cf18 string} path1, path2;\par
00053     {\cf18 double} similarity;\par
00054 \par
00055 \par
00056     Comparation()\{\par
00057     \}\par
00058 \par
00059     Comparation({\cf18 string} _path1, {\cf18 string} _path2, {\cf18 double} _sim)\{\par
00060         {\cf19 if}(_path1 > _path2) swap(_path1,_path2);\par
00061         path1 = _path1;\par
00062         path2 = _path2;\par
00063         similarity = _sim;\par
00064     \}\par
00065 \par
00066     {\cf18 bool} operator<({\cf17 const} Comparation &com){\cf17  const}\{\par
00067         {\cf19 if}(similarity != com.similarity)\{\par
00068             {\cf19 return} similarity > com.similarity;\par
00069         \}\par
00070         {\cf19 if}(path1 == com.path1)\{\par
00071             {\cf19 return} path2 < com.path2;\par
00072         \}\par
00073         {\cf19 return} path1 < com.path1;\par
00074     \}\par
00075 \par
00076     {\cf18 bool} operator==({\cf17 const} Comparation &com){\cf17  const}\{\par
00077         {\cf19 return} path1 == com.path1 && path2 == com.path2;\par
00078     \}\par
00079 \};\par
00080 \par
00081 \par
00082 {\cf18 void} parser_block({\cf18 string} path, set<Comparation> &comparations)\{\par
00083     {\cf18 string} line;\par
00084     {\cf19 while}(getline(cin,line))\{\par
00085         vector<string> tokens = parser_line(line);\par
00086         {\cf19 if}(tokens.empty())\{\par
00087             {\cf19 break};\par
00088         \}\par
00089         {\cf19 if}( int32_t(tokens.size()) != 2 || !is_an_file(tokens[0]))\{\par
00090             {\cf19 continue};\par
00091         \}\par
00092         {\cf18 string} path_compared = tokens[0];\par
00093 \par
00094         {\cf18 double} similarity = retrive_similarity(tokens[1]);\par
00095         Comparation com(path,path_compared,similarity);\par
00096         {\cf19 if}(similarity >= CAP)\par
00097             comparations.insert(com);\par
00098     \}\par
00099 \}\par
00100 \par
00101 \par
00102 {\cf18 void} parser()\{\par
00103     {\cf18 string} line;\par
00104     set<Comparation> comparations;\par
00105 \par
00106     {\cf19 while}(getline(cin,line))\{\par
00107         vector<string> tokens =  parser_line(line);\par
00108         {\cf19 if}(tokens.empty()) {\cf19 continue};\par
00109 \par
00110         {\cf18 string} path;\par
00111         {\cf19 for}({\cf17 auto} token : tokens)\{\par
00112             {\cf19 if}(is_an_file(token))\{\par
00113                 path = token;\par
00114                 {\cf19 break};\par
00115             \}\par
00116         \}\par
00117         {\cf20 //Removing some formatation that shows on terminal}\par
00118         {\cf19 for}({\cf18 int} i = 0; i < 4; i++) path.pop_back();\par
00119         parser_block(path,comparations);\par
00120     \}\par
00121     cout << comparations.size() << {\cf23 '\\n'};\par
00122     {\cf19 for}({\cf17 auto} com : comparations)\{\par
00123         cout << com.path1 << {\cf23 ' '} << com.path2 << {\cf23 ' '};\par
00124         cout << fixed << setprecision(2) << com.similarity << {\cf23 '\\n'};\par
00125     \}\par
00126 \}\par
00127 \par
00128 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00129     {\cf19 if}(argc >= 2)\{\par
00130         CAP = atof(argv[1]);\par
00131     \}\par
00132     parser();\par
00133     {\cf19 return} 0;\par
00134 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/base/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/base/README.md}
{\xe \v arkanjo/base/README.md}
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/csvs/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/csvs/README.md}
{\xe \v arkanjo/csvs/README.md}
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/README.md}
{\xe \v arkanjo/README.md}
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/third-party/duplicate-code-detection-tool/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/third-party/duplicate-code-detection-tool/README.md}
{\xe \v arkanjo/third-party/duplicate-code-detection-tool/README.md}
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/file_parser/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/file_parser/README.md}
{\xe \v master_artifacts/file_parser/README.md}
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/README.md}
{\xe \v master_artifacts/README.md}
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/big.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/big.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/big.c}
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__big__functions__against__small_2big_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:big.c}
{\xe \v big.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b big.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:big.c}
{\xe \v big.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b big.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/big.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/big.c}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //big function }\par
00005 \par
00006 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00007 \par
00008     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00009     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00010     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00011     {\cf18 int} median;\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         v_sorted[i] = i;\par
00015     \}\par
00016 \par
00017     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00018         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00019             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00020                 {\cf18 int} aux = v_sorted[j];\par
00021                 v_sorted[j] = v_sorted[j+1];\par
00022                 v_sorted[j+1] = aux;\par
00023             \}\par
00024         \}\par
00025     \}\par
00026 \par
00027     median = v[v_sorted[n/2]];\par
00028         \par
00029     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00030         dist_to_median[i] = v[i]-median;\par
00031         {\cf19 if}(dist_to_median[i] < 0)\{\par
00032             dist_to_median[i] *= -1;\par
00033         \}\par
00034     \}\par
00035 \par
00036     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00037         p[i] = i;\par
00038     \}\par
00039 \par
00040     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00041         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00042             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00043                 {\cf18 int} aux = p[j];\par
00044                 p[j] = p[j+1];\par
00045                 p[j+1] = aux;\par
00046             \}\par
00047         \}\par
00048     \}\par
00049 \par
00050     free(v_sorted);\par
00051     free(dist_to_median);\par
00052     {\cf19 return} p;\par
00053 \}\par
00054 \par
00055 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00056 \par
00057     {\cf18 int} v[6];\par
00058     v[0] = 5;\par
00059     v[1] = 3;\par
00060     v[2] = 4;\par
00061     v[3] = 1;\par
00062     v[4] = 2;\par
00063     v[5] = 1;\par
00064     {\cf18 int} n = 6;\par
00065 \par
00066     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00067 \par
00068     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00069         printf({\cf22 "%d "},p[i]);\par
00070     \}\par
00071     printf({\cf22 "\\n"});\par
00072 \par
00073     free(p);\par
00074     {\cf19 return} 0;\par
00075 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_big_functions_against_small/big.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_big_functions_against_small/big.c}
{\xe \v master_artifacts/tests/test_multiple_file_big_functions_against_small/big.c}
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for big.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__big__functions__against__small_2big_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:big.c}
{\xe \v big.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b big.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:big.c}
{\xe \v big.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b big.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
big.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_big_functions_against_small/big.c}
{\xe \v master_artifacts/tests/test_multiple_file_big_functions_against_small/big.c}
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //big function }\par
00005 \par
00006 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00007 \par
00008     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00009     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00010     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00011     {\cf18 int} median;\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         v_sorted[i] = i;\par
00015     \}\par
00016 \par
00017     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00018         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00019             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00020                 {\cf18 int} aux = v_sorted[j];\par
00021                 v_sorted[j] = v_sorted[j+1];\par
00022                 v_sorted[j+1] = aux;\par
00023             \}\par
00024         \}\par
00025     \}\par
00026 \par
00027     median = v[v_sorted[n/2]];\par
00028         \par
00029     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00030         dist_to_median[i] = v[i]-median;\par
00031         {\cf19 if}(dist_to_median[i] < 0)\{\par
00032             dist_to_median[i] *= -1;\par
00033         \}\par
00034     \}\par
00035 \par
00036     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00037         p[i] = i;\par
00038     \}\par
00039 \par
00040     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00041         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00042             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00043                 {\cf18 int} aux = p[j];\par
00044                 p[j] = p[j+1];\par
00045                 p[j+1] = aux;\par
00046             \}\par
00047         \}\par
00048     \}\par
00049 \par
00050     free(v_sorted);\par
00051     free(dist_to_median);\par
00052     {\cf19 return} p;\par
00053 \}\par
00054 \par
00055 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00056 \par
00057     {\cf18 int} v[6];\par
00058     v[0] = 5;\par
00059     v[1] = 3;\par
00060     v[2] = 4;\par
00061     v[3] = 1;\par
00062     v[4] = 2;\par
00063     v[5] = 1;\par
00064     {\cf18 int} n = 6;\par
00065 \par
00066     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00067 \par
00068     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00069         printf({\cf22 "%d "},p[i]);\par
00070     \}\par
00071     printf({\cf22 "\\n"});\par
00072 \par
00073     free(p);\par
00074     {\cf19 return} 0;\par
00075 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/small.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/small.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/small.c}
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for small.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__big__functions__against__small_2small_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_v_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_dist_to_median} (int {\b v}[], int {\b n}, int {\b median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_p} (int *{\b dist_to_median}, int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v compute_dist_to_median\:small.c}
{\xe \v small.c\:compute_dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_dist_to_median (int v[], int n, int median)}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b small.c}.}\par
}
{\xe \v compute_p\:small.c}
{\xe \v small.c\:compute_p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_p (int * dist_to_median, int n)}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b small.c}.}\par
}
{\xe \v compute_v_sorted\:small.c}
{\xe \v small.c\:compute_v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_v_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b small.c}.}\par
}
{\xe \v main\:small.c}
{\xe \v small.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b small.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:small.c}
{\xe \v small.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b small.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
small.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/small.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_big_functions_against_small/small.c}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //break in small functions}\par
00005 \par
00006 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00007     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022     {\cf19 return} v_sorted;\par
00023 \}\par
00024 \par
00025 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\{\par
00026     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00027 \par
00028     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00029         dist_to_median[i] = v[i]-median;\par
00030         {\cf19 if}(dist_to_median[i] < 0)\{\par
00031             dist_to_median[i] *= -1;\par
00032         \}\par
00033     \}\par
00034     {\cf19 return} dist_to_median;\par
00035 \}\par
00036 \par
00037 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\{\par
00038     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00039 \par
00040     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00041         p[i] = i;\par
00042     \}\par
00043 \par
00044     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00045         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00046             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00047                 {\cf18 int} aux = p[j];\par
00048                 p[j] = p[j+1];\par
00049                 p[j+1] = aux;\par
00050             \}\par
00051         \}\par
00052     \}\par
00053     {\cf19 return} p;\par
00054 \}\par
00055 \par
00056 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00057     {\cf18 int} *v_sorted;\par
00058     {\cf18 int} *dist_to_median;\par
00059     {\cf18 int} *p;\par
00060     {\cf18 int} median;\par
00061 \par
00062     v_sorted = compute_v_sorted(v,n);\par
00063     median = v[v_sorted[n/2]];\par
00064     dist_to_median = compute_dist_to_median(v,n,median);\par
00065     p = compute_p(dist_to_median,n);\par
00066 \par
00067     free(v_sorted);\par
00068     free(dist_to_median);\par
00069     {\cf19 return} p;\par
00070 \}\par
00071 \par
00072 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00073 \par
00074     {\cf18 int} v[6];\par
00075     v[0] = 5;\par
00076     v[1] = 3;\par
00077     v[2] = 4;\par
00078     v[3] = 1;\par
00079     v[4] = 2;\par
00080     v[5] = 1;\par
00081     {\cf18 int} n = 6;\par
00082 \par
00083     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00084 \par
00085 \par
00086     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00087         printf({\cf22 "%d "},p[i]);\par
00088     \}\par
00089     printf({\cf22 "\\n"});\par
00090 \par
00091     free(p);\par
00092     {\cf19 return} 0;\par
00093 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_big_functions_against_small/small.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_big_functions_against_small/small.c}
{\xe \v master_artifacts/tests/test_multiple_file_big_functions_against_small/small.c}
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for small.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__big__functions__against__small_2small_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_v_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_dist_to_median} (int {\b v}[], int {\b n}, int {\b median})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b compute_p} (int *{\b dist_to_median}, int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v compute_dist_to_median\:small.c}
{\xe \v small.c\:compute_dist_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_dist_to_median (int v[], int n, int median)}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b small.c}.}\par
}
{\xe \v compute_p\:small.c}
{\xe \v small.c\:compute_p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_p (int * dist_to_median, int n)}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b small.c}.}\par
}
{\xe \v compute_v_sorted\:small.c}
{\xe \v small.c\:compute_v_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * compute_v_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b small.c}.}\par
}
{\xe \v main\:small.c}
{\xe \v small.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b small.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:small.c}
{\xe \v small.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b small.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
small.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_big_functions_against_small/small.c}
{\xe \v master_artifacts/tests/test_multiple_file_big_functions_against_small/small.c}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //break in small functions}\par
00005 \par
00006 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00007     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00008 \par
00009     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00010         v_sorted[i] = i;\par
00011     \}\par
00012 \par
00013     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00014         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00015             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00016                 {\cf18 int} aux = v_sorted[j];\par
00017                 v_sorted[j] = v_sorted[j+1];\par
00018                 v_sorted[j+1] = aux;\par
00019             \}\par
00020         \}\par
00021     \}\par
00022     {\cf19 return} v_sorted;\par
00023 \}\par
00024 \par
00025 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\{\par
00026     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00027 \par
00028     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00029         dist_to_median[i] = v[i]-median;\par
00030         {\cf19 if}(dist_to_median[i] < 0)\{\par
00031             dist_to_median[i] *= -1;\par
00032         \}\par
00033     \}\par
00034     {\cf19 return} dist_to_median;\par
00035 \}\par
00036 \par
00037 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\{\par
00038     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00039 \par
00040     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00041         p[i] = i;\par
00042     \}\par
00043 \par
00044     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00045         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00046             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00047                 {\cf18 int} aux = p[j];\par
00048                 p[j] = p[j+1];\par
00049                 p[j+1] = aux;\par
00050             \}\par
00051         \}\par
00052     \}\par
00053     {\cf19 return} p;\par
00054 \}\par
00055 \par
00056 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00057     {\cf18 int} *v_sorted;\par
00058     {\cf18 int} *dist_to_median;\par
00059     {\cf18 int} *p;\par
00060     {\cf18 int} median;\par
00061 \par
00062     v_sorted = compute_v_sorted(v,n);\par
00063     median = v[v_sorted[n/2]];\par
00064     dist_to_median = compute_dist_to_median(v,n,median);\par
00065     p = compute_p(dist_to_median,n);\par
00066 \par
00067     free(v_sorted);\par
00068     free(dist_to_median);\par
00069     {\cf19 return} p;\par
00070 \}\par
00071 \par
00072 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00073 \par
00074     {\cf18 int} v[6];\par
00075     v[0] = 5;\par
00076     v[1] = 3;\par
00077     v[2] = 4;\par
00078     v[3] = 1;\par
00079     v[4] = 2;\par
00080     v[5] = 1;\par
00081     {\cf18 int} n = 6;\par
00082 \par
00083     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00084 \par
00085 \par
00086     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00087         printf({\cf22 "%d "},p[i]);\par
00088     \}\par
00089     printf({\cf22 "\\n"});\par
00090 \par
00091     free(p);\par
00092     {\cf19 return} 0;\par
00093 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/code.c}
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__equal__code_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:code.c}
{\xe \v code.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b code.c}.}\par
}
{\xe \v find_max\:code.c}
{\xe \v code.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b code.c}.}\par
}
{\xe \v find_min\:code.c}
{\xe \v code.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b code.c}.}\par
}
{\xe \v find_sum\:code.c}
{\xe \v code.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b code.c}.}\par
}
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/code.c}
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/code.c}
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__shuffled__functions_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:code.c}
{\xe \v code.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b code.c}.}\par
}
{\xe \v find_max\:code.c}
{\xe \v code.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b code.c}.}\par
}
{\xe \v find_min\:code.c}
{\xe \v code.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b code.c}.}\par
}
{\xe \v find_sum\:code.c}
{\xe \v code.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b code.c}.}\par
}
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/code.c}
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/code.c}
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__similiar__function_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b code.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:code.c}
{\xe \v code.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/code.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/code.c}
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the  function below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 \par
00009 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00012     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} median;\par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         v_sorted[i] = i;\par
00018     \}\par
00019 \par
00020     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00021         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00022             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00023                 {\cf18 int} aux = v_sorted[j];\par
00024                 v_sorted[j] = v_sorted[j+1];\par
00025                 v_sorted[j+1] = aux;\par
00026             \}\par
00027         \}\par
00028     \}\par
00029 \par
00030     median = v[v_sorted[n/2]];\par
00031         \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         dist_to_median[i] = v[i]-median;\par
00034         {\cf19 if}(dist_to_median[i] < 0)\{\par
00035             dist_to_median[i] *= -1;\par
00036         \}\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         p[i] = i;\par
00041     \}\par
00042 \par
00043     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00044         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00045             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00046                 {\cf18 int} aux = p[j];\par
00047                 p[j] = p[j+1];\par
00048                 p[j+1] = aux;\par
00049             \}\par
00050         \}\par
00051     \}\par
00052 \par
00053     free(v_sorted);\par
00054     free(dist_to_median);\par
00055     {\cf19 return} p;\par
00056 \}\par
00057 \par
00058 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00059 \par
00060     {\cf18 int} v[6];\par
00061     v[0] = 5;\par
00062     v[1] = 3;\par
00063     v[2] = 4;\par
00064     v[3] = 1;\par
00065     v[4] = 2;\par
00066     v[5] = 1;\par
00067     {\cf18 int} n = 6;\par
00068 \par
00069     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00070     \par
00071     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00072         printf({\cf22 "%d "},p[i]);\par
00073     \}\par
00074     printf({\cf22 "\\n"});\par
00075     \par
00076     free(p);\par
00077     {\cf19 return} 0;\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_equal_code/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_equal_code/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_equal_code/code.c}
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__equal__code_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:code.c}
{\xe \v code.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b code.c}.}\par
}
{\xe \v find_max\:code.c}
{\xe \v code.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b code.c}.}\par
}
{\xe \v find_min\:code.c}
{\xe \v code.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b code.c}.}\par
}
{\xe \v find_sum\:code.c}
{\xe \v code.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b code.c}.}\par
}
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_equal_code/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_equal_code/code.c}
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_shuffled_functions/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_shuffled_functions/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_shuffled_functions/code.c}
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__shuffled__functions_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:code.c}
{\xe \v code.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b code.c}.}\par
}
{\xe \v find_max\:code.c}
{\xe \v code.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b code.c}.}\par
}
{\xe \v find_min\:code.c}
{\xe \v code.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b code.c}.}\par
}
{\xe \v find_sum\:code.c}
{\xe \v code.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b code.c}.}\par
}
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_shuffled_functions/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_shuffled_functions/code.c}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_similiar_function/code.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_similiar_function/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_similiar_function/code.c}
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for code.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__similiar__function_2code_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:code.c}
{\xe \v code.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b code.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:code.c}
{\xe \v code.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b code.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_similiar_function/code.c}
{\xe \v master_artifacts/tests/test_multiple_file_similiar_function/code.c}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the  function below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 \par
00009 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00012     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} median;\par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         v_sorted[i] = i;\par
00018     \}\par
00019 \par
00020     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00021         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00022             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00023                 {\cf18 int} aux = v_sorted[j];\par
00024                 v_sorted[j] = v_sorted[j+1];\par
00025                 v_sorted[j+1] = aux;\par
00026             \}\par
00027         \}\par
00028     \}\par
00029 \par
00030     median = v[v_sorted[n/2]];\par
00031         \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         dist_to_median[i] = v[i]-median;\par
00034         {\cf19 if}(dist_to_median[i] < 0)\{\par
00035             dist_to_median[i] *= -1;\par
00036         \}\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         p[i] = i;\par
00041     \}\par
00042 \par
00043     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00044         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00045             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00046                 {\cf18 int} aux = p[j];\par
00047                 p[j] = p[j+1];\par
00048                 p[j+1] = aux;\par
00049             \}\par
00050         \}\par
00051     \}\par
00052 \par
00053     free(v_sorted);\par
00054     free(dist_to_median);\par
00055     {\cf19 return} p;\par
00056 \}\par
00057 \par
00058 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00059 \par
00060     {\cf18 int} v[6];\par
00061     v[0] = 5;\par
00062     v[1] = 3;\par
00063     v[2] = 4;\par
00064     v[3] = 1;\par
00065     v[4] = 2;\par
00066     v[5] = 1;\par
00067     {\cf18 int} n = 6;\par
00068 \par
00069     {\cf18 int} *p = sorted_by_distance_to_median(v,n);\par
00070     \par
00071     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00072         printf({\cf22 "%d "},p[i]);\par
00073     \}\par
00074     printf({\cf22 "\\n"});\par
00075     \par
00076     free(p);\par
00077     {\cf19 return} 0;\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/source.c}
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__equal__code_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:source.c}
{\xe \v source.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b source.c}.}\par
}
{\xe \v find_max\:source.c}
{\xe \v source.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b source.c}.}\par
}
{\xe \v find_min\:source.c}
{\xe \v source.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b source.c}.}\par
}
{\xe \v find_sum\:source.c}
{\xe \v source.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b source.c}.}\par
}
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_equal_code/source.c}
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/source.c}
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__shuffled__functions_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:source.c}
{\xe \v source.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b source.c}.}\par
}
{\xe \v find_max\:source.c}
{\xe \v source.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b source.c}.}\par
}
{\xe \v find_min\:source.c}
{\xe \v source.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b source.c}.}\par
}
{\xe \v find_sum\:source.c}
{\xe \v source.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b source.c}.}\par
}
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_shuffled_functions/source.c}
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 bool} ok = {\cf17 true};\par
00006     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00007         ok &= v[i] <= v[i+1];\par
00008     \}\par
00009     {\cf19 return} ok;\par
00010 \}\par
00011 \par
00012 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00013     {\cf18 int} mx = v[0];\par
00014     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00015         {\cf19 if}(mx > v[i])\{\par
00016             mx = i;\par
00017         \}\par
00018     \}\par
00019     {\cf19 return} mx;\par
00020 \}\par
00021 \par
00022 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00023     {\cf18 int} sum = 0;\par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         sum += v[i];\par
00026     \}\par
00027     {\cf19 return} sum;\par
00028 \}\par
00029 \par
00030 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00031     {\cf18 int} mn = v[0];\par
00032     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00033         {\cf19 if}(mn > v[i])\{\par
00034             mn = i;\par
00035         \}\par
00036     \}\par
00037     {\cf19 return} mn;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/source.c}
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__multiple__file__similiar__function_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_of_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b source.c}.}\par
}
{\xe \v sorted_by_distance_of_median\:source.c}
{\xe \v source.c\:sorted_by_distance_of_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_of_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/source.c}
{\xe \v arkanjo/tests/e2e/codebase/test_multiple_file_similiar_function/source.c}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 \par
00005 {\cf20 //the  function below will compute the vector permutation p}\par
00006 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00007 {\cf20 //I do not care about ties.}\par
00008 \par
00009 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} median;\par
00012     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00015 \par
00016 \par
00017     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00018         v_sorted[i] = i;\par
00019     \}\par
00020 \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00023             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00024                 {\cf18 int} aux = v_sorted[j];\par
00025                 v_sorted[j] = v_sorted[j+1];\par
00026                 v_sorted[j+1] = aux;\par
00027             \}\par
00028         \}\par
00029     \}\par
00030 \par
00031     median = v[v_sorted[n/2]];\par
00032 \par
00033     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00034         dist_to_median[i] = v[i]-median;\par
00035         {\cf19 if}(dist_to_median[i] < 0)\par
00036             dist_to_median[i] = -dist_to_median[i];\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00040         p[i] = i;\par
00041 \par
00042     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00043         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00044             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00045                 {\cf18 int} aux = p[j];\par
00046                 p[j] = p[j+1];\par
00047                 p[j+1] = aux;\par
00048             \}\par
00049         \}\par
00050     \}\par
00051 \par
00052     free(dist_to_median);\par
00053     free(v_sorted);\par
00054     {\cf19 return} p;\par
00055 \}\par
00056 \par
00057 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00058 \par
00059     {\cf18 int} v[6];\par
00060     v[0] = 5;\par
00061     v[1] = 3;\par
00062     v[2] = 4;\par
00063     v[3] = 1;\par
00064     v[4] = 2;\par
00065     v[5] = 1;\par
00066     {\cf18 int} n = 6;\par
00067 \par
00068     {\cf18 int} *p = sorted_by_distance_of_median(v,n);\par
00069     \par
00070 \par
00071     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00072         printf({\cf22 "%d "},p[i]);\par
00073     \}\par
00074     printf({\cf22 "\\n"});\par
00075     \par
00076     free(p);\par
00077     {\cf19 return} 0;\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_equal_code/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_equal_code/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_equal_code/source.c}
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__equal__code_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:source.c}
{\xe \v source.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b source.c}.}\par
}
{\xe \v find_max\:source.c}
{\xe \v source.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b source.c}.}\par
}
{\xe \v find_min\:source.c}
{\xe \v source.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b source.c}.}\par
}
{\xe \v find_sum\:source.c}
{\xe \v source.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b source.c}.}\par
}
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_equal_code/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_equal_code/source.c}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 int} mn = v[0];\par
00006     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00007         {\cf19 if}(mn > v[i])\{\par
00008             mn = i;\par
00009         \}\par
00010     \}\par
00011     {\cf19 return} mn;\par
00012 \}\par
00013 \par
00014 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00015     {\cf18 int} mx = v[0];\par
00016     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00017         {\cf19 if}(mx > v[i])\{\par
00018             mx = i;\par
00019         \}\par
00020     \}\par
00021     {\cf19 return} mx;\par
00022 \}\par
00023 \par
00024 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00025     {\cf18 int} sum = 0;\par
00026     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00027         sum += v[i];\par
00028     \}\par
00029     {\cf19 return} sum;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00033     {\cf18 bool} ok = {\cf17 true};\par
00034     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00035         ok &= v[i] <= v[i+1];\par
00036     \}\par
00037     {\cf19 return} ok;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_shuffled_functions/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_shuffled_functions/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_shuffled_functions/source.c}
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__shuffled__functions_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b check_sorted} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_max} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_sum} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b find_min} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v check_sorted\:source.c}
{\xe \v source.c\:check_sorted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool check_sorted (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b source.c}.}\par
}
{\xe \v find_max\:source.c}
{\xe \v source.c\:find_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_max (int v[], int n)}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b source.c}.}\par
}
{\xe \v find_min\:source.c}
{\xe \v source.c\:find_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_min (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b source.c}.}\par
}
{\xe \v find_sum\:source.c}
{\xe \v source.c\:find_sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int find_sum (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b source.c}.}\par
}
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_shuffled_functions/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_shuffled_functions/source.c}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 \par
00004 {\cf18 bool} check_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00005     {\cf18 bool} ok = {\cf17 true};\par
00006     {\cf19 for}({\cf18 int} i = 0; i < n-1; i++)\{\par
00007         ok &= v[i] <= v[i+1];\par
00008     \}\par
00009     {\cf19 return} ok;\par
00010 \}\par
00011 \par
00012 {\cf18 int} find_max({\cf18 int} v[], {\cf18 int} n)\{\par
00013     {\cf18 int} mx = v[0];\par
00014     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00015         {\cf19 if}(mx > v[i])\{\par
00016             mx = i;\par
00017         \}\par
00018     \}\par
00019     {\cf19 return} mx;\par
00020 \}\par
00021 \par
00022 {\cf18 int} find_sum({\cf18 int} v[], {\cf18 int} n)\{\par
00023     {\cf18 int} sum = 0;\par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         sum += v[i];\par
00026     \}\par
00027     {\cf19 return} sum;\par
00028 \}\par
00029 \par
00030 {\cf18 int} find_min({\cf18 int} v[], {\cf18 int} n)\{\par
00031     {\cf18 int} mn = v[0];\par
00032     {\cf19 for}({\cf18 int} i = 1; i < n; i++)\{\par
00033         {\cf19 if}(mn > v[i])\{\par
00034             mn = i;\par
00035         \}\par
00036     \}\par
00037     {\cf19 return} mn;\par
00038 \}\par
00039 \par
00040 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00041 \par
00042     {\cf18 int} v[5];\par
00043     v[0] = 1;\par
00044     v[1] = 2;\par
00045     v[2] = 3;\par
00046     v[3] = 4;\par
00047     v[4] = 5;\par
00048     {\cf18 int} n = 5;\par
00049     {\cf18 int} C = find_min(v,n);\par
00050     {\cf18 int} D = find_max(v,n);\par
00051     {\cf18 int} E = find_sum(v,n);\par
00052     {\cf18 bool} is_sorted = check_sorted(v,n);\par
00053     {\cf19 return} 0;\par
00054 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_multiple_file_similiar_function/source.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_similiar_function/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_similiar_function/source.c}
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for source.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__multiple__file__similiar__function_2source_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_of_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:source.c}
{\xe \v source.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b source.c}.}\par
}
{\xe \v sorted_by_distance_of_median\:source.c}
{\xe \v source.c\:sorted_by_distance_of_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_of_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b source.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_multiple_file_similiar_function/source.c}
{\xe \v master_artifacts/tests/test_multiple_file_similiar_function/source.c}
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 \par
00005 {\cf20 //the  function below will compute the vector permutation p}\par
00006 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00007 {\cf20 //I do not care about ties.}\par
00008 \par
00009 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} median;\par
00012     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00015 \par
00016 \par
00017     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00018         v_sorted[i] = i;\par
00019     \}\par
00020 \par
00021     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00022         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00023             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00024                 {\cf18 int} aux = v_sorted[j];\par
00025                 v_sorted[j] = v_sorted[j+1];\par
00026                 v_sorted[j+1] = aux;\par
00027             \}\par
00028         \}\par
00029     \}\par
00030 \par
00031     median = v[v_sorted[n/2]];\par
00032 \par
00033     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00034         dist_to_median[i] = v[i]-median;\par
00035         {\cf19 if}(dist_to_median[i] < 0)\par
00036             dist_to_median[i] = -dist_to_median[i];\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00040         p[i] = i;\par
00041 \par
00042     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00043         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00044             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00045                 {\cf18 int} aux = p[j];\par
00046                 p[j] = p[j+1];\par
00047                 p[j+1] = aux;\par
00048             \}\par
00049         \}\par
00050     \}\par
00051 \par
00052     free(dist_to_median);\par
00053     free(v_sorted);\par
00054     {\cf19 return} p;\par
00055 \}\par
00056 \par
00057 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00058 \par
00059     {\cf18 int} v[6];\par
00060     v[0] = 5;\par
00061     v[1] = 3;\par
00062     v[2] = 4;\par
00063     v[3] = 1;\par
00064     v[4] = 2;\par
00065     v[5] = 1;\par
00066     {\cf18 int} n = 6;\par
00067 \par
00068     {\cf18 int} *p = sorted_by_distance_of_median(v,n);\par
00069     \par
00070 \par
00071     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00072         printf({\cf22 "%d "},p[i]);\par
00073     \}\par
00074     printf({\cf22 "\\n"});\par
00075     \par
00076     free(p);\par
00077     {\cf19 return} 0;\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_same_file_big_function_against_small.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_big_function_against_small.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_big_function_against_small.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__same__file__big__function__against__small_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b djfasuhfhs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v djfasuhfhs\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:djfasuhfhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define djfasuhfhs}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     fddfkjdjfk jkdsklfjalksd \\\par
    fdsajfdsjkafjkl\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sorted_by_distance_to_median\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b test_same_file_big_function_against_small.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_big_function_against_small.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_big_function_against_small.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the two functions below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 {\cf20 //big function }\par
00009 \par
00010 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00011 \par
00012 {\cf21     #define \{djfasuhfhs fddfkjdjfk jkdsklfjalksd \\}\par
00013 {\cf21     fdsajfdsjkafjkl }{\cf20 // fdsajfkldsaf /* \\}\par
00014 {\cf20     fsadjfkaksjdfjk}\par
00015 \par
00016     {\cf20 // fdjsff\{ weh /* fsdhusgh wekew */ fsajdfjsad // \\}\par
00017 {\cf20     fdsajfjkdsf " fdsafdsjakfj */ /* asdfjkdsakf //\\}\par
00018 {\cf20     fsdfjdskjkf // " sjdfkjsd '"'fkljasdf #define}\par
00019 \par
00020     {\cf20 /*fsd fj \}// sadf j #define sdjafkjds "f jdsfj "fsdajkjf '"' fa}\par
00021 {\cf20     sdjafkljdsaj h*/}\par
00022 \par
00023     {\cf18 char} D = {\cf23 '"'};\par
00024 \par
00025     printf({\cf22 "%d, dsfj hushu \\" /**/ #define // fdahu "},3);\par
00026 \par
00027     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00028     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00029     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00030     {\cf18 int} median;\par
00031 \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         v_sorted[i] = i;\par
00034     \}\par
00035 \par
00036     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00037         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00038             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00039                 {\cf18 int} aux = v_sorted[j];\par
00040                 v_sorted[j] = v_sorted[j+1];\par
00041                 v_sorted[j+1] = aux;\par
00042             \}\par
00043         \}\par
00044     \}\par
00045 \par
00046     median = v[v_sorted[n/2]];\par
00047         \par
00048     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00049         dist_to_median[i] = v[i]-median;\par
00050         {\cf19 if}(dist_to_median[i] < 0)\{\par
00051             dist_to_median[i] *= -1;\par
00052         \}\par
00053     \}\par
00054 \par
00055     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00056         p[i] = i;\par
00057     \}\par
00058 \par
00059     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00060         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00061             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00062                 {\cf18 int} aux = p[j];\par
00063                 p[j] = p[j+1];\par
00064                 p[j+1] = aux;\par
00065             \}\par
00066         \}\par
00067     \}\par
00068 \par
00069     free(v_sorted);\par
00070     free(dist_to_median);\par
00071     {\cf19 return} p;\par
00072 \}\par
00073 \par
00074 \par
00075 {\cf20 //break in small functions}\par
00076 \par
00077 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00078     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00079 \par
00080     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00081         v_sorted[i] = i;\par
00082     \}\par
00083 \par
00084     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00085         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00086             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00087                 {\cf18 int} aux = v_sorted[j];\par
00088                 v_sorted[j] = v_sorted[j+1];\par
00089                 v_sorted[j+1] = aux;\par
00090             \}\par
00091         \}\par
00092     \}\par
00093     {\cf19 return} v_sorted;\par
00094 \}\par
00095 \par
00096 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\{\par
00097     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00098 \par
00099     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00100         dist_to_median[i] = v[i]-median;\par
00101         {\cf19 if}(dist_to_median[i] < 0)\{\par
00102             dist_to_median[i] *= -1;\par
00103         \}\par
00104     \}\par
00105     {\cf19 return} dist_to_median;\par
00106 \}\par
00107 \par
00108 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\{\par
00109     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00110 \par
00111     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00112         p[i] = i;\par
00113     \}\par
00114 \par
00115     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00116         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00117             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00118                 {\cf18 int} aux = p[j];\par
00119                 p[j] = p[j+1];\par
00120                 p[j+1] = aux;\par
00121             \}\par
00122         \}\par
00123     \}\par
00124     {\cf19 return} p;\par
00125 \}\par
00126 \par
00127 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00128     {\cf18 int} *v_sorted;\par
00129     {\cf18 int} *dist_to_median;\par
00130     {\cf18 int} *p;\par
00131     {\cf18 int} median;\par
00132 \par
00133     v_sorted = compute_v_sorted(v,n);\par
00134     median = v[v_sorted[n/2]];\par
00135     dist_to_median = compute_dist_to_median(v,n,median);\par
00136     p = compute_p(dist_to_median,n);\par
00137 \par
00138     free(v_sorted);\par
00139     free(dist_to_median);\par
00140     {\cf19 return} p;\par
00141 \}\par
00142 \par
00143 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00144 \par
00145     {\cf18 int} v[6];\par
00146     v[0] = 5;\par
00147     v[1] = 3;\par
00148     v[2] = 4;\par
00149     v[3] = 1;\par
00150     v[4] = 2;\par
00151     v[5] = 1;\par
00152     {\cf18 int} n = 6;\par
00153 \par
00154     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00155     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00156 \par
00157 \par
00158     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00159         printf({\cf22 "%d "},p1[i]);\par
00160     \}\par
00161     printf({\cf22 "\\n"});\par
00162 \par
00163     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00164         printf({\cf22 "%d "},p2[i]);\par
00165     \}\par
00166     printf({\cf22 "\\n"});\par
00167 \par
00168     free(p1);\par
00169     free(p2);\par
00170     {\cf19 return} 0;\par
00171 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/dbg/test_same_file_big_function_against_small.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/dbg/test_same_file_big_function_against_small.c}
{\xe \v master_artifacts/dbg/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_big_function_against_small.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2dbg_2test__same__file__big__function__against__small_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b djfasuhfhs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v djfasuhfhs\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:djfasuhfhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define djfasuhfhs}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     fddfkjdjfk jkdsklfjalksd \\\par
    fdsajfdsjkafjkl\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sorted_by_distance_to_median\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b test_same_file_big_function_against_small.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_big_function_against_small.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/dbg/test_same_file_big_function_against_small.c}
{\xe \v master_artifacts/dbg/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the two functions below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 {\cf20 //big function }\par
00009 \par
00010 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00011 \par
00012 {\cf21     #define \{djfasuhfhs fddfkjdjfk jkdsklfjalksd \\}\par
00013 {\cf21     fdsajfdsjkafjkl }{\cf20 // fdsajfkldsaf /* \\}\par
00014 {\cf20     fsadjfkaksjdfjk}\par
00015 \par
00016     {\cf20 // fdjsff\{ weh /* fsdhusgh wekew */ fsajdfjsad // \\}\par
00017 {\cf20     fdsajfjkdsf " fdsafdsjakfj */ /* asdfjkdsakf //\\}\par
00018 {\cf20     fsdfjdskjkf // " sjdfkjsd '"'fkljasdf #define}\par
00019 \par
00020     {\cf20 /*fsd fj \}// sadf j #define sdjafkjds "f jdsfj "fsdajkjf '"' fa}\par
00021 {\cf20     sdjafkljdsaj h*/}\par
00022 \par
00023     {\cf18 char} D = {\cf23 '"'};\par
00024 \par
00025     printf({\cf22 "%d, dsfj hushu \\" /**/ #define // fdahu "},3);\par
00026 \par
00027     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00028     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00029     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00030     {\cf18 int} median;\par
00031 \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         v_sorted[i] = i;\par
00034     \}\par
00035 \par
00036     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00037         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00038             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00039                 {\cf18 int} aux = v_sorted[j];\par
00040                 v_sorted[j] = v_sorted[j+1];\par
00041                 v_sorted[j+1] = aux;\par
00042             \}\par
00043         \}\par
00044     \}\par
00045 \par
00046     median = v[v_sorted[n/2]];\par
00047         \par
00048     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00049         dist_to_median[i] = v[i]-median;\par
00050         {\cf19 if}(dist_to_median[i] < 0)\{\par
00051             dist_to_median[i] *= -1;\par
00052         \}\par
00053     \}\par
00054 \par
00055     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00056         p[i] = i;\par
00057     \}\par
00058 \par
00059     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00060         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00061             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00062                 {\cf18 int} aux = p[j];\par
00063                 p[j] = p[j+1];\par
00064                 p[j+1] = aux;\par
00065             \}\par
00066         \}\par
00067     \}\par
00068 \par
00069     free(v_sorted);\par
00070     free(dist_to_median);\par
00071     {\cf19 return} p;\par
00072 \}\par
00073 \par
00074 \par
00075 {\cf20 //break in small functions}\par
00076 \par
00077 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00078     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00079 \par
00080     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00081         v_sorted[i] = i;\par
00082     \}\par
00083 \par
00084     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00085         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00086             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00087                 {\cf18 int} aux = v_sorted[j];\par
00088                 v_sorted[j] = v_sorted[j+1];\par
00089                 v_sorted[j+1] = aux;\par
00090             \}\par
00091         \}\par
00092     \}\par
00093     {\cf19 return} v_sorted;\par
00094 \}\par
00095 \par
00096 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\{\par
00097     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00098 \par
00099     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00100         dist_to_median[i] = v[i]-median;\par
00101         {\cf19 if}(dist_to_median[i] < 0)\{\par
00102             dist_to_median[i] *= -1;\par
00103         \}\par
00104     \}\par
00105     {\cf19 return} dist_to_median;\par
00106 \}\par
00107 \par
00108 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\{\par
00109     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00110 \par
00111     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00112         p[i] = i;\par
00113     \}\par
00114 \par
00115     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00116         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00117             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00118                 {\cf18 int} aux = p[j];\par
00119                 p[j] = p[j+1];\par
00120                 p[j+1] = aux;\par
00121             \}\par
00122         \}\par
00123     \}\par
00124     {\cf19 return} p;\par
00125 \}\par
00126 \par
00127 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00128     {\cf18 int} *v_sorted;\par
00129     {\cf18 int} *dist_to_median;\par
00130     {\cf18 int} *p;\par
00131     {\cf18 int} median;\par
00132 \par
00133     v_sorted = compute_v_sorted(v,n);\par
00134     median = v[v_sorted[n/2]];\par
00135     dist_to_median = compute_dist_to_median(v,n,median);\par
00136     p = compute_p(dist_to_median,n);\par
00137 \par
00138     free(v_sorted);\par
00139     free(dist_to_median);\par
00140     {\cf19 return} p;\par
00141 \}\par
00142 \par
00143 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00144 \par
00145     {\cf18 int} v[6];\par
00146     v[0] = 5;\par
00147     v[1] = 3;\par
00148     v[2] = 4;\par
00149     v[3] = 1;\par
00150     v[4] = 2;\par
00151     v[5] = 1;\par
00152     {\cf18 int} n = 6;\par
00153 \par
00154     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00155     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00156 \par
00157 \par
00158     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00159         printf({\cf22 "%d "},p1[i]);\par
00160     \}\par
00161     printf({\cf22 "\\n"});\par
00162 \par
00163     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00164         printf({\cf22 "%d "},p2[i]);\par
00165     \}\par
00166     printf({\cf22 "\\n"});\par
00167 \par
00168     free(p1);\par
00169     free(p2);\par
00170     {\cf19 return} 0;\par
00171 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_same_file_big_function_against_small.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_big_function_against_small.c}
{\xe \v master_artifacts/tests/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_big_function_against_small.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__same__file__big__function__against__small_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b djfasuhfhs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v djfasuhfhs\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:djfasuhfhs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define djfasuhfhs}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     fddfkjdjfk jkdsklfjalksd \\\par
    fdsajfdsjkafjkl\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sorted_by_distance_to_median\:test_same_file_big_function_against_small.c}
{\xe \v test_same_file_big_function_against_small.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b test_same_file_big_function_against_small.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_big_function_against_small.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_big_function_against_small.c}
{\xe \v master_artifacts/tests/test_same_file_big_function_against_small.c}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the two functions below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 {\cf20 //big function }\par
00009 \par
00010 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00011 \par
00012 {\cf21     #define \{djfasuhfhs fddfkjdjfk jkdsklfjalksd \\}\par
00013 {\cf21     fdsajfdsjkafjkl }{\cf20 // fdsajfkldsaf /* \\}\par
00014 {\cf20     fsadjfkaksjdfjk}\par
00015 \par
00016     {\cf20 // fdjsff\{ weh /* fsdhusgh wekew */ fsajdfjsad // \\}\par
00017 {\cf20     fdsajfjkdsf " fdsafdsjakfj */ /* asdfjkdsakf //\\}\par
00018 {\cf20     fsdfjdskjkf // " sjdfkjsd '"'fkljasdf #define}\par
00019 \par
00020     {\cf20 /*fsd fj \}// sadf j #define sdjafkjds "f jdsfj "fsdajkjf '"' fa}\par
00021 {\cf20     sdjafkljdsaj h*/}\par
00022 \par
00023     {\cf18 char} D = {\cf23 '"'};\par
00024 \par
00025     printf({\cf22 "%d, dsfj hushu \\" /**/ #define // fdahu "},3);\par
00026 \par
00027     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00028     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00029     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00030     {\cf18 int} median;\par
00031 \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         v_sorted[i] = i;\par
00034     \}\par
00035 \par
00036     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00037         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00038             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00039                 {\cf18 int} aux = v_sorted[j];\par
00040                 v_sorted[j] = v_sorted[j+1];\par
00041                 v_sorted[j+1] = aux;\par
00042             \}\par
00043         \}\par
00044     \}\par
00045 \par
00046     median = v[v_sorted[n/2]];\par
00047         \par
00048     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00049         dist_to_median[i] = v[i]-median;\par
00050         {\cf19 if}(dist_to_median[i] < 0)\{\par
00051             dist_to_median[i] *= -1;\par
00052         \}\par
00053     \}\par
00054 \par
00055     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00056         p[i] = i;\par
00057     \}\par
00058 \par
00059     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00060         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00061             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00062                 {\cf18 int} aux = p[j];\par
00063                 p[j] = p[j+1];\par
00064                 p[j+1] = aux;\par
00065             \}\par
00066         \}\par
00067     \}\par
00068 \par
00069     free(v_sorted);\par
00070     free(dist_to_median);\par
00071     {\cf19 return} p;\par
00072 \}\par
00073 \par
00074 \par
00075 {\cf20 //break in small functions}\par
00076 \par
00077 {\cf18 int}* compute_v_sorted({\cf18 int} v[], {\cf18 int} n)\{\par
00078     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00079 \par
00080     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00081         v_sorted[i] = i;\par
00082     \}\par
00083 \par
00084     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00085         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00086             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00087                 {\cf18 int} aux = v_sorted[j];\par
00088                 v_sorted[j] = v_sorted[j+1];\par
00089                 v_sorted[j+1] = aux;\par
00090             \}\par
00091         \}\par
00092     \}\par
00093     {\cf19 return} v_sorted;\par
00094 \}\par
00095 \par
00096 {\cf18 int} *compute_dist_to_median({\cf18 int} v[], {\cf18 int} n, {\cf18 int} median)\{\par
00097     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00098 \par
00099     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00100         dist_to_median[i] = v[i]-median;\par
00101         {\cf19 if}(dist_to_median[i] < 0)\{\par
00102             dist_to_median[i] *= -1;\par
00103         \}\par
00104     \}\par
00105     {\cf19 return} dist_to_median;\par
00106 \}\par
00107 \par
00108 {\cf18 int} *compute_p({\cf18 int} *dist_to_median, {\cf18 int} n)\{\par
00109     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00110 \par
00111     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00112         p[i] = i;\par
00113     \}\par
00114 \par
00115     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00116         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00117             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00118                 {\cf18 int} aux = p[j];\par
00119                 p[j] = p[j+1];\par
00120                 p[j+1] = aux;\par
00121             \}\par
00122         \}\par
00123     \}\par
00124     {\cf19 return} p;\par
00125 \}\par
00126 \par
00127 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00128     {\cf18 int} *v_sorted;\par
00129     {\cf18 int} *dist_to_median;\par
00130     {\cf18 int} *p;\par
00131     {\cf18 int} median;\par
00132 \par
00133     v_sorted = compute_v_sorted(v,n);\par
00134     median = v[v_sorted[n/2]];\par
00135     dist_to_median = compute_dist_to_median(v,n,median);\par
00136     p = compute_p(dist_to_median,n);\par
00137 \par
00138     free(v_sorted);\par
00139     free(dist_to_median);\par
00140     {\cf19 return} p;\par
00141 \}\par
00142 \par
00143 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00144 \par
00145     {\cf18 int} v[6];\par
00146     v[0] = 5;\par
00147     v[1] = 3;\par
00148     v[2] = 4;\par
00149     v[3] = 1;\par
00150     v[4] = 2;\par
00151     v[5] = 1;\par
00152     {\cf18 int} n = 6;\par
00153 \par
00154     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00155     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00156 \par
00157 \par
00158     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00159         printf({\cf22 "%d "},p1[i]);\par
00160     \}\par
00161     printf({\cf22 "\\n"});\par
00162 \par
00163     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00164         printf({\cf22 "%d "},p2[i]);\par
00165     \}\par
00166     printf({\cf22 "\\n"});\par
00167 \par
00168     free(p1);\par
00169     free(p2);\par
00170     {\cf19 return} 0;\par
00171 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_same_file_different_functions_same_logic.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_different_functions_same_logic.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_different_functions_same_logic.c}
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_different_functions_same_logic.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__same__file__different__functions__same__logic_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_two_elements} (int left_hand, int right_hand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum} (int a, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_array} (int array[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_array2} (int {\b n}, int array[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_vector} (int vector[], int size_of_vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum (int a, int b)}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_array\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_array (int array[], int n)}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_array2\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_array2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_array2 (int n, int array[])}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_two_elements\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_two_elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_two_elements (int left_hand, int right_hand)}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_vector\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_vector (int vector[], int size_of_vector)}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_different_functions_same_logic.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_different_functions_same_logic.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_different_functions_same_logic.c}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 \par
00003 {\cf20 //two equal sum functions with different logic}\par
00004 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\{\par
00005     {\cf19 return} left_hand + right_hand;\par
00006 \}\par
00007 \par
00008 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\{\par
00009     {\cf18 int} ret = a+b;\par
00010     {\cf19 return} ret;\par
00011 \}\par
00012 \par
00013 {\cf20 //tree functions that find the sum of elements of an array}\par
00014 {\cf18 int} sum_of_array({\cf18 int} array[], {\cf18 int} n)\{\par
00015     {\cf18 int} ret = 0;\par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         ret += array[i];\par
00018     \}\par
00019     {\cf19 return} ret;\par
00020 \}\par
00021 \par
00022 {\cf18 int} sum_of_array2({\cf18 int} n, {\cf18 int} array[])\{\par
00023     {\cf18 int} ret = 0;\par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         ret += array[i];\par
00026     \}\par
00027     {\cf19 return} ret;\par
00028 \}\par
00029 \par
00030 {\cf18 int} sum_of_vector({\cf18 int} vector[], {\cf18 int} size_of_vector)\{\par
00031     {\cf18 int} ret = 0;\par
00032     {\cf19 for}({\cf18 int} i = size_of_vector-1; i >= 0; i--)\{\par
00033         ret += vector[i];\par
00034     \}\par
00035     {\cf19 return} ret;\par
00036 \}\par
00037 \par
00038 \par
00039 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00040 \par
00041     {\cf18 int} v[5];\par
00042     v[0] = 1;\par
00043     v[1] = 2;\par
00044     v[2] = 3;\par
00045     v[3] = 4;\par
00046     v[4] = 5;\par
00047     {\cf18 int} n = 5;\par
00048     {\cf18 int} C = sum_of_array(v,5);\par
00049     {\cf18 int} D = sum_of_array2(5,v);\par
00050     {\cf18 int} E = sum_of_vector(v,5);\par
00051     {\cf19 return} 0;\par
00052 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_same_file_different_functions_same_logic.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_different_functions_same_logic.c}
{\xe \v master_artifacts/tests/test_same_file_different_functions_same_logic.c}
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_different_functions_same_logic.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__same__file__different__functions__same__logic_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_two_elements} (int left_hand, int right_hand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum} (int a, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_array} (int array[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_array2} (int {\b n}, int array[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_vector} (int vector[], int size_of_vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum (int a, int b)}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_array\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_array (int array[], int n)}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_array2\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_array2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_array2 (int n, int array[])}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_two_elements\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_two_elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_two_elements (int left_hand, int right_hand)}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
{\xe \v sum_of_vector\:test_same_file_different_functions_same_logic.c}
{\xe \v test_same_file_different_functions_same_logic.c\:sum_of_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_vector (int vector[], int size_of_vector)}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b test_same_file_different_functions_same_logic.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_different_functions_same_logic.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_different_functions_same_logic.c}
{\xe \v master_artifacts/tests/test_same_file_different_functions_same_logic.c}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 \par
00003 {\cf20 //two equal sum functions with different logic}\par
00004 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\{\par
00005     {\cf19 return} left_hand + right_hand;\par
00006 \}\par
00007 \par
00008 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\{\par
00009     {\cf18 int} ret = a+b;\par
00010     {\cf19 return} ret;\par
00011 \}\par
00012 \par
00013 {\cf20 //tree functions that find the sum of elements of an array}\par
00014 {\cf18 int} sum_of_array({\cf18 int} array[], {\cf18 int} n)\{\par
00015     {\cf18 int} ret = 0;\par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         ret += array[i];\par
00018     \}\par
00019     {\cf19 return} ret;\par
00020 \}\par
00021 \par
00022 {\cf18 int} sum_of_array2({\cf18 int} n, {\cf18 int} array[])\{\par
00023     {\cf18 int} ret = 0;\par
00024     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00025         ret += array[i];\par
00026     \}\par
00027     {\cf19 return} ret;\par
00028 \}\par
00029 \par
00030 {\cf18 int} sum_of_vector({\cf18 int} vector[], {\cf18 int} size_of_vector)\{\par
00031     {\cf18 int} ret = 0;\par
00032     {\cf19 for}({\cf18 int} i = size_of_vector-1; i >= 0; i--)\{\par
00033         ret += vector[i];\par
00034     \}\par
00035     {\cf19 return} ret;\par
00036 \}\par
00037 \par
00038 \par
00039 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00040 \par
00041     {\cf18 int} v[5];\par
00042     v[0] = 1;\par
00043     v[1] = 2;\par
00044     v[2] = 3;\par
00045     v[3] = 4;\par
00046     v[4] = 5;\par
00047     {\cf18 int} n = 5;\par
00048     {\cf18 int} C = sum_of_array(v,5);\par
00049     {\cf18 int} D = sum_of_array2(5,v);\par
00050     {\cf18 int} E = sum_of_vector(v,5);\par
00051     {\cf19 return} 0;\par
00052 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_same_file_equal_functions.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_equal_functions.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_equal_functions.c}
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_equal_functions.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__same__file__equal__functions_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_two_elements} (int left_hand, int right_hand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum} (int a, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_pair} (int left, int right)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum (int a, int b)}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum_of_pair\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum_of_pair}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_pair (int left, int right)}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum_of_two_elements\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum_of_two_elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_two_elements (int left_hand, int right_hand)}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b test_same_file_equal_functions.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_equal_functions.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_equal_functions.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_equal_functions.c}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 \par
00003 {\cf20 //three equal sum functions with different names}\par
00004 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\{\par
00005     {\cf19 return} left_hand + right_hand;\par
00006 \}\par
00007 \par
00008 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\{\par
00009     {\cf19 return} a+b;\par
00010 \}\par
00011 \par
00012 {\cf18 int} sum_of_pair({\cf18 int} left, {\cf18 int} right)\{\par
00013     {\cf19 return} left+right;\par
00014 \}\par
00015 \par
00016 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00017     {\cf18 int} A = 5;\par
00018     {\cf18 int} B = 4;\par
00019 \par
00020     {\cf18 int} C = sum_of_two_elements(A,B);\par
00021     {\cf18 int} D = sum(A,B);\par
00022     {\cf18 int} E = sum_of_pair(A,B);\par
00023     {\cf19 return} 0;\par
00024 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_same_file_equal_functions.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_equal_functions.c}
{\xe \v master_artifacts/tests/test_same_file_equal_functions.c}
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_equal_functions.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__same__file__equal__functions_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_two_elements} (int left_hand, int right_hand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum} (int a, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum_of_pair} (int left, int right)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum (int a, int b)}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum_of_pair\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum_of_pair}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_pair (int left, int right)}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b test_same_file_equal_functions.c}.}\par
}
{\xe \v sum_of_two_elements\:test_same_file_equal_functions.c}
{\xe \v test_same_file_equal_functions.c\:sum_of_two_elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sum_of_two_elements (int left_hand, int right_hand)}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b test_same_file_equal_functions.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_equal_functions.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_equal_functions.c}
{\xe \v master_artifacts/tests/test_same_file_equal_functions.c}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 \par
00003 {\cf20 //three equal sum functions with different names}\par
00004 {\cf18 int} sum_of_two_elements({\cf18 int} left_hand, {\cf18 int} right_hand)\{\par
00005     {\cf19 return} left_hand + right_hand;\par
00006 \}\par
00007 \par
00008 {\cf18 int} sum({\cf18 int} a, {\cf18 int} b)\{\par
00009     {\cf19 return} a+b;\par
00010 \}\par
00011 \par
00012 {\cf18 int} sum_of_pair({\cf18 int} left, {\cf18 int} right)\{\par
00013     {\cf19 return} left+right;\par
00014 \}\par
00015 \par
00016 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00017     {\cf18 int} A = 5;\par
00018     {\cf18 int} B = 4;\par
00019 \par
00020     {\cf18 int} C = sum_of_two_elements(A,B);\par
00021     {\cf18 int} D = sum(A,B);\par
00022     {\cf18 int} E = sum_of_pair(A,B);\par
00023     {\cf19 return} 0;\par
00024 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arkanjo/tests/e2e/codebase/test_same_file_similar_functions.c File Reference\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_similar_functions.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_similar_functions.c}
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_similar_functions.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "arkanjo_2tests_2e2e_2codebase_2test__same__file__similar__functions_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_of_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b test_same_file_similar_functions.c}.}\par
}
{\xe \v sorted_by_distance_of_median\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:sorted_by_distance_of_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_of_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b test_same_file_similar_functions.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b test_same_file_similar_functions.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_similar_functions.c\par \pard\plain 
{\tc\tcl2 \v arkanjo/tests/e2e/codebase/test_same_file_similar_functions.c}
{\xe \v arkanjo/tests/e2e/codebase/test_same_file_similar_functions.c}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the two functions below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 \par
00009 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00012     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} median;\par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         v_sorted[i] = i;\par
00018     \}\par
00019 \par
00020     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00021         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00022             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00023                 {\cf18 int} aux = v_sorted[j];\par
00024                 v_sorted[j] = v_sorted[j+1];\par
00025                 v_sorted[j+1] = aux;\par
00026             \}\par
00027         \}\par
00028     \}\par
00029 \par
00030     median = v[v_sorted[n/2]];\par
00031         \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         dist_to_median[i] = v[i]-median;\par
00034         {\cf19 if}(dist_to_median[i] < 0)\{\par
00035             dist_to_median[i] *= -1;\par
00036         \}\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         p[i] = i;\par
00041     \}\par
00042 \par
00043     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00044         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00045             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00046                 {\cf18 int} aux = p[j];\par
00047                 p[j] = p[j+1];\par
00048                 p[j+1] = aux;\par
00049             \}\par
00050         \}\par
00051     \}\par
00052 \par
00053     free(v_sorted);\par
00054     free(dist_to_median);\par
00055     {\cf19 return} p;\par
00056 \}\par
00057 \par
00058 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00059 \par
00060     {\cf18 int} median;\par
00061     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00062     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00063     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00064 \par
00065 \par
00066     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00067         v_sorted[i] = i;\par
00068     \}\par
00069 \par
00070     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00071         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00072             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00073                 {\cf18 int} aux = v_sorted[j];\par
00074                 v_sorted[j] = v_sorted[j+1];\par
00075                 v_sorted[j+1] = aux;\par
00076             \}\par
00077         \}\par
00078     \}\par
00079 \par
00080     median = v[v_sorted[n/2]];\par
00081 \par
00082     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00083         dist_to_median[i] = v[i]-median;\par
00084         {\cf19 if}(dist_to_median[i] < 0)\par
00085             dist_to_median[i] = -dist_to_median[i];\par
00086     \}\par
00087 \par
00088     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00089         p[i] = i;\par
00090 \par
00091     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00092         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00093             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00094                 {\cf18 int} aux = p[j];\par
00095                 p[j] = p[j+1];\par
00096                 p[j+1] = aux;\par
00097             \}\par
00098         \}\par
00099     \}\par
00100 \par
00101     free(dist_to_median);\par
00102     free(v_sorted);\par
00103     {\cf19 return} p;\par
00104 \}\par
00105 \par
00106 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00107 \par
00108     {\cf18 int} v[6];\par
00109     v[0] = 5;\par
00110     v[1] = 3;\par
00111     v[2] = 4;\par
00112     v[3] = 1;\par
00113     v[4] = 2;\par
00114     v[5] = 1;\par
00115     {\cf18 int} n = 6;\par
00116 \par
00117     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00118     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00119     \par
00120 \par
00121     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00122         printf({\cf22 "%d "},p1[i]);\par
00123     \}\par
00124     printf({\cf22 "\\n"});\par
00125     \par
00126     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00127         printf({\cf22 "%d "},p2[i]);\par
00128     \}\par
00129     printf({\cf22 "\\n"});\par
00130     \par
00131     free(p1);\par
00132     free(p2);\par
00133     {\cf19 return} 0;\par
00134 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master_artifacts/tests/test_same_file_similar_functions.c File Reference\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_similar_functions.c}
{\xe \v master_artifacts/tests/test_same_file_similar_functions.c}
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for test_same_file_similar_functions.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master__artifacts_2tests_2test__same__file__similar__functions_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_to_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b sorted_by_distance_of_median} (int {\b v}[], int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int argc, char * argv[])}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b test_same_file_similar_functions.c}.}\par
}
{\xe \v sorted_by_distance_of_median\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:sorted_by_distance_of_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_of_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b test_same_file_similar_functions.c}.}\par
}
{\xe \v sorted_by_distance_to_median\:test_same_file_similar_functions.c}
{\xe \v test_same_file_similar_functions.c\:sorted_by_distance_to_median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * sorted_by_distance_to_median (int v[], int n)}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b test_same_file_similar_functions.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_same_file_similar_functions.c\par \pard\plain 
{\tc\tcl2 \v master_artifacts/tests/test_same_file_similar_functions.c}
{\xe \v master_artifacts/tests/test_same_file_similar_functions.c}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 \par
00004 {\cf20 //the two functions below will compute the vector permutation p}\par
00005 {\cf20 //which returns a list of the index of elements sorted by distance of median}\par
00006 {\cf20 //I do not care about ties.}\par
00007 \par
00008 \par
00009 {\cf18 int} *sorted_by_distance_to_median({\cf18 int} v[], {\cf18 int} n)\{\par
00010 \par
00011     {\cf18 int} *v_sorted = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00012     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00013     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00014     {\cf18 int} median;\par
00015 \par
00016     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00017         v_sorted[i] = i;\par
00018     \}\par
00019 \par
00020     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00021         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00022             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00023                 {\cf18 int} aux = v_sorted[j];\par
00024                 v_sorted[j] = v_sorted[j+1];\par
00025                 v_sorted[j+1] = aux;\par
00026             \}\par
00027         \}\par
00028     \}\par
00029 \par
00030     median = v[v_sorted[n/2]];\par
00031         \par
00032     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00033         dist_to_median[i] = v[i]-median;\par
00034         {\cf19 if}(dist_to_median[i] < 0)\{\par
00035             dist_to_median[i] *= -1;\par
00036         \}\par
00037     \}\par
00038 \par
00039     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00040         p[i] = i;\par
00041     \}\par
00042 \par
00043     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00044         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00045             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00046                 {\cf18 int} aux = p[j];\par
00047                 p[j] = p[j+1];\par
00048                 p[j+1] = aux;\par
00049             \}\par
00050         \}\par
00051     \}\par
00052 \par
00053     free(v_sorted);\par
00054     free(dist_to_median);\par
00055     {\cf19 return} p;\par
00056 \}\par
00057 \par
00058 {\cf18 int} *sorted_by_distance_of_median({\cf18 int} v[], {\cf18 int} n)\{\par
00059 \par
00060     {\cf18 int} median;\par
00061     {\cf18 int} *p = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00062     {\cf18 int} *v_sorted= ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00063     {\cf18 int} *dist_to_median = ({\cf18 int}*)malloc(n*{\cf17 sizeof}({\cf18 int}));\par
00064 \par
00065 \par
00066     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00067         v_sorted[i] = i;\par
00068     \}\par
00069 \par
00070     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00071         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00072             {\cf19 if}(v[v_sorted[j]] > v[v_sorted[j+1]])\{\par
00073                 {\cf18 int} aux = v_sorted[j];\par
00074                 v_sorted[j] = v_sorted[j+1];\par
00075                 v_sorted[j+1] = aux;\par
00076             \}\par
00077         \}\par
00078     \}\par
00079 \par
00080     median = v[v_sorted[n/2]];\par
00081 \par
00082     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00083         dist_to_median[i] = v[i]-median;\par
00084         {\cf19 if}(dist_to_median[i] < 0)\par
00085             dist_to_median[i] = -dist_to_median[i];\par
00086     \}\par
00087 \par
00088     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\par
00089         p[i] = i;\par
00090 \par
00091     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00092         {\cf19 for}({\cf18 int} j = 0; j < n-1; j++)\{\par
00093             {\cf19 if}(dist_to_median[p[j]] > dist_to_median[p[j+1]])\{\par
00094                 {\cf18 int} aux = p[j];\par
00095                 p[j] = p[j+1];\par
00096                 p[j+1] = aux;\par
00097             \}\par
00098         \}\par
00099     \}\par
00100 \par
00101     free(dist_to_median);\par
00102     free(v_sorted);\par
00103     {\cf19 return} p;\par
00104 \}\par
00105 \par
00106 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\{\par
00107 \par
00108     {\cf18 int} v[6];\par
00109     v[0] = 5;\par
00110     v[1] = 3;\par
00111     v[2] = 4;\par
00112     v[3] = 1;\par
00113     v[4] = 2;\par
00114     v[5] = 1;\par
00115     {\cf18 int} n = 6;\par
00116 \par
00117     {\cf18 int} *p1 = sorted_by_distance_to_median(v,n);\par
00118     {\cf18 int} *p2 = sorted_by_distance_of_median(v,n);\par
00119     \par
00120 \par
00121     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00122         printf({\cf22 "%d "},p1[i]);\par
00123     \}\par
00124     printf({\cf22 "\\n"});\par
00125     \par
00126     {\cf19 for}({\cf18 int} i = 0; i < n; i++)\{\par
00127         printf({\cf22 "%d "},p2[i]);\par
00128     \}\par
00129     printf({\cf22 "\\n"});\par
00130     \par
00131     free(p1);\par
00132     free(p2);\par
00133     {\cf19 return} 0;\par
00134 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
